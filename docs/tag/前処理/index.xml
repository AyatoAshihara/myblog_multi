<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前処理 | 京都の電子部品メーカーで働く社会人が研究に没頭するブログ</title>
    <link>/tag/%E5%89%8D%E5%87%A6%E7%90%86/</link>
      <atom:link href="/tag/%E5%89%8D%E5%87%A6%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <description>前処理</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ja</language><lastBuildDate>Fri, 25 Mar 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>前処理</title>
      <link>/tag/%E5%89%8D%E5%87%A6%E7%90%86/</link>
    </image>
    
    <item>
      <title>【徹底比較】センチメントスコア算出手法！！ - 第3回</title>
      <link>/post/post28/</link>
      <pubDate>Fri, 25 Mar 2022 00:00:00 +0000</pubDate>
      <guid>/post/post28/</guid>
      <description>&lt;p&gt;おはこんばんにちは。センチメントスコア算出企画の第3弾です。
今回はナイーブベイズ分類器のセンチメントスコア算出方法を実践します。&lt;/p&gt;
&lt;h2 id=&#34;1-分析手法の説明&#34;&gt;1. 分析手法の説明&lt;/h2&gt;
&lt;h3 id=&#34;ナイーブベイズ分類器とは&#34;&gt;ナイーブベイズ分類器とは&lt;/h3&gt;
&lt;p&gt;ナイーブベイズ分類器、または単純ベイズ分類器と呼ばれる手法です。分類問題をベイズの定理を用いて解く手法を指します。まず、ベイズの定理から説明します。入力情報$X$が与えられた時に、出力$Y$が得られる確率は以下で表すことができます。&lt;/p&gt;
&lt;p&gt;$$
P(Y|X) = \frac{P(X|Y)P(Y)}{P(X)}
$$&lt;/p&gt;
&lt;p&gt;これがベイズの定理で、$P(Y)$は事前確率、$P(Y|X)$は事後確率、$P(X|Y)$は尤度と呼ばれます。ナイーブベイズ分類器が利用される典型的な問題に迷惑メールの分類問題があります。この問題だと、$X$は受信メールに含まれている単語、$Y$は迷惑メールかどうかを表す2値(0,1)のデータとなります。受信メールに$\hat{X}$という単語が含まれている際に、そのメールが迷惑メール($Y=1$)である確率は$P(Y=1|X=\hat{X})$であり、それは以下の3つで求められます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;迷惑メールが発生する確率$P(Y=1)$&lt;/li&gt;
&lt;li&gt;そのメールが迷惑メールだった際に単語$\hat{X}$が含まれている確率$P(X=\hat{X}|Y=1)$&lt;/li&gt;
&lt;li&gt;単語$\hat{X}$が発生する確率$P(X=\hat{X})$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ただし、事後確率によって文書分類を行う際には、上式の確率を計算する必要はありません。知りたいのは確率の値ではなく、ある$X$が与えられた時に$P(Y=1|X)$と$P(Y=0|X)$のどちらが大きいかですので、共通している分母は計算から除外することができ、分子$P(X|Y)P(Y)$をそれぞれ計算し、その大小関係によって迷惑メールかどうかを割り振ればよいことになります。&lt;br&gt;
また、上記は迷惑メールの分類に限らず、今回行おうとしているセンチメント情報、つまりその文書内容がポジティブかネガティブかを分類する問題に対しても使えることがわかると思います。&lt;/p&gt;
&lt;h3 id=&#34;事後確率の推定方法&#34;&gt;事後確率の推定方法&lt;/h3&gt;
&lt;p&gt;求めたい事後確率の分子を求める方法について説明します。その計算のためには事前確率$P(Y)$と尤度$P(Y|X)$を求める必要がありますが、基本的にそれぞれにパラメトリックな確率分布を仮定するため、確率分布のパラメータを推定する必要があります。なお、事前確率が従う確率分布を事前分布と呼びます。&lt;br&gt;
入力単語ベクトルを$X={x_1,x_2,&amp;hellip;,x_N}$とします。ここで、各$x_n$は$n$番目の単語を表します。各$x_n$が生起する条件付確率は語順や周辺の単語に依存しないと仮定すると、$P(X|Y)$は以下のように書き替えることができます。&lt;/p&gt;
&lt;p&gt;$$
P(X|Y) = \Pi_{i=1}^N P(x_i|Y)
$$&lt;/p&gt;
&lt;p&gt;では、上記の条件付確率をどのように求めるかに話を移しましょう。今、$P(・)$のそれぞれにとある確率分布を仮定すると、$P(X|Y)P(Y)$は&lt;/p&gt;
&lt;p&gt;$$
P(Y;\Theta,\Phi)P(X;\Theta|Y) \tag{1}
$$
と書けます。ここで、$\Theta={\theta_1,\theta_2,&amp;hellip;,\theta_M}, \Phi={\phi_1,\phi_2,&amp;hellip;,\phi_L}$は確率分布のパラメータです。このパラメータを求めることができれば、(1)を計算でき、$X$が与えられた際の$Y={0,1}$のそれぞれの事後確率を求めることができます。 &lt;br&gt;
このようにして、事後確率の推定問題を確率分布のパラメータの推定問題に帰着させることができました。具体的に、どのようにしてパラメータを推定するのかについて、見ていきましょう。&lt;br&gt;
学習データセットとして、&lt;/p&gt;
&lt;p&gt;$$
{(S,T)} = (Y=S_1,X=T_1), (Y=S_2,X=T_2), &amp;hellip;,(Y=S_D,X=T_D)
$$&lt;/p&gt;
&lt;p&gt;が得られているとします。ここで、$D$はサンプルサイズです。また、$Y$は$1$の時にポジティブ、$0$の時にネガティブとし、独立を仮定します(つまり$S$は0,1の2値を取る)。最も望ましいパラメータ$\Phi$の値は、学習データセットの(1)の同時確率を最大にするパラメータを推定値として選択することにし、$\Theta$は事前にわかっている知識を用いて何らかの値を定めます。つまり、以下を最大にするということです。&lt;/p&gt;
&lt;p&gt;$$
M(\Theta,\Phi) = \Pi_{j=1}^{D}P(S_j;\Theta,\Phi)P(T_j;\Theta|S_j) \tag{2}
$$&lt;/p&gt;
&lt;p&gt;(2)は以下のように変形することができます。&lt;/p&gt;
&lt;div&gt;
$$
\begin{eqnarray*}
M(\Theta,\Phi) &amp;=&amp; P(T_1;\Theta|0)P(0;\Theta,\Phi)×P(T_2;\Theta|0)P(0;\Theta,\Phi)×...\\
&amp;&amp;×P(T_Q;\Theta|0)P(0;\Theta,\Phi)×P(T_{Q+1};\Theta|1)P(1;\Theta,\Phi) \\
&amp;=&amp; \Pi_{k=0}^1P(k;\Theta,\Phi)\Pi_{i=1}^{Q_k}P(T_{Q_i};\Theta|k) \tag{3}
\end{eqnarray*}
$$
&lt;/div&gt;
&lt;div&gt;
ここで、$Q_k$は$Y=k$となる学習データの個数を表しています。  
&lt;/div&gt;
&lt;h3 id=&#34;確率分布のパラメータの推定方法&#34;&gt;確率分布のパラメータの推定方法&lt;/h3&gt;
&lt;p&gt;次に気になるのは$\Theta, \Phi$を具体的にどのようにして計算するかです。これは確率分布を特定しないと進めないため、尤度には多項分布、事前分布にはディリクレ分布を仮定します。一般的な仮定だと思います。多項分布とは確率密度関数が以下のような確率分布です。&lt;/p&gt;
&lt;p&gt;$$
P(n_1,&amp;hellip;,n_k) = \frac{n!}{n_1!&amp;hellip;n_k!}p_1^{n_1}&amp;hellip;p_k^{n_k}
$$&lt;/p&gt;
&lt;p&gt;ここで、$n_i$は非負で$n=n_1+&amp;hellip;+n_k$です。また、$p_1+&amp;hellip;p_k=1$を満たします。多項分布は名前から分かるとおり、二項分布の拡張版です。二項分布はコイン投げが例として使われますが、多項分布はサイコロ投げが従う分布です($n=6, p_i=1/6$)。テキスト解析の文脈では、$n_i$は文章に含まれる単語$i$の出現回数になります。&lt;br&gt;
ディリクレ分布は同時確率密度関数が以下のような確率分布です。&lt;/p&gt;
&lt;p&gt;$$
f(x_1,&amp;hellip;,x_n) = \frac{\Gamma(\alpha)}{\Gamma(\alpha_1)&amp;hellip;\Gamma(\alpha_n)}x_1^{\alpha_1-1}&amp;hellip;x_n^{\alpha_n-1}
$$&lt;/p&gt;
&lt;p&gt;ここで、$x_i$は非負で$x_1+&amp;hellip;+x_n=1$、$\alpha_1+&amp;hellip;+\alpha_n=\alpha$はパラメータです。今、$\alpha_i$を正の整数とすると$\Gamma(\alpha_i)=(\alpha_{i-1})!$より、&lt;/p&gt;
&lt;p&gt;$$
f(x_1,&amp;hellip;,x_n) = \frac{(\alpha-1)!}{(\alpha_{1}-1)!&amp;hellip;(\alpha_n-1)!}x_1^{\alpha_1-1}&amp;hellip;x_n^{\alpha_n-1}
$$&lt;/p&gt;
&lt;p&gt;となります。多項分布とディリクレ分布の確率分布を見比べると、とても似た形であることがわかります。両者は形は似ていますが、関数の入力が異なります。多項分布は各単語の生起確率がパラメータ、指数部分の出現回数が入力である一方、ディリクレ分布は生起確率が入力、出現回数がパラメータになります。また、ディリクレ分布は多項分布の共役事前分布となっています。 これらの確率分布を仮定すると、(3)は以下のようになります。&lt;/p&gt;
&lt;div&gt;
$$
\begin{eqnarray*}
M(\vec{p};\vec{\alpha}) &amp;\propto&amp; \frac{1}{Z(\vec{\alpha})}\Pi_{k=0}^1\Pi_{i=1}^Vp_{k_i}^{\alpha_{i}-1}\Pi_{j=1}^V p_{k_{j}}^{\tau_{k_{j}}} \\
&amp;=&amp; \frac{1}{Z(\vec{\alpha})}\Pi_{k=0}^1 \Pi_{j=1}^V p_{k_{j}}^{\tau_{k_{j}}+\alpha_j-1} \tag{4}
\end{eqnarray*}
$$
&lt;/div&gt;
&lt;p&gt;ここで、$p_{k_j}$はポジティブ(またはネガティブ)である文書($k={1,0}$)で単語$j$が出現する確率、$\tau_{k_j}=\sum_{i=1}^{Q_k}c_{kij}$はポジティブ(またはネガティブ)である教師データに含まれる単語$j$の総数、$\alpha_j$は単語$j$のディリクレ分布のパラメータ、$V$は単語数の上限を表しています。$Z(\vec{\alpha})$は確率の総和を1とするための正規化定数で、ベイズ統計学では分配関数と呼ばれます。(3)に対応させると、$\Theta=\vec{p}={p_{k_j}}_{k_j=0_1}^{1_V}$、$\Phi=\vec{\alpha}={\alpha_j}_{j=1}^V$となります。ここから、パラメータ$p_{k_{j}}$の推定値を$M(\vec{\alpha};\vec{p})$を最大にする値として求めます。ただし、以下の制約条件があります。&lt;/p&gt;
&lt;p&gt;$$
\sum_{j=1}^V p_{k_{j}}=1
$$&lt;/p&gt;
&lt;p&gt;つまり、以下の最適化問題として定式化できます。&lt;/p&gt;
&lt;div&gt;
$$
\begin{eqnarray*}
\hat{p}_{k_j} &amp;=&amp; \underset{{p_{k_j}}}{\arg\max}~M(\vec{p};\vec{\alpha})~~s.t.\sum_{j=1}^V p_{k_{j}}=1\\
&amp;=&amp;\underset{{p_{k_j}}}{\arg\max}~\frac{1}{Z(\vec{\alpha})}\Pi_{k=0}^1 \Pi_{j=1}^V p_{k_{j}}^{\tau_{k_{j}}+\alpha_j-1}~~s.t.\sum_{j=1}^V p_{k_{j}}=1
\end{eqnarray*}
$$
&lt;/div&gt;
&lt;p&gt;この問題を解くためにラグランジュ未定乗数法を使用します。&lt;/p&gt;
&lt;div&gt;
$$
\begin{eqnarray*}
L &amp;=&amp; (\frac{1}{Z(\vec{\alpha})}\Pi_{k=0}^1 \Pi_{j=1}^V p_{k_{j}}^{\tau_{k_{j}}+\alpha_j-1}-\lambda(1-\sum_{k=1}^V p_{k_{j}})) \\
\frac{\partial L}{\partial p_{l_m}}
&amp;=&amp; (\tau_{l_m}+\alpha_m-1)p_{l_m}^{\tau_{l_m}+\alpha_m-2}\frac{1}{Z(\vec{\alpha})}\Pi_{k\neq l}^1 \Pi_{j\neq m}^V p_{k_{j}}^{\tau_{k_{j}}+\alpha_j-1}-\lambda \\
&amp;=&amp; (\tau_{l_m}+\alpha_m-1)p_{l_m}^{-1}\frac{1}{Z(\vec{\alpha})}\Pi_{k=0}^1 \Pi_{j=1}^V p_{k_{j}}^{\tau_{k_{j}}+\alpha_j-1}-\lambda \\
p_{l_m} &amp;=&amp; \frac{(\tau_{l_m}+\alpha_m-1)}{\lambda}\frac{1}{Z(\vec{\alpha})}\Pi_{k=0}^1 \Pi_{j=1}^V p_{k_{j}}^{\tau_{k_{j}}+\alpha_j-1} \tag{5}
\end{eqnarray*}
$$
&lt;/div&gt;
上記のように解けます。ここで、制約条件を用いて上式の両辺で総和を取ると、
&lt;div&gt;
$$
\begin{eqnarray*}
1 &amp;=&amp; \sum_{m=1}^V \frac{(\tau_{l_m}+\alpha_m-1)}{\lambda}\frac{1}{Z(\vec{\alpha})}\Pi_{k=0}^1 \Pi_{j=1}^V p_{k_{j}}^{\tau_{k_{j}}+\alpha_j-1} \\
\lambda &amp;=&amp; \sum_{m=1}^V (\tau_{l_m}+\alpha_m-1)\frac{1}{Z(\vec{\alpha})}\Pi_{k=0}^1 \Pi_{j=1}^V p_{k_{j}}^{\tau_{k_{j}}+\alpha_j-1}
\end{eqnarray*}
$$
&lt;/div&gt;
&lt;p&gt;となるので、$\lambda$を(5)式に代入すると、&lt;/p&gt;
&lt;div&gt;
$$
\hat{p}_{l_m} = \frac{(\tau_{l_m}+\alpha_m-1)}{\sum_{m=1}^V (\tau_{l_m}+\alpha_m-1)} \tag{6}
$$
&lt;/div&gt;
&lt;p&gt;と、事後分布を最大にするパラメータを求めることができます。$p_{l_m}$の直感的な解釈は、ポジティブ(ネガティブ)な文脈での単語$m$の出現頻度が全ての単語の出現頻度に占める割合です。ただ、それだけだと学習データに含まれない単語の$p_{l_m}$が０となってしまい、事後確率も0となってしまいます。上記では、事前分布にディリクレ分布を使用しているため、$p_{l_m}$が0にならないことがわかります($+\alpha_m$の部分)。所謂、頻度ゼロ問題を解決しています。&lt;/p&gt;
&lt;p&gt;ところで、ディリクレ分布の$\alpha_m$は事前にわかっている知識を用いて何らかの値を定めると言っていましたが、どのようにして求めるのでしょうか？推定値を見ればわかる通り、$\alpha_m$は文書内における単語$m$の主観的な出現頻度を表していると解釈できます。ですが、正直$\alpha_m$に意味を持たせている人は少なく、先述した頻度ゼロ問題を解決できればよいと考えている人が大半ではないでしょうか。つまり、$\alpha_m=\alpha+1$($\alpha$は定数、例えば1とか)としてしまうということです。これは加算スクリーニングと呼ばれます。&lt;/p&gt;
&lt;p&gt;さて、このようにして求めた分類器で分類を行います。思考実験として、1つの単語を除いて他の単語がニュートラルかつ各単語の出現頻度が全て同じ文書を考えます。この場合、その1つの単語が両文脈(ポジティブ/ネガティブ)のうち相対的に頻出である文脈へ分類されることになります。&lt;/p&gt;
&lt;p&gt;ナイーブベイズ分類器は教師あり学習です。つまり、正解ラベルデータを用意する必要があります。これがナイーブベイズ分類器の欠点ですが、一方でデータがある場合には特殊な文脈でも分類が可能です。&lt;/p&gt;
&lt;h3 id=&#34;ナイーブベイズ分類器の利点欠点&#34;&gt;ナイーブベイズ分類器の利点・欠点&lt;/h3&gt;
&lt;p&gt;ナイーブベイズ分類器の利点・欠点は以下のようなものだと思います。&lt;/p&gt;
&lt;p&gt;&amp;lt;利点👍&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;辞書が不要&lt;/li&gt;
&lt;li&gt;未知語が出現しても分類できる&lt;/li&gt;
&lt;li&gt;分類過程がわかりやすい&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;欠点👎&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学習のための教師ありデータセットが必要&lt;/li&gt;
&lt;li&gt;文章の語順を考慮できない(bag of words)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欠点の文章の語順を考慮できないという点は辞書ベース手法にも当てはまりますが、&lt;strong&gt;文章中の単語の発生回数を使用しているため、語順の関係性や係り受けといった情報を活用することができません&lt;/strong&gt;。そのため、例えば「良くない」のような肯定語を否定するような言い回しは、ポジティブと分類されやすい可能性があります。&lt;/p&gt;
&lt;h2 id=&#34;2-ナイーブベイズ分類器の実践&#34;&gt;2. ナイーブベイズ分類器の実践&lt;/h2&gt;
&lt;p&gt;ここからは、ナイーブベイズ分類器を用いて実際に分析をしていきます。学習データセットの景気ウオッチャー調査では、タクシー運転手や小売店の店主、旅館の経営者など景気に敏感な方々(景気ウオッチャー)に対して、5段階の景況感とその理由を毎月アンケートしています。5段階は、「良い(◎)」、「やや良い(○)」、「変わらない(■)」、「やや悪い(▲)」、「悪い(×)」となっています。&lt;br&gt;
まずサンプルデータを読み込みます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;filePath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\hogehoge\Watchder\RawData\*.csv&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; glob

files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glob&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glob(filePath)
lists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; file &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; files:
  df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(file, encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shift-jis&amp;#34;&lt;/span&gt;)
  lists&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(df)

sample &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat(lists, axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, ignore_index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
sample &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sample[((sample&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;追加説明及び具体的状況の説明&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;−&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;(sample&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;追加説明及び具体的状況の説明&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;＊&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;False)]
sample &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sample[sample&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;景気の現状判断&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;□&amp;#39;&lt;/span&gt;]
corpus &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sample&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;追加説明及び具体的状況の説明&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;・&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
corpus&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 0                              店頭の取扱額が前年比約120％と好調であった。
## 1    当施設の利用乗降客数は１月26日時点で前年比130.1％となっており、１月としては過去最高の...
## 2    年末の消費の反動もあってか、客の動きがやや鈍い。ただ、相変わらず高額商材が売れているというこ...
## 3    外国人観光客による売上が前年比152％と好調を継続しているほか、来客数が前年比102％と好調...
## 4          積極的に景気が上向きにあるとまではいいづらいものの、３か月前との比較では改善している。
## Name: 追加説明及び具体的状況の説明, dtype: object
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;なお、自由記述部分(追加説明及び具体的状況の説明)が「－」は回答が存在しない、「＊」は主だった回答等が存在しないため、サンプルから除外しています。  また、景気の現状判断が「変わらない(■)」のデータは分類対象外とするため、こちらもサンプルから除外しています。&lt;br&gt;
次に、分類対象となるラベル(景気の現状判断)を数値へ加工します。「良い(◎)」と「やや良い(○)」を1、「やや悪い(▲)」、「悪い(×)」を0とする2値分類です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; LabelEncoder

score_mapping &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;◎&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;○&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;▲&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;×&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;}
labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sample&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;景気の現状判断&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;map(score_mapping)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;自由記述部分の処理を行います。前節で説明したとおり、ナイーブベイズ分類器は入力変数として、各文章に含まれる単語の出現回数が必要です。このデータを作成するためには、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;サンプルデータの文章を形態素に分解&lt;/li&gt;
&lt;li&gt;各文中に形態素が出現する回数をカウント&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;の処理が必要です。英語であれば、この処理は&lt;code&gt;sklearn.feature_extraction.CountVectorizer&lt;/code&gt;が行ってくれますが、日本語の場合はそうはいかず、形態素解析のための関数を渡してやる必要があります。よって、入力：文章ベクトル、出力：形態素のリストとなる関数&lt;code&gt;tokenizer_sudachi&lt;/code&gt;を定義し、それを&lt;code&gt;sklearn.feature_extraction.CountVectorizer&lt;/code&gt;の引数&lt;code&gt;analyzer&lt;/code&gt;に渡しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sudachipy &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tokenizer
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sudachipy &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; dictionary
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.feature_extraction.text &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; CountVectorizer

tokenizer_obj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dictionary&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Dictionary()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create()
mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SplitMode&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;A
tokenizer_sudachi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; t: [m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;normalized_form() &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; tokenizer_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tokenize(t, mode)]

vectorizer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CountVectorizer(analyzer&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tokenizer_sudachi)
counts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vectorizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fit_transform(corpus)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;counts&lt;/code&gt;はサンプルサイズ×出現単語総数となる&lt;code&gt;sparse matrix&lt;/code&gt;で、これがナイーブベイズ分類器の入力変数となります。&lt;br&gt;
入力&lt;code&gt;counts&lt;/code&gt;と出力&lt;code&gt;labels&lt;/code&gt;が準備できたので、&lt;code&gt;sklearn.model_selection.train_test_split&lt;/code&gt;を使って学習データとテストデータにランダムに分割します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.model_selection &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; train_test_split

X_train, X_test, y_train, y_test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; train_test_split(counts, labels, test_size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, random_state&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;前回の辞書ベース手法ではサンプル全体を用いて予測を行いました。それは辞書に含まれる極性スコアが景気ウオッチャー調査のサンプルデータをもとに作成したものではなく、過学習しないためです。ただ、今回のナイーブベイズ分類器はそのデータを用いてパラメータの学習を行う教師あり学習のため、その性能を適切に評価するためには学習データ以外のデータを検証用に残しておく必要があります。&lt;br&gt;
いよいよ、学習パートに入ります。学習には&lt;code&gt;sklearn.naive_bayes.MultinomialNB&lt;/code&gt;を使用します。これは前節で説明した(6)でパラメータの推計を行い、予測モデルを構築するクラスとなっています。引数として&lt;code&gt;alpha&lt;/code&gt;を指定する必要がありますが、これは事前分布であるディリクレ分布の$\alpha$です。デフォルト値である1を指定すると、加算スクリーニングとなります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.naive_bayes &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; MultinomialNB
clf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MultinomialNB(alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;clf&lt;/code&gt;としてインスタンス化することができました。
では、&lt;code&gt;fit()&lt;/code&gt;メソッドを用いて、学習を行います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;clf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fit(X_train, y_train)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## MultinomialNB()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;学習が完了しました。&lt;code&gt;score()&lt;/code&gt;メソッドで学習データに対する正解率を確認してみましょう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;clf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;score(X_train, y_train)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 0.874935083329399
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;およそ87.5%ということで、高い正解率を得ることが出来ました。&lt;br&gt;
ただ、学習データに対して過学習している可能性があるため、テストデータでの精度も確認してみましょう。テストデータの予測値を計算するためには&lt;code&gt;predict&lt;/code&gt;メソッドを使用します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;y_pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;predict(X_test)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、混同行列(ConfusionMatrix)を作成します。これは分類モデルの性能を評価するために用いられるもので、横軸に予測値、縦軸に実際の値をとり、(1,1)と(2,2)要素に多くサンプルが集まるほど正しい予測ができています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.metrics &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; classification_report, confusion_matrix, ConfusionMatrixDisplay
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

ConfusionMatrixDisplay(confusion_matrix(y_test, y_pred))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## &amp;lt;sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x000000000EC7CA48&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post28/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;たまに、正解率が高くてもほとんど0を予測するだけのモデルになっており、正解データも0が多いデータであるため、見かけ上上手く分類することができていることもありますが、今回に限ってはしっかりと識別できているようです。正例よりも負例の予測精度が高いようです。単純に負例のサンプルサイズが大きいのが原因かも知れません。&lt;br&gt;
最後に、性能評価のための分類指標を記載します。各指標の意味はここでは説明しませんが、正解率は学習データと変わらず、過学習はしていないようです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(classification_report(y_test, y_pred))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##               precision    recall  f1-score   support
## 
##            0       0.87      0.88      0.87     13223
##            1       0.79      0.78      0.78      7958
## 
##     accuracy                           0.84     21181
##    macro avg       0.83      0.83      0.83     21181
## weighted avg       0.84      0.84      0.84     21181
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-終わりに&#34;&gt;3. 終わりに&lt;/h3&gt;
&lt;p&gt;このpostではナイーブベイズ分類器を用いたセンチメント情報の抽出ならびに文書分類問題の実践を行いました。
&lt;code&gt;sklearn.naive_bayes.MultinomialNB&lt;/code&gt;クラスを用いれば、比較的容易に分析を行うことが出来ます。テストデータの精度も高く、教師あり学習の威力を思い知りました。いきなり深層学習を行うのではなく、まずはナイーブベイズ分類器から開始するのが良さそうです。&lt;br&gt;
次回は、準教師あり学習である単語埋め込み(Word Embedding)を用いた方法について紹介します！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【徹底比較】センチメントスコア算出手法！！ - 第2回</title>
      <link>/post/post27/</link>
      <pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate>
      <guid>/post/post27/</guid>
      <description>&lt;script src=&#34;../../post/post27/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../post/post27/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../post/post27/index_files/bsTable/bootstrapTable.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../post/post27/index_files/bsTable/bootstrapTable.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../post/post27/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../post/post27/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../post/post27/index_files/bsTable/bootstrapTable.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../post/post27/index_files/bsTable/bootstrapTable.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../post/post27/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../post/post27/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../post/post27/index_files/bsTable/bootstrapTable.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../post/post27/index_files/bsTable/bootstrapTable.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;おはこんばんにちは。センチメントスコア算出企画の第2弾です。
今回は辞書ベースのセンチメントスコア算出方法を実践します。&lt;/p&gt;
&lt;h2 id=&#34;1-分析手法の説明&#34;&gt;1. 分析手法の説明&lt;/h2&gt;
&lt;h3 id=&#34;辞書ベース手法とは&#34;&gt;辞書ベース手法とは&lt;/h3&gt;
&lt;p&gt;辞書ベース手法はその名の通り、辞書を用いてセンチメントスコアを算出する手法です。各単語が持つ感情極性(ここでは、ポジティブな意味かネガティブな意味かを表す)をスコア化したものをあらかじめ辞書として保存し、文書内で出現した単語とそれぞれの辞書スコアを紐付け、(何らかの方法で)集計することで、その文書全体のセンチメントスコアを算出します。&lt;/p&gt;
&lt;h3 id=&#34;センチメントスコアを参照する辞書&#34;&gt;センチメントスコアを参照する辞書&lt;/h3&gt;
&lt;p&gt;上記においては、スコアをどのように算出するのかが重要になります。現在公開されている日本語辞書の中で有名な東京工業大学の高村研究室が作成した辞書(Takamura, Inui, and Okumura 2005)では以下のような方法で算出を行っているようです(&lt;a href=&#34;http://lr-www.pi.titech.ac.jp/wp/?page_id=4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;原典はこちら&lt;/a&gt;)。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;まず，辞書，シソーラス（類義語辞典），コーパスデータを用いて，極性が同じになりやすい単語ペアを抽出し，そしてそれらのペアを連結することにより巨大な語彙ネットワークを構築します．たとえば，「良い」と「良好」が類義語関係にあるので，この二単語を結ぶなどの作業を行います．ここで，単語の感情極性を電子スピンの方向とみなし，語彙ネットワークをスピン系とみなして，語彙ネットワークの状態（各スピンがどの方向を向いているか）を計算します．この計算結果を見ることにより，単語の感情極性がわかるのです．&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;こちらの辞書はHPで公開されており、非営利目的であれば利用が可能のようです。ちょっと覗いてみましょう。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##       単語 読み仮名   品詞 感情極性スコア
## 1   優れる すぐれる   動詞       1.000000
## 2     良い     よい 形容詞       0.999995
## 3     喜ぶ よろこぶ   動詞       0.999979
## 4   褒める   ほめる   動詞       0.999979
## 5 めでたい めでたい 形容詞       0.999645
## 6     賢い かしこい 形容詞       0.999486
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;センチメントスコアは1から-1までを取り、1に近いほどポジティブを表します。最もポジティブな単語は「優れる」となっていることがわかります。&lt;/p&gt;
&lt;h3 id=&#34;辞書ベース手法の利点欠点&#34;&gt;辞書ベース手法の利点・欠点&lt;/h3&gt;
&lt;p&gt;&amp;lt;利点&amp;gt;手法のわかりやすさ/教師データが不要👍&lt;br&gt;
辞書を利用する良い点は、手法のわかりやすさと教師データを必要としない点です。特に後者は辞書ベースならではの長所です。通常、文書分類器を作成するためには、その文書がポジティブ・ネガティブのどちらであるかという正解ラベルの付いた教師データが必要です。必要なデータは文脈にもよると思いますが、少なくとも100件は必要でしょう。これは分析者が少なくとも100件以上の文書を読んで、手作業でラベルを付与しなければならないことを意味します。&lt;/p&gt;
&lt;p&gt;&amp;lt;欠点&amp;gt;辞書の性能に結果が大きく依存する👎&lt;br&gt;
短所としては、特殊な文脈におけるセンチメントスコアを参集する場合は専用の辞書が必要になるという点です。辞書ベースの分類法の場合、辞書に含まれない単語はセンチメントスコアへ影響を全く与えません。また、一般に公開されている辞書はwikipedia等のオールジャンルの文書を学習することによって開発されていることが多いため、感情極性が文脈に対してニュートラルになっています。よって、例えば金融等の文脈におけるセンチメントスコアを算出する場合、専門用語の感性極性が0となったり、文脈を考慮した感性極性が得られないことから、直感と異なる結果が出る可能性があります。&lt;/p&gt;
&lt;h2 id=&#34;2-辞書ベース手法の実践&#34;&gt;2. 辞書ベース手法の実践&lt;/h2&gt;
&lt;h3 id=&#34;使用データ&#34;&gt;使用データ&lt;/h3&gt;
&lt;p&gt;では、実際に辞書ベース手法を用いて、景気ウォッチャー調査の文章からセンチメントスコアの抽出を試みます。景気ウオッチャー調査では、タクシー運転手や小売店の店主、旅館の経営者など景気に敏感な方々(景気ウオッチャー)に対して、5段階の景況感とその理由を毎月アンケートしています。5段階は、「良い(◎)」、「やや良い(○)」、「変わらない(■)」、「やや悪い(▲)」、「悪い(×)」となっています。&lt;/p&gt;
&lt;p&gt;データを覗いてみると、以下のようになっています。&lt;/p&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
基準年
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
基準日
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
景気の現状判断
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
業種・職種
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
判断の理由
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
追加説明及び具体的状況の説明
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
◎
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
旅行代理店（従業員）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
販売量の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・店頭の取扱額が前年比約120％と好調であった。
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
◎
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
観光名所（従業員）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
来客数の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・当施設の利用乗降客数は１月26日時点で前年比130.1％となっており、１月としては過去最高の利用乗降客数になることが確定したほどの入込状況にある。
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
一般小売店［酒］（経営者）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
単価の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・年末の消費の反動もあってか、客の動きがやや鈍い。ただ、相変わらず高額商材が売れているということもあり、売上はそれなりの金額をキープしている。
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
百貨店（売場主任）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
お客様の様子
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・外国人観光客による売上が前年比152％と好調を継続しているほか、来客数が前年比102％と好調を維持している。月半ばに停滞した売上も下旬に入ってから回復傾向にあり、定価品、バーゲン品とも前年を上回っている。
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
百貨店（担当者）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
来客数の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・積極的に景気が上向きにあるとまではいいづらいものの、３か月前との比較では改善している。
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
百貨店（販売促進担当）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
それ以外
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・気温が平年並みとなり、これまでの温暖、少雪の状態がみられなくなってきたことで、防寒衣料、雑貨商材を中心に多少改善の傾向がみられる。
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;「景気の現状判断」が景況感を表しており、その判断の理由が「追加説明及び具体的状況の説明」にある形です。よって、前者を教師データ、後者を説明データとする教師あり学習データとして利用することができます。&lt;/p&gt;
&lt;h3 id=&#34;センチメントスコアの抽出&#34;&gt;センチメントスコアの抽出&lt;/h3&gt;
&lt;p&gt;では、実践です。&lt;code&gt;quanteda&lt;/code&gt;というパッケージを用いるため、&lt;code&gt;R&lt;/code&gt;で行っていきます。&lt;br&gt;
まず、前処理です。サンプルデータを読み込みます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;filepath &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; r&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(C:\Users\hogehoge\Watcher\RawData)&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(magrittr)
files &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; stringr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(filepath, &lt;span style=&#34;color:#a6e22e&#34;&gt;list.files&lt;/span&gt;(filepath, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.csv&amp;#34;&lt;/span&gt;))
sample &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; readr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(files,locale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;readr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;locale&lt;/span&gt;(encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Shift-JIS&amp;#34;&lt;/span&gt;),show_col_types &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
sample &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sample[sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;追加説明及び具体的状況の説明&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;−&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;追加説明及び具体的状況の説明&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;＊&amp;#34;&lt;/span&gt;,]
sample &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sample[sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;景気の現状判断&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;□&amp;#34;&lt;/span&gt;,]
sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;景気の現状判断 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;景気の現状判断, levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;◎&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;○&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;▲&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;×&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、&lt;code&gt;sudachi&lt;/code&gt;を用いてテキストデータのToken化を行います。&lt;code&gt;R&lt;/code&gt;には&lt;code&gt;sudachi&lt;/code&gt;を使えるパッケージが存在しないので、Pythonパッケージの&lt;code&gt;sudachipy&lt;/code&gt;を&lt;code&gt;reticulate&lt;/code&gt;で呼び出して使用します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;stopwords_path &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; r&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(C:\Users\hogehoge\Watcher\marimo-master\yaml\stopwords_ja.yml)&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sudachiによる形態素解析→Token化&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# stopwordsはmarimoを使用&lt;/span&gt;
ja_stopwords &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dictionary&lt;/span&gt;(yaml&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read_yaml&lt;/span&gt;(stopwords_path))
&lt;span style=&#34;color:#75715e&#34;&gt;# コーパス生成&lt;/span&gt;
corp &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;corpus&lt;/span&gt;(sample,text_field&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;追加説明及び具体的状況の説明&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# sudachipy呼び出し→インスタンス化&lt;/span&gt;
sudachipy &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; reticulate&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;import&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sudachipy&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# 正規化関数定義&lt;/span&gt;
sudachi_normalize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(tokens){
  res &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;()
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(tokens)&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)){
    res &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt;(res,tokens[i]&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;normalized_form&lt;/span&gt;())
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt;(res)
}
&lt;span style=&#34;color:#75715e&#34;&gt;# tokenize関数定義&lt;/span&gt;
sudachi_tokenize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(sentence, mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;){
  tokenizer_obj &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sudachipy&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;dictionary&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Dictionary&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;create&lt;/span&gt;()
  mode &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;switch&lt;/span&gt;(mode, 
                 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sudachipy&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;SplitMode&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;A,
                 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sudachipy&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;SplitMode&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;B,
                 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sudachipy&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;SplitMode&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;C,
                 &lt;span style=&#34;color:#a6e22e&#34;&gt;stop&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Only Can Use A, B, C&amp;#34;&lt;/span&gt;))
  res &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; purrr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt;(sentence, &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudachi_normalize&lt;/span&gt;(tokenizer_obj&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tokenize&lt;/span&gt;(., mode)))
  &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt;(res)
}

&lt;span style=&#34;color:#75715e&#34;&gt;# Token化実行&lt;/span&gt;
toks_sent &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; corp &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
              &lt;span style=&#34;color:#a6e22e&#34;&gt;sudachi_tokenize&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
              quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.tokens&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
              quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tokens_remove&lt;/span&gt;(ja_stopwords, padding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# メタデータをTokenに再付与&lt;/span&gt;
quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;docvars&lt;/span&gt;(toks_sent) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;docvars&lt;/span&gt;(corp)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この&lt;code&gt;toks_sent&lt;/code&gt;から文書行列を生成します。文書行列とは、単語と文書の関係を表す行列で、各行が単語(token)、各列が文書を表し、各要素は文書中の単語の出現回数となっています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 文書行列の生成&lt;/span&gt;
dfmt_sent &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; toks_sent &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
              quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dfm&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
              quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dfm_remove&lt;/span&gt;(pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
              quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dfm_trim&lt;/span&gt;(min_termfreq &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;文書行列&lt;code&gt;dfmt_sent&lt;/code&gt;と各単語のスコアベクトルの内積を取り、文書のセンチメントスコアを算出します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 単語感情極性対応表&lt;/span&gt;
PNdict &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read.delim&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.lr.pi.titech.ac.jp/~takamura/pubs/pn_ja.dic&amp;#34;&lt;/span&gt;,header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;,sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# 辞書の並びに合わせて文書行列の列を入れ替える。&lt;/span&gt;
dfmt_sent_arranged &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dfm_match&lt;/span&gt;(dfmt_sent, PNdict&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;V1)

&lt;span style=&#34;color:#75715e&#34;&gt;# 文書のセンチメントスコア算出&lt;/span&gt;
n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unname&lt;/span&gt;(quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rowSums&lt;/span&gt;(dfmt_sent_arranged))
score_dict &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scale&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(n&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rowSums&lt;/span&gt;(dfmt_sent_arranged &lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt; PNdict&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;V4)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;n, &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;))
sample_with_score_dict &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sample &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbind&lt;/span&gt;(score_dict) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;サンプルデータを抜き出して、センチメントスコアを観察してみましょう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;sample_with_score_dict &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  knitr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  kableExtra&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable_styling&lt;/span&gt;(bootstrap_options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;striped&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
基準年
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
基準日
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
景気の現状判断
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
業種・職種
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
判断の理由
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
追加説明及び具体的状況の説明
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
score_dict
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
◎
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
旅行代理店（従業員）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
販売量の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・店頭の取扱額が前年比約120％と好調であった。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1372119
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
◎
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
観光名所（従業員）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
来客数の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・当施設の利用乗降客数は１月26日時点で前年比130.1％となっており、１月としては過去最高の利用乗降客数になることが確定したほどの入込状況にある。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.7233374
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
一般小売店［酒］（経営者）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
単価の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・年末の消費の反動もあってか、客の動きがやや鈍い。ただ、相変わらず高額商材が売れているということもあり、売上はそれなりの金額をキープしている。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.9988214
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
百貨店（売場主任）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
お客様の様子
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・外国人観光客による売上が前年比152％と好調を継続しているほか、来客数が前年比102％と好調を維持している。月半ばに停滞した売上も下旬に入ってから回復傾向にあり、定価品、バーゲン品とも前年を上回っている。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1159495
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
百貨店（担当者）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
来客数の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・積極的に景気が上向きにあるとまではいいづらいものの、３か月前との比較では改善している。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.2269249
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
百貨店（販売促進担当）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
それ以外
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・気温が平年並みとなり、これまでの温暖、少雪の状態がみられなくなってきたことで、防寒衣料、雑貨商材を中心に多少改善の傾向がみられる。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0416559
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;2行目の文章は明らかにポジティブですが、なにが影響したのかネガティブ寄りの判定になっていますね。また、顕著なのが3行目で「鈍い」という単語に引っ張られ、ネガティブなセンチメントを抽出しやすくなっています。この文章の本意は「ただ・・・」という逆接以降の文章ですが、文脈や語順が捉えられないために正しい情報を引き出すことができていません。5行目は「積極的」、「上向き」、「改善」といった単語を検知し、かなりポジティブなセンチメントがあるという判定をしていますが、「積極的に景気が上向きとは&lt;strong&gt;いいづらい&lt;/strong&gt;」というネガティブな文脈を捉え切れておらず、過大評価となっています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 結果の可視化&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(sample_with_score_dict, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;景気の現状判断,y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;score_dict)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_boxplot&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post27/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;「景気の現状判断」毎にboxplotを書いてみましたが、ぱっと見はあまり変わらない結果になりました。
ほんの少し緩やかに右下がりのような気もしますが、文書分類可能な結果ではないことがわかります。&lt;/p&gt;
&lt;h3 id=&#34;追加検証tf-idfを用いた算出&#34;&gt;(追加検証)tf-idfを用いた算出&lt;/h3&gt;
&lt;p&gt;上記の分析では単語の出現回数を利用していましたが、tf-idfを用いた分析も行うことにします。tf-idfとは、term frequency-inverse document frequencyの略で、情報検索やテキストマイニングでよく使われる重みのことです。この重みは、ある単語がコーパス&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;の中の文書にとってどれだけ重要かを評価するために使われる統計的尺度で、その特徴量は文書中の単語の出現回数が増加するほど上昇しますが、コーパス中の単語の頻度によって相殺されます。例えば、迷惑メールを分類することを意図した電子メールのコーパスにおいて、「お知らせ」や「ニュース」などは出現頻度が高い一方でどの文書にも出現するため、迷惑メールを特定するという点においては重要度は高くありません。一方で、「当選」や「今だけ！」などはコーパス上にはそこまで出現頻度が高くない単語であるものの、迷惑メールの文章中には頻度が高く出現すると考えられます。tf-idfでは後者の単語の特徴量が高くなるように定義されています。&lt;/p&gt;
&lt;p&gt;tf-idfの計算方法はtfとidfに分かれます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tf: Term frequency
単語が文書中にどれだけ頻繁に出現しているかを測定するもの。文書の長さはそれぞれ異なるため、長い文書では短い文書よりはるかに多くの用語が出現する可能性があります。そのため、正規化の方法として、単語頻度を文書の長さ（文書内の単語総数）で割ることがよくあります。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
tf(t) = \frac{文章内の単語tの出現回数}{文章内の単語総数}
$$&lt;/p&gt;
&lt;p&gt;-idf: Inverse Document Frequency
ある単語がコーパス内でどの程度希少であるかを測定するもの。「です」、「は」、「が」などの頻出語を減らして、希少語を増やす意図があります。&lt;/p&gt;
&lt;p&gt;$$
idf(t) = \log(\frac{コーパス内の文書総数}{単語tを含む文書数})
$$&lt;/p&gt;
&lt;p&gt;&lt;code&gt;r&lt;/code&gt;で実装してみます。tf-idfは&lt;code&gt;quanteda::dfm_tfidf()&lt;/code&gt;で計算できます。引数には、文書行列を渡します。そのほかは上記の分析と同じです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# tf-idf版文書行列の生成&lt;/span&gt;
dfmt_tfidf_sent &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dfmt_sent &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dfm_tfidf&lt;/span&gt;()

&lt;span style=&#34;color:#75715e&#34;&gt;# 辞書の並びに合わせて文書行列の列を入れ替える。&lt;/span&gt;
dfmt_tfidf_sent_arranged &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dfm_match&lt;/span&gt;(dfmt_tfidf_sent, PNdict&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;V1)

&lt;span style=&#34;color:#75715e&#34;&gt;# 文書のセンチメントスコア算出&lt;/span&gt;
n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unname&lt;/span&gt;(quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rowSums&lt;/span&gt;(dfmt_tfidf_sent_arranged))
score_dict &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scale&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(n&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, quanteda&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rowSums&lt;/span&gt;(dfmt_tfidf_sent_arranged &lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt; PNdict&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;V4)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;n, &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;))
sample_with_score_dict &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sample &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbind&lt;/span&gt;(score_dict)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;先ほどと同じようにサンプルを抜き出してみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;sample_with_score_dict &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  knitr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  kableExtra&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable_styling&lt;/span&gt;(bootstrap_options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;striped&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
基準年
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
基準日
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
景気の現状判断
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
業種・職種
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
判断の理由
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
追加説明及び具体的状況の説明
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
score_dict
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
◎
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
旅行代理店（従業員）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
販売量の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・店頭の取扱額が前年比約120％と好調であった。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1641589
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
◎
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
観光名所（従業員）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
来客数の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・当施設の利用乗降客数は１月26日時点で前年比130.1％となっており、１月としては過去最高の利用乗降客数になることが確定したほどの入込状況にある。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.0770581
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
一般小売店［酒］（経営者）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
単価の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・年末の消費の反動もあってか、客の動きがやや鈍い。ただ、相変わらず高額商材が売れているということもあり、売上はそれなりの金額をキープしている。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.8631460
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
百貨店（売場主任）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
お客様の様子
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・外国人観光客による売上が前年比152％と好調を継続しているほか、来客数が前年比102％と好調を維持している。月半ばに停滞した売上も下旬に入ってから回復傾向にあり、定価品、バーゲン品とも前年を上回っている。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0510362
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
百貨店（担当者）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
来客数の動き
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・積極的に景気が上向きにあるとまではいいづらいものの、３か月前との比較では改善している。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.3897946
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2016
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1月31日
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
○
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
百貨店（販売促進担当）
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
それ以外
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
・気温が平年並みとなり、これまでの温暖、少雪の状態がみられなくなってきたことで、防寒衣料、雑貨商材を中心に多少改善の傾向がみられる。
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8152262
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;傾向は先ほどの分析とさほど変わらないように見受けられます。
boxplotの結果も見てみましょう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 結果の可視化&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(sample_with_score_dict, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;景気の現状判断,y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;score_dict)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_boxplot&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post27/index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;右下がりの傾向が強くなったかもしれません。ただ、依然として景気判断別に見たスコアの分布は差がなく、文書分類ができる精度ではないことがわかります。&lt;/p&gt;
&lt;h2 id=&#34;3-終わりに&#34;&gt;3. 終わりに&lt;/h2&gt;
&lt;p&gt;最も簡易な手法ということで予想はしていましたが、辞書ベース手法ではセンチメントスコアの抽出はできませんでした。もちろん、私のやり方が悪いのが理由で上手くやれば文書の分類は可能かもしれません。ただ、経済に特化した極性辞書を準備しなければ難しいのではないかというのが、私の感想です。
次はナイーブベイズ分類器を用いた文書分類に取り組みます。
ここまで、読み進めて頂きましてありがとうございました。次回の記事も期待していてください。&lt;/p&gt;
&lt;div id=&#34;refs&#34; class=&#34;references csl-bib-body hanging-indent&#34;&gt;
&lt;div id=&#34;ref-takamura2005&#34; class=&#34;csl-entry&#34;&gt;
&lt;p&gt;Takamura, Hiroya, Takashi Inui, and Manabu Okumura. 2005. “The 43rd Annual Meeting.” In. Association for Computational Linguistics. &lt;a href=&#34;https://doi.org/10.3115/1219840.1219857&#34;&gt;https://doi.org/10.3115/1219840.1219857&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;文章を構造化し大規模に集積したもの &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>【徹底比較】センチメントスコア算出手法！！ - 第1回</title>
      <link>/post/post25/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      <guid>/post/post25/</guid>
      <description>&lt;script src=&#34;../../post/post25/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../post/post25/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../post/post25/index_files/bsTable/bootstrapTable.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../post/post25/index_files/bsTable/bootstrapTable.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../post/post25/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../post/post25/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../post/post25/index_files/bsTable/bootstrapTable.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../post/post25/index_files/bsTable/bootstrapTable.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../post/post25/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../post/post25/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../post/post25/index_files/bsTable/bootstrapTable.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../post/post25/index_files/bsTable/bootstrapTable.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../post/post25/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../post/post25/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../post/post25/index_files/bsTable/bootstrapTable.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../post/post25/index_files/bsTable/bootstrapTable.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../post/post25/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../post/post25/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../post/post25/index_files/bsTable/bootstrapTable.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../post/post25/index_files/bsTable/bootstrapTable.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../post/post25/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../post/post25/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../post/post25/index_files/bsTable/bootstrapTable.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../post/post25/index_files/bsTable/bootstrapTable.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;../../post/post25/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;../../post/post25/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;../../post/post25/index_files/bsTable/bootstrapTable.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;../../post/post25/index_files/bsTable/bootstrapTable.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;おはこんばんにちは。テキスト解析はデータ分析界隈ではもうかなり当たり前になってきています。テキストの感性情報(センチメント)を抽出する手法には、どのようなものがあるかあるのか調べたところかなり時代は進んでいると実感しました。これら数回にわたって、実際に&lt;code&gt;R&lt;/code&gt;や&lt;code&gt;Python&lt;/code&gt;で作成した機械学習モデルの精度を比較してみたいと思います。 今回はその第１回目ということで、データセットや全体感のお話です。&lt;/p&gt;
&lt;h2 id=&#34;1-解きたい問題&#34;&gt;1. 解きたい問題&lt;/h2&gt;
&lt;p&gt;今回解きたい問題は「景況感を表す文書表現を学習し、実際の景気判断を予測する」というタスクです。 データセットには、内閣府が出している景気ウオッチャー調査を使用します。&lt;/p&gt;
&lt;h3 id=&#34;景気ウオッチャー調査とは&#34;&gt;景気ウオッチャー調査とは&lt;/h3&gt;
&lt;p&gt;景気ウオッチャー調査とは、内閣府が月次で公表している景気動向判断のための統計情報です。調査の目的は以下の通りです(&lt;a href=&#34;https://www5.cao.go.jp/keizai3/watcher/watcher_mokuteki.html#mokuteki&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;内閣府Webサイト&lt;/a&gt;より)。&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&amp;lt;調査の目的&amp;gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;地域の景気に関連の深い動きを観察できる立場にある人々の協力を得て、地域ごとの景気動向を的確かつ迅速に把握し、景気動向判断の基礎資料とすることを目的とする。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;では、この「地域の景気に関連の深い動きを観察できる立場にある人々」、「地域ごとの景気動向」、「的確かつ迅速に」という部分について少し深掘ってみます。&lt;/p&gt;
&lt;h4 id=&#34;調査の対象範囲&#34;&gt;調査の対象範囲&lt;/h4&gt;
&lt;p&gt;調査の対象範囲は47都道府県となっています。また、調査対象者は「家計動向、企業動向、雇用等、代表的な経済活動項目の動向を敏感に反映する現象を観察できる業種の適当な職種の中から選定した2,050人」となっており、例えば小売店や飲食店の店員・店長、タクシー運転手、製造業・非製造業企業の経営者・従業員、人材派遣会社社員などを対象に行われています。&lt;/p&gt;
&lt;h4 id=&#34;調査期日および期間&#34;&gt;調査期日および期間&lt;/h4&gt;
&lt;p&gt;調査は月次で行われ、毎月25日から月末にかけて実施されます。当月の景況感について調査が行われ、翌月に公表されます。&lt;/p&gt;
&lt;h4 id=&#34;調査の実施方法&#34;&gt;調査の実施方法&lt;/h4&gt;
&lt;p&gt;アンケート調査を電話・Webサイト・電子メールのいずれかで回答することになっています。質問項目は以下の通りです(&lt;a href=&#34;https://www5.cao.go.jp/keizai3/watcher/chousahyo.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;調査票&lt;/a&gt;)。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;景気の現状に対する判断（方向性）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1.の理由&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2.の追加説明及び具体的状況の説明(自由記述)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;景気の先行きに対する判断(方向性)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(4)の理由&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(参考)景気の現状に対する判断(水準)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ご参考までに2016年1月調査のサンプルデータをお見せします。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;filePath &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; r&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(C:\Users\hogehoge\Watcher\RawData\watcher_2016.csv)&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(magrittr)
sample &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; readr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(filePath,locale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;readr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;locale&lt;/span&gt;(encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SHIFT-JIS&amp;#34;&lt;/span&gt;), show_col_types&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt;(kableExtra.html.bsTable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
knitr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(sample)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  kableExtra&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable_styling&lt;/span&gt;(bootstrap_options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;striped&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; 基準年 &lt;/th&gt;
   &lt;th style=&#34;text-align:left;&#34;&gt; 基準日 &lt;/th&gt;
   &lt;th style=&#34;text-align:left;&#34;&gt; 景気の現状判断 &lt;/th&gt;
   &lt;th style=&#34;text-align:left;&#34;&gt; 業種・職種 &lt;/th&gt;
   &lt;th style=&#34;text-align:left;&#34;&gt; 判断の理由 &lt;/th&gt;
   &lt;th style=&#34;text-align:left;&#34;&gt; 追加説明及び具体的状況の説明 &lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2016 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 1月31日 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ◎ &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 旅行代理店（従業員） &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 販売量の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ・店頭の取扱額が前年比約120％と好調であった。 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2016 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 1月31日 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ◎ &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 観光名所（従業員） &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 来客数の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ・当施設の利用乗降客数は１月26日時点で前年比130.1％となっており、１月としては過去最高の利用乗降客数になることが確定したほどの入込状況にある。 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2016 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 1月31日 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ○ &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 一般小売店［酒］（経営者） &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 単価の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ・年末の消費の反動もあってか、客の動きがやや鈍い。ただ、相変わらず高額商材が売れているということもあり、売上はそれなりの金額をキープしている。 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2016 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 1月31日 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ○ &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 百貨店（売場主任） &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; お客様の様子 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ・外国人観光客による売上が前年比152％と好調を継続しているほか、来客数が前年比102％と好調を維持している。月半ばに停滞した売上も下旬に入ってから回復傾向にあり、定価品、バーゲン品とも前年を上回っている。 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2016 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 1月31日 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ○ &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 百貨店（担当者） &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 来客数の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ・積極的に景気が上向きにあるとまではいいづらいものの、３か月前との比較では改善している。 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2016 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 1月31日 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ○ &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 百貨店（販売促進担当） &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; それ以外 &lt;/td&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ・気温が平年並みとなり、これまでの温暖、少雪の状態がみられなくなってきたことで、防寒衣料、雑貨商材を中心に多少改善の傾向がみられる。 &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;問題設定&#34;&gt;問題設定&lt;/h3&gt;
&lt;p&gt;今回の問題設定は、「追加説明及び具体的状況の説明」に記載されているテキスト情報をもとに、「景気の現状判断」を予測するタスクになります。
「景気の現状判断」は「良い(◎)」、「やや良い(○)」、「変わらない(■)」、「やや悪い(▲)」、「悪い(×)」となっており、これを2値分類問題にして学習を行います(変わらない(■)はサンプルから除外)。&lt;/p&gt;
&lt;h2 id=&#34;2-テキスト解析手法の進化の譜系&#34;&gt;2. テキスト解析手法の進化の譜系&lt;/h2&gt;
&lt;p&gt;上記問題設定を解くためには、テキスト情報から感性情報(センチメント)を抽出する必要があります。私が調べた浅い知識によると、感性情報の抽出方法には以下のような手法があります。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;辞書ベース&lt;/li&gt;
&lt;li&gt;ナイーブベイズ分類器&lt;/li&gt;
&lt;li&gt;単語埋め込み(Word Embedding)を用いた方法&lt;/li&gt;
&lt;li&gt;Recurrent neural network(RNN)&lt;/li&gt;
&lt;li&gt;Transformer&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;おそらく、下に行くにつれてより最新の手法になっており、精度も高いのではないかと推察されます。 また、1,2,3はやり方にもよるんでしょうが文章が与えられた際にその語順関係を考慮しません。 今後、各手法について解析結果の記事を投稿する予定ですので、詳しい中身についてはそれぞれの回で触れたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;3-サンプルデータ概観&#34;&gt;3. サンプルデータ概観&lt;/h2&gt;
&lt;h3 id=&#34;サンプルデータの読み込み&#34;&gt;サンプルデータの読み込み&lt;/h3&gt;
&lt;p&gt;今回使用する景気ウオッチャー調査のサンプルは2016年~2020年のものとなっています。現状判断の調査結果を格のしたcsvファイル(景気判断理由集)を月ごとに内閣府のWebページからダウンロードし、整形したものを年ごとに連結しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;filepath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(C:\Users\hogehoge\Watcher\RawData)&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;files &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; stringr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(filepath, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;list.files&lt;/span&gt;(filepath, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.csv&amp;#34;&lt;/span&gt;))
sample &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; readr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(files, locale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;readr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;locale&lt;/span&gt;(encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SHIFT-JIS&amp;#34;&lt;/span&gt;), show_col_types &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# 「－」は回答が存在しない、「＊」は主だった回答等が存在しないため、除外&lt;/span&gt;
sample &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sample[sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;追加説明及び具体的状況の説明 &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;－&amp;#34;&lt;/span&gt;,]
sample &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sample[sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;追加説明及び具体的状況の説明 &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;＊&amp;#34;&lt;/span&gt;,]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;知らなかったんですが、&lt;code&gt;readr::read_csv&lt;/code&gt;って2.0.0からファイルパスのリストを引数としてcsvを読み込み、その結果を連結してくれるようになったんですね。地味に便利です。&lt;/p&gt;
&lt;h3 id=&#34;サンプルサイズ&#34;&gt;サンプルサイズ&lt;/h3&gt;
&lt;p&gt;サンプルサイズは76800でした。サンプルサイズとしては申し分ないかと思います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(sample)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 76800
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;念のため、各年ごとにも見てみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(magrittr)
sample &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(基準年) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summarise&lt;/span&gt;(サンプルサイズ&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;`割合&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;%)`=round(サンプルサイズ/sum(サンプルサイズ)*100, digits=1)) %&amp;gt;% 
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;  knitr::kable() %&amp;gt;&lt;/span&gt;% 
  kableExtra&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable_styling&lt;/span&gt;(bootstrap_options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;striped&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; 基準年 &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; サンプルサイズ &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; 割合(%) &lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2016 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 15168 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 19.8 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2017 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 16724 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 21.8 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2018 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 14756 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 19.2 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2019 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 14588 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 19.0 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2020 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 15564 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 20.3 &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;各年およそ14,000~16,000サンプルほど存在するようです。大きなバラツキもありません。&lt;/p&gt;
&lt;h3 id=&#34;景気の現状判断の分布&#34;&gt;&lt;code&gt;景気の現状判断&lt;/code&gt;の分布&lt;/h3&gt;
&lt;p&gt;これから予測を行う&lt;code&gt;景気の現状判断&lt;/code&gt;はどのような分布になっているでしょうか。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;景気の現状判断 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;景気の現状判断, levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;◎&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;○&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;□&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;▲&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;×&amp;#34;&lt;/span&gt;))
sample &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(景気の現状判断) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summarise&lt;/span&gt;(サンプルサイズ&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;`割合&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;%)`=round(サンプルサイズ/sum(サンプルサイズ)*100, digits=1)) %&amp;gt;% 
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;  knitr::kable() %&amp;gt;&lt;/span&gt;% 
  kableExtra&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable_styling&lt;/span&gt;(bootstrap_options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;striped&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th style=&#34;text-align:left;&#34;&gt; 景気の現状判断 &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; サンプルサイズ &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; 割合(%) &lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ◎ &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 1569 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2.0 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ○ &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 14370 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 18.7 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; □ &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 34438 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 44.8 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; ▲ &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 18642 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 24.3 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; × &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 7781 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 10.1 &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;思ったよりキレイな分布をしている印象です。このサンプル期間では、「どちらとも言えない」が最も多く、また、比較的「やや悪い」や「悪い」が多いことがわかります。このあたりは2019年度以降のコロナ禍の影響を反映している可能性があるので、新たに時間軸を追加し、クロス集計をしてみましょう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;sample &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(基準年, 景気の現状判断) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tally&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  tidyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;spread&lt;/span&gt;(景気の現状判断, n) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  knitr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  kableExtra&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable_styling&lt;/span&gt;(bootstrap_options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;striped&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; 基準年 &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; ◎ &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; ○ &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; □ &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; ▲ &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; × &lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2016 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 235 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2455 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 7546 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4129 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 803 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2017 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 375 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4031 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 8681 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 3053 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 584 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2018 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 349 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 3105 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 7340 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 3336 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 626 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2019 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 237 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2050 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 6743 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4516 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 1042 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2020 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 373 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2729 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4128 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 3608 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4726 &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;やはり、2019年以降「悪い」が多く出現していることがわかります。一方で、「やや悪い」はそれ以前の年でも恒常的に多いようです。&lt;/p&gt;
&lt;h3 id=&#34;回答者の属性&#34;&gt;回答者の属性&lt;/h3&gt;
&lt;p&gt;次に回答者の属性を確認しましょう。回答者の属性は&lt;code&gt;業種・職種&lt;/code&gt;から取得できます。まず、どういった業種が多く回答しているのか確認してみます。回答数上位10番目までの業種を表示させます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;sample &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(業種 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stringr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str_remove&lt;/span&gt;(sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`業種・職種`, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;（.+）&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
stringr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str_remove&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;［.+］&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(業種) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summarise&lt;/span&gt;(サンプルサイズ&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;desc&lt;/span&gt;(サンプルサイズ)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;top_n&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, サンプルサイズ) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;`割合&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;%)`=round(サンプルサイズ/sum(サンプルサイズ)*100, digits=1)) %&amp;gt;% 
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;  knitr::kable() %&amp;gt;&lt;/span&gt;% 
  kableExtra&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable_styling&lt;/span&gt;(bootstrap_options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;striped&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th style=&#34;text-align:left;&#34;&gt; 業種 &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; サンプルサイズ &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; 割合(%) &lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 百貨店 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4959 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 15.1 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; スーパー &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4738 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 14.4 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 一般小売店 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 3851 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 11.7 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; コンビニ &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 3772 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 11.5 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 乗用車販売店 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2967 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 9.0 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 通信会社 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2866 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 8.7 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 商店街 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2734 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 8.3 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 人材派遣会社 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2700 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 8.2 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 衣料品専門店 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2128 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 6.5 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 職業安定所 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2088 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 6.4 &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;回答数上位には、百貨店やスーパーなど小売店が目立ちます。また、車のディーラーの方や人材派遣会社など生産・雇用に関連する業種の回答者も多いようです。&lt;/p&gt;
&lt;p&gt;次に、経営者や職員など職種の分布を確認します。こちらも上位10位までを表示します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;sample &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(職種 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stringr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract&lt;/span&gt;(sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`業種・職種`, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;（.+）&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  stringr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str_remove&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;（&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  stringr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str_remove&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;）&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(職種) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summarise&lt;/span&gt;(サンプルサイズ&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;desc&lt;/span&gt;(サンプルサイズ)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;top_n&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, サンプルサイズ) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;`割合&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;%)`=round(サンプルサイズ/sum(サンプルサイズ)*100, digits=1)) %&amp;gt;% 
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;  knitr::kable() %&amp;gt;&lt;/span&gt;% 
  kableExtra&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable_styling&lt;/span&gt;(bootstrap_options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;striped&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th style=&#34;text-align:left;&#34;&gt; 職種 &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; サンプルサイズ &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; 割合(%) &lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 経営者 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 20612 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 40.0 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 営業担当 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 7057 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 13.7 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 従業員 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4371 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 8.5 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 店長 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4343 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 8.4 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; NA &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 3145 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 6.1 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 職員 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 3118 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 6.1 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 総務担当 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2930 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 5.7 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 代表者 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2615 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 5.1 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 社員 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 1796 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 3.5 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 役員 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 1518 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2.9 &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;職種別では経営者がダントツで多い結果となりました。代表者など表記揺れもありますので、実態はもう少し多いと思います。想像では、現場の職員の方の回答が多いと思っていましたが予想とは異なる結果となりました。&lt;/p&gt;
&lt;h3 id=&#34;景気判断の理由の分布&#34;&gt;&lt;code&gt;(景気)判断の理由&lt;/code&gt;の分布&lt;/h3&gt;
&lt;p&gt;次に&lt;code&gt;(景気)判断の理由&lt;/code&gt;の分布を見ます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;results &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sample &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
            dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(判断の理由) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
            dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summarise&lt;/span&gt;(サンプルサイズ&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
            dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;desc&lt;/span&gt;(サンプルサイズ)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
            dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;`割合&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;%)`=round(サンプルサイズ/sum(サンプルサイズ)*100, digits=1))
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;            
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;results %&amp;gt;% 
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;  knitr::kable() %&amp;gt;&lt;/span&gt;% 
  kableExtra&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kable_styling&lt;/span&gt;(bootstrap_options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;striped&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th style=&#34;text-align:left;&#34;&gt; 判断の理由 &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; サンプルサイズ &lt;/th&gt;
   &lt;th style=&#34;text-align:right;&#34;&gt; 割合(%) &lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 来客数の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 17432 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 22.7 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 販売量の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 16153 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 21.0 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; お客様の様子 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 11511 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 15.0 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 受注量や販売量の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 9033 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 11.8 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 取引先の様子 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 5034 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 6.6 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 求人数の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4155 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 5.4 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; それ以外 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4007 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 5.2 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 単価の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 3654 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 4.8 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 競争相手の様子 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 1603 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 2.1 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 周辺企業の様子 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 1161 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 1.5 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 受注価格や販売価格の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 1099 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 1.4 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 求職者数の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 930 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 1.2 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 採用者数の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 666 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 0.9 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 雇用形態の様子 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 361 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 0.5 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; 販売量の動き &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 1 &lt;/td&gt;
   &lt;td style=&#34;text-align:right;&#34;&gt; 0.0 &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;「来客数の動き」と「販売量の動き」が多く、「お客様の様子」や「受注量や販売量の動き」まで含めると7割を占めます。回答業種に小売店が多いことから、このような項目が上位にきているのだと推察されます。&lt;/p&gt;
&lt;h3 id=&#34;景気判断の理由に関するテキストマイニング&#34;&gt;景気判断の理由に関するテキストマイニング&lt;/h3&gt;
&lt;p&gt;景気の現状判断に対する理由の追加説明及び具体的状況の説明を解析し、どのような単語が頻繁に使用されているかをWordCloudを用いて確認します。&lt;/p&gt;
&lt;p&gt;まず、文書のトークン化を行います。日本語のような言語では英語などと異なり単語ごとの間にスペースがないため、別途区切りを入れてやる必要があります。区切られた各語は形態素と呼ばれ、言葉が意味を持つまとまりの単語の最小単位を指します。また、文章を形態素へ分割することを形態素解析と言います(英語のような場合単にTokenizationと言ったりします)。&lt;br&gt;
形態素解析を行うツールは以下のようなものが存在します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MeCab&lt;/li&gt;
&lt;li&gt;JUMAN&lt;/li&gt;
&lt;li&gt;JANOME&lt;/li&gt;
&lt;li&gt;Ginza&lt;/li&gt;
&lt;li&gt;Sudachi&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;おそらく最も使用されているものはMecabではないかと思いますが、標準装備されている辞書(ipadic)の更新がストップしており、最近の新語に対応できないという問題があります。この点については新語に強いNEologd辞書を加えることで、対処可能であることを別記事で紹介していますが、今回はワークスアプリケーションズが提供しているSudachi[@TAKAOKA18.8884]を使用することにしたいと思います。公式GithubからSudachiの特長を引用します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;複数の分割単位の併用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必要に応じて切り替え&lt;/li&gt;
&lt;li&gt;形態素解析と固有表現抽出の融合&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多数の収録語彙&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UniDic と NEologd をベースに調整&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;機能のプラグイン化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文字正規化や未知語処理に機能追加が可能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同義語辞書との連携&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;後日公開予定&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特質すべきは「複数の分割単位の併用」でしょう。Sudachiでは短い方から A, B, Cの3つの分割モードを提供しています。AはUniDic短単位相当、Cは固有表現相当、BはA, Cの中間的な単位となっており、以下のように同じ「選挙管理委員会」という単語でも形態素が異なることが確認できます。これはSudachi特有の特長になります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sudachipy &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tokenizer
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sudachipy &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; dictionary

tokenizer_obj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dictionary&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Dictionary()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create()

mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SplitMode&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;A
[m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;normalized_form() &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; tokenizer_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tokenize(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;選挙管理委員会&amp;#34;&lt;/span&gt;, mode)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [&#39;選挙&#39;, &#39;管理&#39;, &#39;委員&#39;, &#39;会&#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SplitMode&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;B
[m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;normalized_form() &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; tokenizer_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tokenize(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;選挙管理委員会&amp;#34;&lt;/span&gt;, mode)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [&#39;選挙&#39;, &#39;管理&#39;, &#39;委員会&#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SplitMode&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;C
[m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;normalized_form() &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; tokenizer_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tokenize(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;選挙管理委員会&amp;#34;&lt;/span&gt;, mode)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [&#39;選挙管理委員会&#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;また、辞書についてもUniDicとNEologdをベースとして更新が続けられており、新語にも対応できます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SplitMode&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;C
[m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;normalized_form() &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; tokenizer_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tokenize(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;新型コロナウイルス&amp;#34;&lt;/span&gt;, mode)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [&#39;新型コロナウイルス&#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;個人的に素晴らしいと思うポイントは表記正規化や文字正規化ができると言うことです。以下のように旧字等で同じ意味だが表記が異なる単語や英語/日本語、書き間違え等を正規化する機能があります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tokenizer_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tokenize(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;附属&amp;#34;&lt;/span&gt;, mode)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;normalized_form()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## &#39;付属&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tokenizer_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tokenize(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SUMMER&amp;#34;&lt;/span&gt;, mode)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;normalized_form()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## &#39;サマー&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tokenizer_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tokenize(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;シュミレーション&amp;#34;&lt;/span&gt;, mode)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;normalized_form()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## &#39;シミュレーション&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;このような高性能な形態素解析ツールが無償でしかも商用利用も可というところに驚きを隠せません。次回以降で説明しますが、このSudachiで形態素解析を行ったWord2vecモデルであるChiveも提供されています。&lt;/p&gt;
&lt;p&gt;説明が長くなりましたがSudachiでTokenizationを行いましょう。Sudachiは&lt;code&gt;Python&lt;/code&gt;で使用することができます。説明が前後していますが、上記コードで行っているように&lt;code&gt;tokenizer&lt;/code&gt;オブジェクトを作成し、&lt;code&gt;tokenize()&lt;/code&gt;メソッドで文章をTokenizeします。Tokenizeされた結果は&lt;code&gt;MorphemeList&lt;/code&gt;オブジェクトに格納されます。&lt;code&gt;MorphemeList&lt;/code&gt;オブジェクトの各要素に対して&lt;code&gt;normalized_form()&lt;/code&gt;メソッドを実行することで正規化された形態素を取得することができます。ここまでをやってみます。&lt;/p&gt;
&lt;p&gt;まず、サンプルデータを読み込みます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sudachipy &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tokenizer
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sudachipy &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; dictionary
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; LabelEncoder
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

sample &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\hogehoge\Watcher\RawData\watcher_2016.csv&amp;#34;&lt;/span&gt;,encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shift-jis&amp;#34;&lt;/span&gt;)
sample &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sample[(sample&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;追加説明及び具体的状況の説明&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;−&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;(sample&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;追加説明及び具体的状況の説明&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;＊&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;False&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;(sample&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;景気の現状判断&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;□&amp;#39;&lt;/span&gt;)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;読み込んだ&lt;code&gt;sample&lt;/code&gt;をtokenizerでToken化していきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tokenizer_obj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dictionary&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Dictionary()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create()
mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tokenizer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SplitMode&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;C
tokenizer_sudachi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; t: [m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;normalized_form() &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; tokenizer_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tokenize(t, mode)]
tokens &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sample&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;追加説明及び具体的状況の説明&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;map(tokenizer_sudachi)
tokens&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 0    [・, 店頭, の, 取り扱い, 額, が, 前年, 比, 約, 120, %, と, 好調...
## 1    [・, 当, 施設, の, 利用, 乗降, 客数, は, 1, 月, 26, 日, 時点, ...
## 2    [・, 年, 末, の, 消費, の, 反動, も, 有る, て, か, 、, 客, の, ...
## 3    [・, 外国人, 観光客, に, よる, 売り上げ, が, 前年, 比, 152, %, と...
## 4    [・, 積極的, だ, 景気, が, 上向き, に, 有る, と, まで, は, 言う, 辛...
## Name: 追加説明及び具体的状況の説明, dtype: object
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Tokenizeすることができました。
WordCloudを作成するために&lt;code&gt;Python&lt;/code&gt;の&lt;code&gt;wordcloud&lt;/code&gt;を用います。これは引数にTokenをスペースで区切った文字列を与える必要があるため、その整形を行います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;word_lists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; token &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; tokens:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; token:
    word_lists&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(word)
word_chain &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(word_lists)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;では、wordcloudを作成していきます。日本語表示では文字化けが発生するため、&lt;a href=&#34;https://moji.or.jp/ipafont/ipaex00401/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;でフォント「IPAexゴシック」を予めダウンロードし、フォルダに保存したものを読み込んでいます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;font_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C:\Users\hogehoge\Watcher\ipaexg.ttf&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;wordcloud.WordCloud.genetate()&lt;/code&gt;でWordCloudを作成します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; wordcloud &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; WordCloud
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
wc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; WordCloud(background_color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;, font_path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;font_path, max_words&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, max_font_size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, contour_width&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, contour_color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;steelblue&amp;#39;&lt;/span&gt;)
wc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generate(word_chain)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;))
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;imshow(wc, cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gray, interpolation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bilinear&amp;#34;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axis(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;off&amp;#34;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post25/wordcloud.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;
&lt;p&gt;助詞や「為る」、「有る」、「居る」、「成る」など特徴のない語句が頻出しており、意味のある可視化になっていません。これらを&lt;code&gt;word_chain&lt;/code&gt;から除き、もう一度実行してみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stopwords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;見る&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;為る&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;有る&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;居る&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;成る&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;は&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;に&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;よる&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;た&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;が&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;て&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;だ&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;など&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;と&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;も&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;の&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;や&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;で&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;から&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;を&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;おる&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;より&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;等&amp;#34;&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; stopword &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stopwords:
  word_chain &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; word_chain&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(stopword, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
wc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generate(word_chain)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;))
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;imshow(wc, cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gray, interpolation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bilinear&amp;#34;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axis(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;off&amp;#34;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post25/wordcloud2.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;
&lt;p&gt;先ほどよりは意味のある可視化になっています。「来客数」、「売り上げ」、「販売量」などやはり小売店関連のワードが頻出しているようです。これは回答者属性とも整合的です。&lt;/p&gt;
&lt;h2 id=&#34;4-終わりに&#34;&gt;4. 終わりに&lt;/h2&gt;
&lt;p&gt;これから各回で以下の手法を用いた予測モデルの構築を行っていきます。次回は、辞書ベースに基づくセンチメントの抽出を行い、文書のポジネガ分類を行います。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;辞書ベース&lt;/li&gt;
&lt;li&gt;ナイーブベイズ分類器&lt;/li&gt;
&lt;li&gt;単語埋め込み(Word Embedding)を用いた方法&lt;/li&gt;
&lt;li&gt;Recurrent neural network(RNN)&lt;/li&gt;
&lt;li&gt;Transformer&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;実は、解析自体は全て完了しており、文書を書くだけのフェーズになっています。ちゃんと結果も出ていますので、乞うご期待です！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pythonのpandas_datareaderから色々なデータを取得してみる</title>
      <link>/post/post15/</link>
      <pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate>
      <guid>/post/post15/</guid>
      <description>&lt;p&gt;おはこんばんにちは。最近会社のPCに&lt;code&gt;Anaconda&lt;/code&gt;を入れてもらいました。業務で使用することはないのですが、ワークショップで使用するので色々勉強しています。以前、Googleが提供している&lt;code&gt;Earth Engine&lt;/code&gt;から衛星画像を取得して解析した際に&lt;code&gt;Python&lt;/code&gt;を使用しましたが、今回は&lt;code&gt;Python&lt;/code&gt;から様々なデータが取得できる&lt;code&gt;pandas_datareader&lt;/code&gt;を使用したいと思います。&lt;code&gt;pandas_datareader&lt;/code&gt;では以下のようなデータソースからデータが取得できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Tiingo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IEX&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alpha Vantage&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enigma&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quandl&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;St.Louis FED&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kenneth French&amp;rsquo;s data library&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;World Bank&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OECD&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eurostat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Thrift Saving Plan&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nasdaq Trader symbol definitions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stooq&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MOEX&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Naver Finance&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なお、このブログでは&lt;code&gt;Rstuio&lt;/code&gt;と&lt;code&gt;blogdown&lt;/code&gt;パッケージ、&lt;code&gt;git&lt;/code&gt;を組み合わせて&lt;code&gt;github&lt;/code&gt;上に記事を投稿しています。ですが、&lt;code&gt;Rstudio&lt;/code&gt;と&lt;code&gt;reticulate&lt;/code&gt;パッケージのおかげで、&lt;code&gt;python&lt;/code&gt;を使用した記事も&lt;code&gt;rmd&lt;/code&gt;で作成し、&lt;code&gt;html&lt;/code&gt;として出力できています。ここでまず、&lt;code&gt;reticulate&lt;/code&gt;パッケージを用いて&lt;code&gt;conda&lt;/code&gt;仮想環境へ接続する方法を紹介しておきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(reticulate)
conda_path &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\\Users\\hoge\\Anaconda3\\envs\\環境名&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;use_condaenv&lt;/span&gt;(conda_path)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで接続できます。&lt;code&gt;conda_path&lt;/code&gt;には仮想環境へのパスを入力してください。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## &#39;3.7.7 (default, May  6 2020, 11:45:54) [MSC v.1916 64 bit (AMD64)]&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;1-econdbからのデータ取得&#34;&gt;1. ECONDBからのデータ取得&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pandas_datareader&lt;/code&gt;では、&lt;a href=&#34;https://www.econdb.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ECOMDB&lt;/a&gt;からマクロ経済関連のデータを取得することができます。&lt;/p&gt;
&lt;h3 id=&#34;econdbとは&#34;&gt;ECONDBとは？&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;econdb.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ECONDBは各国の主要マクロ経済データをdashboard形式で提供してくれるWebサイトで、またAPIをサポートしており、PythonやExcelにシームレスにデータを連係してくれます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;econdb2.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;データ取得方法&#34;&gt;データ取得方法&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pandas_datareader&lt;/code&gt;を用いた使用方法は以下の通りです。&lt;/p&gt;
&lt;h4 id=&#34;基本的な使用方法&#34;&gt;基本的な使用方法&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;pandas_datareader&lt;/code&gt;からデータモジュールをインポートすることから始めます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas_datareader.data &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; web
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## C:\Users\aashi\Documents\R\win-library\4.1\reticulate\python\rpytools\loader.py:44: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.
##   level=level
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;EconDBからデータを取得するには、&lt;code&gt;DataReader&lt;/code&gt;メソッドを呼び出し、以下のように&lt;code&gt;data_source&lt;/code&gt;引数に&lt;code&gt;&#39;econdb&#39;&lt;/code&gt;と適当な&lt;code&gt;query&lt;/code&gt;を渡せばよいです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; web&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataReader(query, data_source&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;econdb&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;kwargs)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;クエリパラメータの形式は、取得するデータの種類によって異なります。&lt;/p&gt;
&lt;h4 id=&#34;クエリ指定方法&#34;&gt;クエリ指定方法&lt;/h4&gt;
&lt;p&gt;データはいくつかのデータセットに分割されます。データセットには、トピック、頻度、調査方法などの共通の特徴を抽出できるティッカーが付与されています。ユーザーは検索機能を使用してデータセットを探すことができます。UST_MSPDデータセットを例にしてみます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;econdb3.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ページに入ると、いくつかのフィルターがあり、特定のシリーズと特定のタイムフレームに選択を絞り込むことができます。適切なフィルタが設定された状態で、&lt;code&gt;Export&lt;/code&gt;ドロップダウンボタンをクリックすると、選択したデータをエクスポートするための多くのオプションとフォーマットが表示されます。その中でも、&lt;code&gt;Export to Python&lt;/code&gt;は、事前にフォーマットされたパラメータを持つコードの重要な部分を表示します。これをそのまま貼り付けてしまえばデータを取得できます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;econdb4.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;query &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;amp;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join([
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dataset=UST_MSPD&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;v=Category&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h=TIME&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;from=2018-01-01&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;to=2019-12-31&amp;#34;&lt;/span&gt;
])
df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; web&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataReader(query, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;econdb&amp;#39;&lt;/span&gt;)
df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Category                         Bills  ... United States Savings Securities
## Holder      Intragovernmental Holdings  ...                           Totals
## TIME_PERIOD                             ...                                 
## 2018-01-01                      3830.0  ...                           159902
## 2018-02-01                      3748.0  ...                           159475
## 2018-03-01                      4552.0  ...                           159040
## 2018-04-01                      2641.0  ...                           158606
## 2018-05-01                       577.0  ...                           158233
## 
## [5 rows x 51 columns]
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;実践的な取得コード&#34;&gt;実践的な取得コード&lt;/h4&gt;
&lt;p&gt;こんなこともできます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pyplot &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas_datareader.data &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; web
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns

start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime(&lt;span style=&#34;color:#ae81ff&#34;&gt;1980&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# parameters for data from econdb&lt;/span&gt;
country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;US&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UK&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;JP&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EU&amp;#39;&lt;/span&gt;]
indicator &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RGDP&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CPI&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;URATE&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CA&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOU&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;POP&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RETA&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IP&amp;#39;&lt;/span&gt;]

&lt;span style=&#34;color:#75715e&#34;&gt;# Parse API from econdb&lt;/span&gt;
econ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame()
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; cnty &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; country:
    temp2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; idctr &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; indicator:
        temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; web&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataReader(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ticker=&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; idctr &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; cnty,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;econdb&amp;#39;&lt;/span&gt;,start,end)
        temp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [idctr]
        temp2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([temp2,temp],join&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;outer&amp;#39;&lt;/span&gt;,axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
    temp2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;assign(kuni&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cnty,kijyundate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;temp2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index)
    econ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([econ,temp2],join&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;outer&amp;#39;&lt;/span&gt;)
    econ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; econ&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index(drop&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
econ&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()

&lt;span style=&#34;color:#75715e&#34;&gt;# Plot CPI for example&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##         RGDP   CPI  URATE       CA  HOU       POP  RETA     IP kuni kijyundate
## 0  6842024.0  78.0    6.3 -10666.0  NaN  226554.0   NaN  52.17   US 1980-01-01
## 1        NaN  79.0    6.3      NaN  NaN  226753.0   NaN  52.20   US 1980-02-01
## 2        NaN  80.1    6.3      NaN  NaN  226955.0   NaN  51.98   US 1980-03-01
## 3  6701046.0  80.9    6.9   9844.0  NaN  227156.0   NaN  50.97   US 1980-04-01
## 4        NaN  81.7    7.5      NaN  NaN  227387.0   NaN  49.71   US 1980-05-01
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## &amp;lt;function set at 0x0000000031ED0B88&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;relplot(data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;econ,x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;kijyundate&amp;#39;&lt;/span&gt;,y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CPI&amp;#39;&lt;/span&gt;,hue&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;kuni&amp;#39;&lt;/span&gt;,kind&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post15/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;282&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post15/index_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;556&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-world-bankからのデータ取得方法&#34;&gt;2. World Bankからのデータ取得方法&lt;/h2&gt;
&lt;h3 id=&#34;世界銀行から取得できるデータとは&#34;&gt;世界銀行から取得できるデータとは？&lt;/h3&gt;
&lt;p&gt;世界銀行は前身が国際復興開発銀行(IBRD)、国際開発協会(IDA)であることからもわかるように開発系のデータが取得できます。最近ではCOVID-19関連のデータも取得することができます。 &lt;code&gt;pandas_datareader&lt;/code&gt;では、&lt;code&gt;wb&lt;/code&gt;関数を使用することで、&lt;a href=&#34;https://data.worldbank.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;World Bank&amp;rsquo;s World Development Indicators&lt;/a&gt;と呼ばれる世界銀行の数千ものパネルデータに簡単にアクセスできます。&lt;/p&gt;
&lt;h3 id=&#34;データの検索方法&#34;&gt;データの検索方法&lt;/h3&gt;
&lt;p&gt;例えば、北米地域の国々の一人当たりの国内総生産をドルベースで比較したい場合は、&lt;code&gt;search&lt;/code&gt;関数を使用します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pandas_datareader &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; wb
matches &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;search(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gdp.*capita.*const&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(matches&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[:,[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##                          id                                               name
## 716      6.0.GDPpc_constant  GDP per capita, PPP (constant 2011 internation...
## 10411        NY.GDP.PCAP.KD                 GDP per capita (constant 2015 US$)
## 10413        NY.GDP.PCAP.KN                      GDP per capita (constant LCU)
## 10415     NY.GDP.PCAP.PP.KD  GDP per capita, PPP (constant 2017 internation...
## 10416  NY.GDP.PCAP.PP.KD.87  GDP per capita, PPP (constant 1987 internation...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;NY.GDP.PCAP.KD&lt;/code&gt;がそれに当たることがわかります。2010年のUSドルベースで実質化されているようです。&lt;/p&gt;
&lt;h3 id=&#34;データの取得方法&#34;&gt;データの取得方法&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;download&lt;/code&gt;関数でデータを取得します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(indicator&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NY.GDP.PCAP.KD&amp;#39;&lt;/span&gt;, country&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;US&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CA&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MX&amp;#39;&lt;/span&gt;], start&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2010&lt;/span&gt;, end&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(dat)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##                     NY.GDP.PCAP.KD
## country       year                
## Canada        2018    44917.369814
##               2017    44325.416776
##               2016    43536.913403
##               2015    43596.135537
##               2014    43635.095481
##               2013    42846.284196
##               2012    42315.807389
##               2011    42036.997844
##               2010    41155.323638
## Mexico        2018     9945.776845
##               2017     9842.400712
##               2016     9751.569083
##               2015     9616.645558
##               2014     9426.324588
##               2013     9282.991933
##               2012     9280.258638
##               2011     9076.301453
##               2010     8878.561377
## United States 2018    59821.592274
##               2017    58387.775808
##               2016    57418.933846
##               2015    56863.371496
##               2014    55574.356825
##               2013    54604.130054
##               2012    53989.248340
##               2011    53190.231121
##               2010    52759.998081
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;pandas&lt;/code&gt;の&lt;code&gt;dataframe&lt;/code&gt;形式でデータを取得できていることが分かります。年と国がindexになっていますね。&lt;/p&gt;
&lt;h2 id=&#34;3-famafrench-data-libraryからのデータ取得方法&#34;&gt;3. Fama/French Data Libraryからのデータ取得方法&lt;/h2&gt;
&lt;h3 id=&#34;famafrench-data-libraryで取れるデータとは&#34;&gt;Fama/French Data Libraryで取れるデータとは&lt;/h3&gt;
&lt;p&gt;金融関連データになりますが、有名なFama/Frechの3 Factor modelのデータセットが&lt;a href=&#34;http://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fama/French Data Library&lt;/a&gt;から取得できます。&lt;code&gt;get_available_datasets&lt;/code&gt;関数は、利用可能なすべてのデータセットのリストを返します。&lt;/p&gt;
&lt;h3 id=&#34;データ取得方法-1&#34;&gt;データ取得方法&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pandas_datareader.famafrench &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; get_available_datasets
len(get_available_datasets())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 297
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;利用可能なデータセットは297です。 データセットにどんなものがあるか、20個ほどサンプリングしてみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sample(get_available_datasets(),&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [&#39;Japan_3_Factors_Daily&#39;, &#39;Developed_ex_US_Mom_Factor_Daily&#39;, &#39;Portfolios_Formed_on_ME&#39;, &#39;25_Portfolios_OP_INV_5x5&#39;, &#39;North_America_6_Portfolios_ME_OP&#39;, &#39;Europe_6_Portfolios_ME_Prior_250_20_daily&#39;, &#39;Portfolios_Formed_on_INV&#39;, &#39;10_Industry_Portfolios_Wout_Div&#39;, &#39;5_Industry_Portfolios&#39;, &#39;32_Portfolios_ME_OP_INV_2x4x4&#39;, &#39;Europe_32_Portfolios_ME_INV(TA)_OP_2x4x4&#39;, &#39;North_America_6_Portfolios_ME_Prior_12_2&#39;, &#39;Europe_25_Portfolios_ME_Prior_12_2&#39;, &#39;Developed_ex_US_25_Portfolios_ME_OP_Daily&#39;, &#39;Europe_3_Factors&#39;, &#39;Portfolios_Formed_on_E-P&#39;, &#39;Asia_Pacific_ex_Japan_25_Portfolios_ME_Prior_12_2&#39;, &#39;Europe_25_Portfolios_ME_OP&#39;, &#39;Developed_25_Portfolios_ME_BE-ME&#39;, &#39;38_Industry_Portfolios&#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;日本株のポートフォリオも存在します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; web&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataReader(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;5_Industry_Portfolios&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;famafrench&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(ds[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DESCR&amp;#39;&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 5 Industry Portfolios
## ---------------------
## 
## This file was created by CMPT_IND_RETS using the 202201 CRSP database. It contains value- and equal-weighted returns for 5 industry portfolios. The portfolios are constructed at the end of June. The annual returns are from January to December. Missing data are indicated by -99.99 or -999. Copyright 2022 Kenneth R. French
## 
##   0 : Average Value Weighted Returns -- Monthly (59 rows x 5 cols)
##   1 : Average Equal Weighted Returns -- Monthly (59 rows x 5 cols)
##   2 : Average Value Weighted Returns -- Annual (5 rows x 5 cols)
##   3 : Average Equal Weighted Returns -- Annual (5 rows x 5 cols)
##   4 : Number of Firms in Portfolios (59 rows x 5 cols)
##   5 : Average Firm Size (59 rows x 5 cols)
##   6 : Sum of BE / Sum of ME (5 rows x 5 cols)
##   7 : Value-Weighted Average of BE/ME (5 rows x 5 cols)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;5つ目がポートフォリオに含まれる銘柄数、1つ目がvalue weightedポートフォリオの月次リターンです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ds[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##          Cnsmr  Manuf  HiTec  Hlth   Other
## Date                                      
## 2017-03    519    592    663    577   1025
## 2017-04    517    586    658    574   1018
## 2017-05    515    583    655    572   1009
## 2017-06    511    580    651    570   1000
## 2017-07    525    615    684    613   1056
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ds[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##          Cnsmr  Manuf  HiTec  Hlth   Other
## Date                                      
## 2017-03   0.79  -0.20   1.91   0.03  -1.69
## 2017-04   1.82   0.36   2.19   0.91   0.23
## 2017-05   2.02   0.35   3.12  -0.25  -0.45
## 2017-06  -1.19   0.32  -2.12   5.54   4.22
## 2017-07  -0.07   2.31   4.02   0.70   1.49
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;4-ferdからのデータ取得方法&#34;&gt;4. FERDからのデータ取得方法&lt;/h2&gt;
&lt;h3 id=&#34;fredで取得できるデータとは&#34;&gt;FREDで取得できるデータとは&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://fred.stlouisfed.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FRED&lt;/a&gt;では多種多様な経済統計データを取得することができます。サイトへ行くと、以下のように統計毎にページが存在します。この統計名の横についている&lt;code&gt;CPIAUCSL&lt;/code&gt;がTickerになっており、これを渡すことで、データを取得することができます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;FRED.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;データ取得方法-2&#34;&gt;データ取得方法&lt;/h3&gt;
&lt;p&gt;先ほど見たTickerを&lt;code&gt;DataReader&lt;/code&gt;関数に渡し、データソースを&lt;code&gt;fred&lt;/code&gt;とすることで、データを取得することができます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2010&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2013&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;)

gdp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; web&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataReader(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GDP&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fred&amp;#39;&lt;/span&gt;, start, end)
inflation &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; web&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataReader([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CPIAUCSL&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CPILFESL&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fred&amp;#39;&lt;/span&gt;, start, end)

gdp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##                   GDP
## DATE                 
## 2010-01-01  14764.611
## 2010-04-01  14980.193
## 2010-07-01  15141.605
## 2010-10-01  15309.471
## 2011-01-01  15351.444
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;inflation&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##             CPIAUCSL  CPILFESL
## DATE                          
## 2010-01-01   217.488   220.633
## 2010-02-01   217.281   220.731
## 2010-03-01   217.353   220.783
## 2010-04-01   217.403   220.822
## 2010-05-01   217.290   220.962
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;5-oecdからのデータ取得方法&#34;&gt;5. OECDからのデータ取得方法&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://stats.oecd.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OECD&lt;/a&gt;は以前以下の記事で紹介しましたが、&lt;code&gt;pandas_datareader&lt;/code&gt;でも取得することができます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;ttps://ayatoashihara.github.io/myblog_multi/post/post22/&#34;&gt;OECD.orgからマクロパネルデータをAPIで取得する&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ただ、&lt;code&gt;OECD dataset code&lt;/code&gt;を指定するだけ&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;なので、&lt;code&gt;pandasdmx&lt;/code&gt;よりは自由度が低いです。 あと、前回取得した&lt;code&gt;MEI_ARCHIVE&lt;/code&gt;とか指定するとデータが多すぎて、エラーが出ます。OECDデータを取得するときには、国や期間など細かい指定のできる&lt;code&gt;pandasdmx&lt;/code&gt;のほうが良いと個人的に思います。&lt;/p&gt;
&lt;p&gt;なお、使用方法はFREDと同様で、データソースに&lt;code&gt;oecd&lt;/code&gt;を指定します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; web&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataReader(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TUD&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;oecd&amp;#39;&lt;/span&gt;)
df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Country                  Australia  ...                Slovenia
## Frequency                   Annual  ...                  Annual
## Measure    Percentage of employees  ... Percentage of employees
## Time                                ...                        
## 2018-01-01                     NaN  ...                     NaN
## 2019-01-01                     NaN  ...                     NaN
## 2020-01-01                     NaN  ...                     NaN
## 
## [3 rows x 39 columns]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;6-eurostatからのデータ取得方法&#34;&gt;6. Eurostatからのデータ取得方法&lt;/h2&gt;
&lt;h3 id=&#34;eurostatから取得できるデータとは&#34;&gt;Eurostatから取得できるデータとは&lt;/h3&gt;
&lt;p&gt;Eurostatは欧州連合の統計局で、主にEU地域のデータを取得することができます。データは以下のように多岐にわたっており、経済金融だけでなく農業や人口動態、輸送、環境等々多種多様なデータを取得することができます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;eurostat.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;IDをどのように取得すればよいのかですが、以下の&lt;a href=&#34;https://ec.europa.eu/eurostat/data/database&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ページ&lt;/a&gt;にて、取得したいデータを順々に掘り進めていくと黄色で色を付けたようなIDコードが出てきます。これで取得データのIDを特定します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;eurostat2.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ただ、eurostatもOECDと同じくsdmxに対応しているため、&lt;code&gt;pandasdmx&lt;/code&gt;のほうが使いやすいかもしれません。&lt;/p&gt;
&lt;h3 id=&#34;データ取得方法-3&#34;&gt;データ取得方法&lt;/h3&gt;
&lt;p&gt;一例として、 先ほど見た&lt;code&gt;Employment and activity by sex and age - annual data&lt;/code&gt;を取得してみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; web&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataReader(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lfsi_emp_a&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eurostat&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unstack()
df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## UNIT                            INDIC_EM                                                   SEX      AGE                  GEO      FREQ    TIME_PERIOD
## Percentage of total population  Persons in the labour force (former name: active persons)  Females  From 15 to 24 years  Austria  Annual  2018-01-01     54.0
##                                                                                                                                           2019-01-01     52.7
##                                                                                                                                           2020-01-01     52.7
##                                                                                                                          Belgium  Annual  2018-01-01     27.8
##                                                                                                                                           2019-01-01     29.5
## dtype: float64
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;最後に&#34;&gt;最後に&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pandas_datareader&lt;/code&gt;を使用して、様々なソースから多種多様なデータを取得しました。資産運用会社などで働いている方はbloombergやEIKONからデータを取得できるため、あまり魅力的に感じないかもしれませんが、個人で分析をしている方や定期的にデータを取得したい方は非常によいパッケージだと思います。自分自身、この新しいWebサイトにリニューアルしてから、週次や月次単位で経済分析を上げようかなと思っており、これらを使用して経済の定点観測をしたいなと思っているところです。皆さんも興味あるデータを&lt;code&gt;pandas_datareader&lt;/code&gt;で自動収集してみてください！&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;サイトで統計を選び、&lt;code&gt;export &amp;gt;- SDMX Query&lt;/code&gt;とするとその統計のコードが見れます。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>OECD.orgからマクロパネルデータをAPIで取得する</title>
      <link>/post/post22/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/post22/</guid>
      <description>&lt;p&gt;おはこんばんにちは。マクロ経済データを集める方法はいくつかありますが、各国のデータを集めるとなると一苦労です。ですが、OECDからAPI経由でデータ取得すれば面倒な処理を自動化できます。今日はその方法をご紹介します。&lt;/p&gt;
&lt;h2 id=&#34;1oecdstat-web-api&#34;&gt;1.OECD.Stat Web API&lt;/h2&gt;
&lt;p&gt;OECD.orgでは&lt;a href=&#34;https://stats.oecd.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OECD.Stat&lt;/a&gt;というサービスを提供しており、OECD加盟国と特定の非加盟国の様々な経済データが提供されています。WEBサイトに行けば手動でcsvデータをダウンロードすることもできますが、定期的にデータを取得し、分析する必要があるならばデータ取得処理を自動化したい衝動に駆られます。OECDはWeb APIを提供しているので、&lt;code&gt;Python&lt;/code&gt;や&lt;code&gt;R&lt;/code&gt;さえ使えればこれを実現できます。&lt;/p&gt;
&lt;p&gt;&amp;lt;OECD実施の具体的な内容&amp;gt;&lt;/p&gt;
&lt;p&gt;以下は、現時点での特定のOECD REST SDMXインターフェースの実装詳細のリストです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;匿名クエリのみがサポートされ、認証はありません。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各レスポンスは1,000,000件のオブザベーションに制限されています。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;リクエストURLの最大長は1000文字です。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;クロスオリジンリクエストは、&lt;code&gt;CORS&lt;/code&gt; ヘッダでサポートされています (&lt;code&gt;CORS &lt;/code&gt;についての詳細は &lt;a href=&#34;http://www.html5rocks.com/en/tutorials/cors/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;を参照)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;エラーは結果には返されませんが、HTTP ステータスコードとメッセージは Web サービスガイドラインに従って設定されます。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存在しないデータセットが要求された場合は、401 Unauthorizedが返されます。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;REST&lt;/code&gt; クエリの source (または Agency ID) パラメータは必須ですが、「ALL」キーワードはサポートされています。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;バージョニングはサポートされていません: 常に最新の実装バージョンが使用されます。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;データの並べ替えはサポートされていません。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lastNObservations&lt;/code&gt;パラメータはサポートされていません。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dimensionAtObservation=AllDimensions&lt;/code&gt; が使用されている場合でも、観測は時系列 (またはインポート固有) の順序に従います。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;現時点では、参照メタデータの検索はサポートされていません。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2pandasdmx&#34;&gt;2.pandasdmx&lt;/h2&gt;
&lt;p&gt;Web APIは&lt;code&gt;sdmx-json&lt;/code&gt;という形式で提供されます。&lt;code&gt;Python&lt;/code&gt;ではこれを使用するための便利なパッケージが存在します。それが&lt;code&gt;**pandasdmx**&lt;/code&gt;です。データをダウンロードする方法は以下の通りです。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;pandasdmx&lt;/code&gt;を&lt;code&gt;import&lt;/code&gt;し、&lt;code&gt;Request&lt;/code&gt;メソッドに引数として&amp;rsquo;OECD&amp;rsquo;を渡し、&lt;code&gt;api.Request&lt;/code&gt;オブジェクトを作成する。&lt;/li&gt;
&lt;li&gt;作成した&lt;code&gt;api.Request&lt;/code&gt;オブジェクトのdataメソッドにクエリ条件を渡し、OECD.orgから&lt;code&gt;sdmx-json&lt;/code&gt;形式のデータをダウンロードする。&lt;/li&gt;
&lt;li&gt;ダウンロードしたデータを&lt;code&gt;to_pandas()&lt;/code&gt;メソッドで&lt;code&gt;pandas&lt;/code&gt;データフレームへ整形する。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3実装&#34;&gt;3.実装&lt;/h2&gt;
&lt;p&gt;では、実際にやってみましょう。取得するのは、「&lt;code&gt;**Revisions Analysis Dataset -- Infra-annual Economic Indicators**&lt;/code&gt;」というデータセットです。OECDのデータセットの一つである&lt;code&gt;Monthly Ecnomic Indicator&lt;/code&gt;(MEI)の修正を含む全てのデータにアクセスしているので、主要な経済変数(国内総生産とその支出項目、鉱工業生産と建設生産指数、国際収支、複合主要指標、消費者物価指数、小売取引高、失業率、就業者数、時間当たり賃金、貨マネーサプライ、貿易統計など)について、初出時の速報データから修正が加えられた確報データまで確認することができます。このデータセットでは、1999年2月から毎月の間隔で、過去に主要経済指標データベースで分析可能だったデータのスナップショットが提供されています。つまり、各時点で入手可能なデータに基づく、予測モデルの構築ができるデータセットになっています。最新のデータは有用ですが速報値なので不確実性がつきまといます。バックテストを行う際にはこの状況が再現できず実際の運用よりも良い環境で分析してしまうことが問題になったりします。いわゆる&lt;code&gt;Jagged edge&lt;/code&gt;問題です。このデータセットでは実運用の状況が再現できるため非常に有用であると思います。今回は以下のデータ項目を取得します。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;統計概要&lt;/th&gt;
&lt;th&gt;統計ID&lt;/th&gt;
&lt;th&gt;頻度&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GDP&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;四半期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;鉱工業生産指数&lt;/td&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;月次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小売業取引高&lt;/td&gt;
&lt;td&gt;202&lt;/td&gt;
&lt;td&gt;月次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;マネーサプライ - 広義流動性&lt;/td&gt;
&lt;td&gt;601&lt;/td&gt;
&lt;td&gt;月次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;貿易統計&lt;/td&gt;
&lt;td&gt;702+703&lt;/td&gt;
&lt;td&gt;月次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;経常収支&lt;/td&gt;
&lt;td&gt;701&lt;/td&gt;
&lt;td&gt;四半期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;就業者数&lt;/td&gt;
&lt;td&gt;502&lt;/td&gt;
&lt;td&gt;月次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;失業率&lt;/td&gt;
&lt;td&gt;501&lt;/td&gt;
&lt;td&gt;月次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;時間当たり賃金（製造業）&lt;/td&gt;
&lt;td&gt;503&lt;/td&gt;
&lt;td&gt;月次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;単位あたり労働コスト&lt;/td&gt;
&lt;td&gt;504&lt;/td&gt;
&lt;td&gt;四半期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;建築生産指数&lt;/td&gt;
&lt;td&gt;203&lt;/td&gt;
&lt;td&gt;月次&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;まず、関数を定義します。引数はデータベースID、その他ID(国IDや統計ID)、開始地点、終了地点です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandasdmx &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sdmx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## C:\Users\aashi\ANACON~1\lib\site-packages\pandasdmx\remote.py:13: RuntimeWarning: optional dependency requests_cache is not installed; cache options to Session() have no effect
##   RuntimeWarning,
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;oecd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sdmx&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Request(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OECD&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resp_OECD&lt;/span&gt;(dsname,dimensions,start,end):
    dim_args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(d) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; d &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; dimensions]
    dim_str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(dim_args)
    resp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; oecd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;data(resource_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dsname, key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dim_str &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/all?startTime=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; start &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;amp;endTime=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; end)
    df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; resp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_pandas()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;(df)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;データを取得する次元を指定します。以下では、①国、②統計項目、③入手時点、④頻度をタプルで指定しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dimensions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;USA&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;JPN&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GBR&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FRA&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEU&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ITA&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CAN&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NLD&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BEL&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SWE&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CHE&amp;#39;&lt;/span&gt;),(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;201&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;202&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;601&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;702&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;703&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;701&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;502&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;503&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;504&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;203&amp;#39;&lt;/span&gt;),(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202001&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202002&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202003&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202004&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202005&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202006&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202007&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202008&amp;#34;&lt;/span&gt;),(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Q&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;関数を実行します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; resp_OECD(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MEI_ARCHIVE&amp;#39;&lt;/span&gt;,dimensions,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2019-Q1&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2020-Q2&amp;#39;&lt;/span&gt;)
result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## LOCATION       8266
## VAR            8266
## EDI            8266
## FREQUENCY      8266
## TIME_PERIOD    8266
## value          8266
## dtype: int64
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;データの最初数件を見てみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##   LOCATION  VAR     EDI FREQUENCY TIME_PERIOD  value
## 0      BEL  201  202001         M     2019-01  112.5
## 1      BEL  201  202001         M     2019-02  111.8
## 2      BEL  201  202001         M     2019-03  109.9
## 3      BEL  201  202001         M     2019-04  113.5
## 4      BEL  201  202001         M     2019-05  112.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;データがTidyな形(Long型)で入っているのがわかります。一番右側の&lt;code&gt;value&lt;/code&gt;が値として格納されており、その他インデックスは&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;LOCATION - 国&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VAR - 統計項目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EDI - 入手時点(MEI_ARCHIVEの場合)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FREQUENCY - 頻度(月次、四半期等)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TIME_PERIOD - 統計の基準時点&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;となっています。よって、&lt;code&gt;EDI&lt;/code&gt;が異なる行で同じ&lt;code&gt;TIME_PERIOD&lt;/code&gt;が存在します。例えば、上ではベルギー(&lt;code&gt;BEL&lt;/code&gt;)の鉱工業生産指数(201)の2020/01時点で利用可能な2019-01~2019-05のデータが表示されています。可視化や回帰も行いやすいLongフォーマットでの提供なので非常にありがたいですね。鉱工業生産指数がアップデートされていく様子を可視化してみました。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; result[result[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FREQUENCY&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;]
result[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TIME_PERIOD&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_datetime(result[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TIME_PERIOD&amp;#39;&lt;/span&gt;],format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y-%m&amp;#39;&lt;/span&gt;)
sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;relplot(data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;result[&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; df: (df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;VAR&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;201&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; (pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_numeric(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;EDI) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;202004&lt;/span&gt;)],x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TIME_PERIOD&amp;#39;&lt;/span&gt;,y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;,hue&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;LOCATION&amp;#39;&lt;/span&gt;,kind&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;,col&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EDI&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post22/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post22/index_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;2035&#34; /&gt;&lt;/p&gt;
&lt;p&gt;コロナの経済的な被害が大きくなるにつれて折れ線グラフが落ち込んでいく様子が見て取れる一方、微妙にですが過去値についても速報値→確報値へと修正が行われています。また、国によって統計データの公表にラグがあることも分かります。ベルギーは最も公表が遅いようです。時間があるときに、このデータを使った簡単な予測モデルの分析を追記したいと思います。&lt;/p&gt;
&lt;h2 id=&#34;4別件ですが&#34;&gt;4.別件ですが。。。&lt;/h2&gt;
&lt;p&gt;Python 3 エンジニア認定データ分析試験に合格しました。合格率70%だけあって、かなり簡単でしたが&lt;code&gt;Python&lt;/code&gt;を基礎から見返すいい機会になりました。今やっている業務ではデータ分析はおろか&lt;code&gt;Python&lt;/code&gt;や&lt;code&gt;R&lt;/code&gt;を使う機会すらないので、転職も含めた可能性を考えています。とりあえず、以下の資格を今年度中に取得する予定で、金融にこだわらずにスキルを活かせるポストを探していこうと思います。ダイエットと同じで宣言して自分を追い込まないと。。。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;G検定&lt;/li&gt;
&lt;li&gt;Oracle Database Master Silver SQL&lt;/li&gt;
&lt;li&gt;Linuc レベル 1&lt;/li&gt;
&lt;li&gt;基本情報技術者&lt;/li&gt;
&lt;li&gt;AWS 認定ソリューションアーキテクト - アソシエイト&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;合格状況は都度ブログで報告していきたいと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rcppでデータハンドリングを高速に行う(Tickデータの処理を事例に)</title>
      <link>/post/post21/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/post21/</guid>
      <description>&lt;h2 id=&#34;0-やりたいこと&#34;&gt;0. やりたいこと&lt;/h2&gt;
&lt;p&gt;今回お見せするのは前述の通り、為替のTickデータを使った前処理(と解析)になります。主眼を&lt;code&gt;Rcpp&lt;/code&gt;を用いた効率化に置いていますので詳しくは踏み入りませんが、やりたいことをざっくりと先に示しておきます。&lt;br&gt;
やりたいのは、JPY/USDレートの5分刻みリターンから&lt;em&gt;Jump&lt;/em&gt;を検知することです。ここでのJumpとはそれまでと比べて為替レートがガクッと上昇(下落)した点です。日中為替レートは小刻みに動きますが、なにかイベントがあると大きく上昇(下落)します。どんなイベントがJumpを引き起こすのかは非常に興味深い点です。これを検証するにはまずJumpを検知する必要があるのです。 参考とするのは以下の論文です。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://academic.oup.com/rfs/article-abstract/21/6/2535/1574138?redirectedFrom=fulltext&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Suzanne S. Lee &amp;amp; Per A. Mykland, 2008. &amp;ldquo;Jumps in Financial Markets: A New Nonparametric Test and Jump Dynamics,&amp;rdquo; Review of Financial Studies, Society for Financial Studies, vol. 21(6), pages 2535-2563, November.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Citationが204もある非常に評価されている論文です。推定方法を掻い摘んで説明します。まず、連続複利リターンを$d\log S(t)$ for $t&amp;gt;0$とします。ここで、$S(t)$は$t$時点での資産価格です。市場にJumpがない場合、$S(t)$は以下の確率過程に従うと仮定します。 
$$
d\log S(t) = \mu(t)dt + \sigma(t)dW(t) \tag{1}
$$ 
ここで、$W(t)$は標準ブラウン運動、$\mu(t)$はドリフト項、$\sigma(t)$はスポットボラティリティです。また、Jumpがあるとき、$S(t)$は 
$$
d\log S(t) = \mu(t)dt + \sigma(t)dW(t) + Y(t)dJ(t) \tag{2}
$$ 
に従うと仮定します。ここで、$J(t)$は$W(t)$とは独立したカウント過程です。&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;$Y(t)$はジャンプのサイズを表現しており、予測可能な過程であるとします。&lt;/p&gt;
&lt;p&gt;次に、$S(t)$の対数リターンを考えます。それはつまり$\log S(t_i)/S(t_{i-1})$ですが、これは正規分布$N(0,\sigma(t_i))$に従います。&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;ここで、$t_{i-1}$から$t_{i}$にJumpがあった際の$t_i$時点の統計量$\mathcal{L(i)}$を以下で定義します。&lt;/p&gt;
&lt;p&gt;$$
\mathcal{L(i)} \equiv \frac{|\log S(t_i)/S(t_{i-1})|}{\hat{\sigma}_{t_i}} \tag{3}
$$ 
上記は対数リターンの絶対値を単純に標準化したものですが、標準偏差の推定量には以下で定義される&amp;quot;Realized Bipower Variation&amp;quot;を使用しています。
$$
\hat{\sigma}_{t_i} = \frac{1}{K-2}\sum_{j=i-K+2}^{i-2}|\log S(t_j)/\log S(t_{j-1})||\log S(t_{j-1})/\log S(t_{j-2})| \tag{4}
$$ 
$K$はWindowに含まれるサンプルサイズの数です。仮に5min刻みリターンを用い、2020/9/10 10:00にJumpが発生した場合、$K=270$としている場合は前日2020/9/9 11:30から2020/9/11 09:55までのサンプルを用いて計算することになります。やっていることは、リターンの絶対値をかけたものを足し合わせるということですが、これでJumpが生じた次の瞬間(つまり$t_{i+1}$とか）の推定値がJumpに影響されにくいようです。ちなみに$K=270$は5min刻みリターンの場合の推奨値と別の文献で紹介されています。&lt;/p&gt;
&lt;p&gt;こうして計算されたJump統計量$\mathcal{L(i)}$をどのように統計的検定に用いてJumpを検出するかに話を移しましょう。これは確率変数である$\mathcal{L(i)}$の最大値(こちらも確率変数)を考え、その分布から大きく逸脱した値を取った場合(95%点とか)、そのリターンをJumpとします。
期間$[t_{i-1},t_{i}]$にJumpがないとした場合、この期間の長さ$\Delta=t_{i}-t_{i-1}$を$0$に近づけると、つまり$\Delta\rightarrow0$とすると、標準正規変数の絶対値の最大値は、ガンベル分布に収束します。皆さん大好き極値統計ですね。よって、Jumpは以下の条件が満たされた際に帰無仮説が棄却され、検出することができます。 
$$
\mathcal{L(i)} &amp;gt; G^{-1}(1-\alpha)S_{n} + C_{n} \tag{5}
$$ 
ここで、$G^{-1}(1-\alpha)$は標準ガンベル分布の$(1-\alpha)$分位関数です。$\alpha=10%$だと2.25になります。また、 
$$
S_{n} = \frac{1}{c(2\log n)^{0.5}},~ \&lt;br&gt;
C_{n} = \frac{(2\log n)^{0.5}}{c}-\frac{\log \pi+\log(\log n)}{2c(2\log n)^{0.5}}
$$ 
です(導出はしませんが、1式と2式を使って証明できます)。ここで、$c=(2/\pi)^{0.5}$で、$n$は推定に使用する総サンプルサイズです。 最終的に、$Jump_{t_i}$は
$$
Jump_{t_i} = \log\frac{S(t_i)}{S(t_{i-1})}×I(\mathcal{L(i)} - G^{-1}(1-\alpha)S_{n} + C_{n})\tag{6}
$$ 
で求められることになります。ここで、$I(・)$は中身が0より大きいと1、それ以外は0を返すIndicator関数です。&lt;/p&gt;
&lt;h2 id=&#34;1-データの読み込み&#34;&gt;1. データの読み込み&lt;/h2&gt;
&lt;p&gt;では、推定方法がわかったのでまずTickデータの読み込みをしましょう。データは&lt;code&gt;QuantDataManager&lt;/code&gt;からcsvを取得し、それを作業ディレクトリに保存しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(magrittr)

&lt;span style=&#34;color:#75715e&#34;&gt;# Tick dataの読み込み&lt;/span&gt;
strPath &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; r&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(C:\Users\hogehoge\JPYUSD_Tick_2011.csv)&amp;#34;&lt;/span&gt;
JPYUSD &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; readr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(strPath)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;関係ないんですが、最近Rを4.0.2へ上げました。4.0以上では&lt;code&gt;Python&lt;/code&gt;でできた文字列のEscapeができるとうことで今までのストレスが解消されてかなりうれしいです。
データは以下のような感じで、日付の他にBid値、Ask値と取引量が格納されています。なお、ここでは2011年のTickを使用しています。東日本大震災の時のドル円を対象とするためです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summary&lt;/span&gt;(JPYUSD)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##     DateTime                        Bid             Ask            Volume     
##  Min.   :2011-01-03 07:00:00   Min.   :75.57   Min.   :75.58   Min.   : 1.00  
##  1st Qu.:2011-03-30 15:09:23   1st Qu.:77.43   1st Qu.:77.44   1st Qu.: 2.00  
##  Median :2011-06-15 14:00:09   Median :80.40   Median :80.42   Median : 2.00  
##  Mean   :2011-06-22 05:43:11   Mean   :79.91   Mean   :79.92   Mean   : 2.55  
##  3rd Qu.:2011-09-09 13:54:51   3rd Qu.:81.93   3rd Qu.:81.94   3rd Qu.: 3.00  
##  Max.   :2011-12-30 06:59:59   Max.   :85.52   Max.   :85.54   Max.   :90.00
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ちなみに、&lt;code&gt;DateTime&lt;/code&gt;はUTC基準で日本時間だと2011/1/3 07:00:00から2011-12-30 06:59::59(米国時間2011-12-30 16:59:59)までを含んでいます。サンプルサイズは約1200万件です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(JPYUSD)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## [1] 11946621
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;2-前処理&#34;&gt;2. 前処理&lt;/h2&gt;
&lt;p&gt;では次にBidとAskから仲値を計算し、後でリターンを算出するために対数を取っておきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# AskとBidの仲値を計算し、対数化(対数リターン算出用)&lt;/span&gt;
JPYUSD &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; JPYUSD &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(Mid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (Ask&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;Bid)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                     dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(logMid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Mid))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;現状不規則に並んでいる取引データを5min刻みのリターンに整形します。やり方は、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;1年間を5min毎に刻んだ&lt;code&gt;POSIXct&lt;/code&gt;ベクトルを作る。&lt;/li&gt;
&lt;li&gt;1.を引数として渡すと、その5minのWindowのうち、最初と最後のサンプルから対数リターンを順々に計算する関数を作成する。&lt;/li&gt;
&lt;li&gt;実行。
という計画です。まず、1.のベクトルを作成します。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 5min刻みでのリターンを算出するためのPOSIXベクトルを作成(288×日数)&lt;/span&gt;
start &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.POSIXct&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2011-01-02 22:00:00&amp;#34;&lt;/span&gt;,tz&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTC&amp;#34;&lt;/span&gt;)
end &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.POSIXct&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2011-12-31 21:55:00&amp;#34;&lt;/span&gt;,tz&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTC&amp;#34;&lt;/span&gt;)
from &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt;(from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;start,to&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;end,by&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;では、2.に移ろうということなんですが、データが1200万件もあると&lt;code&gt;R&lt;/code&gt;で&lt;code&gt;purrr::map&lt;/code&gt;とか&lt;code&gt;apply&lt;/code&gt;属を使用したとしても、関数呼び出しに時間がかかって結構非効率だったりします。。。&lt;code&gt;sapply&lt;/code&gt;でやってみましたがなかなか処理が完了せず、強制終了しました。こういうときには、&lt;code&gt;Rccp&lt;/code&gt;が便利です。&lt;code&gt;R&lt;/code&gt;はグラフや統計処理のための非常に便利な関数が多数ありますが、ユーザーで定義した関数の呼び出しを含む、大量の繰り返し処理を苦手とします(スクリプト言語なのでコンパイル言語よりはという意味です)。なので、繰り返し処理の部分だけ、&lt;code&gt;C++&lt;/code&gt;で書いてしまって、それを&lt;code&gt;Rcpp&lt;/code&gt;をつかって&lt;code&gt;R&lt;/code&gt;の関数としてコンパイルし、実行。結果の集計や可視化、執筆は&lt;code&gt;R&lt;/code&gt;で行うというフローが非常に効率的です。
また、&lt;code&gt;Rccp&lt;/code&gt;は&lt;code&gt;R&lt;/code&gt;に似た違和感の少ない記述方法で&lt;code&gt;C++&lt;/code&gt;を記述するのを助けてくれます。詳しいことは以下を見れば問題ないと思います。かなりまとまっていて控えめに言って神です。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://teuder.github.io/rcpp4everyone_ja/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;みんなのRcpp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;では、2.にあたるコードを書いていきます。コーディングに当たってはネット上の記事を参考にしました。&lt;code&gt;C++&lt;/code&gt;は&lt;code&gt;R&lt;/code&gt;よりも歴史があるし、使用者も多いので知りたい情報はすぐ見つけられます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;Rcpp.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; Rcpp;
&lt;span style=&#34;color:#75715e&#34;&gt;//[[Rcpp::plugins(cpp11)]]
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;// [[Rcpp::export]]
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;DataFrame &lt;span style=&#34;color:#a6e22e&#34;&gt;Rolling_r_cpp&lt;/span&gt;(
    DataFrame input,               &lt;span style=&#34;color:#75715e&#34;&gt;//（計測時刻time, 計測値data）のデータフレーム
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    newDatetimeVector from,        &lt;span style=&#34;color:#75715e&#34;&gt;//計算するタイミングの始点ベクトル
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; time_window &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;//計算するwindow幅（秒）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{ 
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// 計測時刻と計測値をベクトルとして取り出す
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  newDatetimeVector time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DateTime&amp;#34;&lt;/span&gt;]; &lt;span style=&#34;color:#75715e&#34;&gt;// 今回は time は昇順にソートされているのが前提です。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  NumericVector     data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;logMid&amp;#34;&lt;/span&gt;];
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// 計算するタイミングの終点ベクトル
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  newDatetimeVector to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; from &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; time_window;
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// 計算する数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  R_xlen_t N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; from.length();
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// 格納するベクトル
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  NumericVector value(N);
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// ベクトル要素の位置をあらわすオブジェクト
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  newDatetimeVector&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;iterator begin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; time.begin();
  newDatetimeVector&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;iterator end   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; time.end();
  newDatetimeVector&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;iterator p1    &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; begin;
  newDatetimeVector&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;iterator p2    &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; begin;
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// window i についてループ
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(R_xlen_t i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; N; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;i){
    &lt;span style=&#34;color:#75715e&#34;&gt;// Rcout &amp;lt;&amp;lt; &amp;#34;i=&amp;#34; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; from[i];         &lt;span style=&#34;color:#75715e&#34;&gt;//windowの始点の時刻
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; time_window; &lt;span style=&#34;color:#75715e&#34;&gt;//windowの終点の時刻
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
    &lt;span style=&#34;color:#75715e&#34;&gt;// windowの終点が最初の計測時刻以前の時はNA、または
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// windowの始点が最後の計測時刻のより後の時はNA
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;begin &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; f &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)){ 
      value[i]  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NA_REAL;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;;&lt;span style=&#34;color:#75715e&#34;&gt;//次のループへ
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// ベクトル time の位置 p1 以降の要素xから
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 時刻がwindowの始点f「以降」である「最初の要素」の位置を p1 とする
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    p1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;find_if(p1, end, [&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;f](&lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; x){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;x;});
    &lt;span style=&#34;color:#75715e&#34;&gt;// p1 = std::lower_bound(p1, end, f); //上と同義
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
    &lt;span style=&#34;color:#75715e&#34;&gt;// ベクトル time の位置 p1 以降の要素xから
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 時刻がwindowの終点t「より前」である「最後の要素」の位置を p2 とする
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// （下では、時刻がwindowの終点t「以降」である「最初の要素」の１つ前の位置、にすることで実現している’）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    p2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;find_if(p1, end, [&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;t](&lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; x){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;x;}) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; ;
    &lt;span style=&#34;color:#75715e&#34;&gt;// p2 = std::lower_bound(p1, end, t) - 1 ;//上と同義
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
    &lt;span style=&#34;color:#75715e&#34;&gt;// 要素の位置p1,p2を、要素番号i1, i2に変換する
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    R_xlen_t i1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p1 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; begin;
    R_xlen_t i2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p2 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; begin; 
    
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// 要素番号の確認
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// C++は要素番号が0から始まるのでRに合わせるために1を足している
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Rcout &amp;lt;&amp;lt; &amp;#34;i1 = &amp;#34; &amp;lt;&amp;lt; i1+1 &amp;lt;&amp;lt; &amp;#34; i2 = &amp;#34; &amp;lt;&amp;lt; i2+1 &amp;lt;&amp;lt; &amp;#34;\n&amp;#34;;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// 該当する範囲のデータについて計算する
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(i1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;i2) {
      value[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NA_REAL; &lt;span style=&#34;color:#75715e&#34;&gt;// window内にデータがない場合
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { 
      value[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data[i2] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; data[i1];
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// ↑を変更することで様々なwindow関数を作成できる
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
  }
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// 計算した時間と、値をデータフレームとして出力する
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  DataFrame out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
    DataFrame&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;create(
      Named(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;from&amp;#34;&lt;/span&gt;, from),
      Named(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;, value&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;));
  
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; out;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Rcpp::sourceCpp&lt;/code&gt;でコンパイルしたら、以下のように&lt;code&gt;R&lt;/code&gt;の関数として実行します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;system.time&lt;/span&gt;(results &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Rolling_r_cpp&lt;/span&gt;(JPYUSD,from))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##    ユーザ   システム       経過  
##       0.06       0.00       0.07
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;はい。1200万件のデータの処理に1秒かかりません。便利ー。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summary&lt;/span&gt;(results)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##       from                           r         
##  Min.   :2011-01-02 22:00:00   Min.   :-1.823  
##  1st Qu.:2011-04-03 15:58:45   1st Qu.:-0.014  
##  Median :2011-07-03 09:57:30   Median : 0.000  
##  Mean   :2011-07-03 09:57:30   Mean   : 0.000  
##  3rd Qu.:2011-10-02 03:56:15   3rd Qu.: 0.015  
##  Max.   :2011-12-31 21:55:00   Max.   : 2.880  
##                                NA&#39;s   :29977
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;問題なく、リターンが計算されています。では、&lt;code&gt;Realized Bipower Variation&lt;/code&gt;の計算に移りましょう。5min刻みの場合はWindowの長さは270が推奨でしたが、そこも引数として柔軟を持たせた作りにします。また、&lt;code&gt;NA&lt;/code&gt;の処理についても丁寧に行います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;Rcpp.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; Rcpp;
&lt;span style=&#34;color:#75715e&#34;&gt;//[[Rcpp::plugins(cpp11)]]
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;// [[Rcpp::export]]
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbv_cpp&lt;/span&gt;(
    NumericVector x, &lt;span style=&#34;color:#75715e&#34;&gt;// rbvを計算するリターンベクトル
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; na_rm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true) &lt;span style=&#34;color:#75715e&#34;&gt;// xにNAが含まれている場合、取り除いて計算するか
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// 計算回数を取得
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  R_xlen_t N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x.length();
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// 計算結果を入れる変数を定義
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;

  &lt;span style=&#34;color:#75715e&#34;&gt;// xの欠損有無を確認
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  LogicalVector lg_NA &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; is_na(x);
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// xにNAが存在した場合、そのNAを除いて計算するかどうか
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(any(lg_NA).is_true() and na_rm&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;FALSE){
    out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NA_REAL; &lt;span style=&#34;color:#75715e&#34;&gt;// NAを計算結果として出力
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// NAを除く場合
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (any(lg_NA).is_true() and na_rm&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;TRUE){
      x[is_na(x)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;TRUE] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// NAに0を埋め、実質的に計算から除外する
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// rbvの分子(総和)を計算
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(R_xlen_t i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; N; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;i){
      out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; out &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;abs(x[i])&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;abs(x[i&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]);
    }
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// 平均値を計算し、ルートをとる
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; denomi; &lt;span style=&#34;color:#75715e&#34;&gt;//分母
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(N&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;sum(lg_NA)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
      denomi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; N&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;sum(lg_NA)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
      denomi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
    }
    out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; out&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;denomi;
    out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;sqrt(out);
  }
  
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; out;
}

&lt;span style=&#34;color:#75715e&#34;&gt;// [[Rcpp::export]]
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;DataFrame &lt;span style=&#34;color:#a6e22e&#34;&gt;Rolling_rbv_cpp&lt;/span&gt;(
    DataFrame input, &lt;span style=&#34;color:#75715e&#34;&gt;//（計測時刻time, 計測値data）のデータフレーム
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; K &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;270&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 計算するRolling Window幅
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; na_pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false, &lt;span style=&#34;color:#75715e&#34;&gt;// Window幅が足りないときにNAを返すか
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; na_remove &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false &lt;span style=&#34;color:#75715e&#34;&gt;// Window幅の中にNAが存在した場合、除いて計算を行うか
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;){
  &lt;span style=&#34;color:#75715e&#34;&gt;// リターンベクトルとサンプル数を取り出す
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  NumericVector data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;];
  R_xlen_t T &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data.length();
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// 計算結果を格納するベクトルを準備
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  NumericVector value(T);
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// Windows幅毎にRBVを計算し、格納する
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(na_pad&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;TRUE){
    value[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NA_REAL; &lt;span style=&#34;color:#75715e&#34;&gt;// NAを返す
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    value[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NA_REAL; &lt;span style=&#34;color:#75715e&#34;&gt;// NAを返す
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    value[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NA_REAL; &lt;span style=&#34;color:#75715e&#34;&gt;// NAを返す
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
    value[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 0を返す
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    value[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 0を返す
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    value[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// NAを返す
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  }
  
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(R_xlen_t t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;; t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; T; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;t){
    &lt;span style=&#34;color:#75715e&#34;&gt;// Windows幅が足りるかどうかで処理を分岐
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (t&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;K&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
      value[t] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rbv_cpp(data[seq(t&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;K,t&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)],na_remove); &lt;span style=&#34;color:#75715e&#34;&gt;// 通常計算を実行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(na_pad&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;FALSE) {
      value[t] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rbv_cpp(data[seq(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,t&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)],na_remove); &lt;span style=&#34;color:#75715e&#34;&gt;// Kに満たない不完全なWidnows幅で計算を実行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
      value[t] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NA_REAL; &lt;span style=&#34;color:#75715e&#34;&gt;// NAを返す
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
  }
  
  &lt;span style=&#34;color:#75715e&#34;&gt;// 計算した時間と値をデータフレームとして出力する
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  DataFrame out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
    DataFrame&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;create(
      Named(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;from&amp;#34;&lt;/span&gt;, input[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;from&amp;#34;&lt;/span&gt;]),
      Named(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;, data),
      Named(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rbv&amp;#34;&lt;/span&gt;,value));
  
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; out;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;では、これもコンパイルし、&lt;code&gt;R&lt;/code&gt;で実行します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;system.time&lt;/span&gt;(results &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; results &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Rolling_rbv_cpp&lt;/span&gt;(na_remove &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##    ユーザ   システム       経過  
##       1.00       0.38       1.45
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;こちらも一瞬ですね。&lt;/p&gt;
&lt;h2 id=&#34;3-jump統計量の計算&#34;&gt;3. Jump統計量の計算&lt;/h2&gt;
&lt;p&gt;では、次に今計算したリターンと標準偏差から統計量$\mathcal{L}_{t_i}$を計算しましょう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 対数リターンの絶対値を標準化=Jump統計量&lt;/span&gt;
results &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; results &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(J&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(rbv&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;abs&lt;/span&gt;(r)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;rbv,&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;今こんな感じです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;summary&lt;/span&gt;(results)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##       from                           r               rbv              J        
##  Min.   :2011-01-02 22:00:00   Min.   :-1.823   Min.   :0.00    Min.   : 0.00  
##  1st Qu.:2011-04-03 15:58:45   1st Qu.:-0.014   1st Qu.:0.02    1st Qu.: 0.28  
##  Median :2011-07-03 09:57:30   Median : 0.000   Median :0.02    Median : 0.64  
##  Mean   :2011-07-03 09:57:30   Mean   : 0.000   Mean   :0.03    Mean   : 0.93  
##  3rd Qu.:2011-10-02 03:56:15   3rd Qu.: 0.015   3rd Qu.:0.03    3rd Qu.: 1.23  
##  Max.   :2011-12-31 21:55:00   Max.   : 2.880   Max.   :0.16    Max.   :58.60  
##                                NA&#39;s   :29977    NA&#39;s   :44367   NA&#39;s   :44423
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;では、Jump検定に移りましょう。まず、必要な関数を定義しておきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Jump検定を計算するための定数&amp;amp;関数を準備&lt;/span&gt;
c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;pi&lt;/span&gt;)^0.5
Cn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(n){
  &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt;((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(n))^0.5&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;pi&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(n)))&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(n))^0.5))
}
Sn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(n){
  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;(c&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(n))^0.5)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;では検定を行います。棄却されたサンプルは1、それ以外は0を返します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Jump検定(10%)を実行(返り値はlogical)&lt;/span&gt;
N &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(results&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;J)
results &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; results &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(Jump &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; J &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.25&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Sn&lt;/span&gt;(N) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Cn&lt;/span&gt;(N))
&lt;span style=&#34;color:#a6e22e&#34;&gt;summary&lt;/span&gt;(results)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##       from                           r               rbv              J        
##  Min.   :2011-01-02 22:00:00   Min.   :-1.823   Min.   :0.00    Min.   : 0.00  
##  1st Qu.:2011-04-03 15:58:45   1st Qu.:-0.014   1st Qu.:0.02    1st Qu.: 0.28  
##  Median :2011-07-03 09:57:30   Median : 0.000   Median :0.02    Median : 0.64  
##  Mean   :2011-07-03 09:57:30   Mean   : 0.000   Mean   :0.03    Mean   : 0.93  
##  3rd Qu.:2011-10-02 03:56:15   3rd Qu.: 0.015   3rd Qu.:0.03    3rd Qu.: 1.23  
##  Max.   :2011-12-31 21:55:00   Max.   : 2.880   Max.   :0.16    Max.   :58.60  
##                                NA&#39;s   :29977    NA&#39;s   :44367   NA&#39;s   :44423  
##     Jump        
##  Mode :logical  
##  FALSE:59864    
##  TRUE :257      
##  NA&#39;s :44423    
##                 
##                 
## 
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;4-ggplot2を用いた可視化&#34;&gt;4. ggplot2を用いた可視化&lt;/h2&gt;
&lt;p&gt;数値が計算できましたので可視化しましょう。2011/03/11の日中のJPY/USDの5min刻み対数リターンの推移とJumpを重ねてPlotします。ちなみに横軸は日本時間に修正しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 2011/03/11の東日本大震災発生時のJumpについてPlot&lt;/span&gt;
results &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(from &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.POSIXct&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2011-03-11 00:00:00&amp;#34;&lt;/span&gt;,tz&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTC&amp;#34;&lt;/span&gt;),from &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.POSIXct&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2011-03-12 00:00:00&amp;#34;&lt;/span&gt;,tz&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTC&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
  ggplot2&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(ggplot2&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;from,y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;r)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  ggplot2&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;geom_path&lt;/span&gt;(linetype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  ggplot2&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;geom_path&lt;/span&gt;(ggplot2&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;from,y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;Jump,colour&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  ggplot2&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_datetime&lt;/span&gt;(date_breaks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2 hours&amp;#34;&lt;/span&gt;, labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; scales&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;date_format&lt;/span&gt;(format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%H:%M&amp;#34;&lt;/span&gt;,tz&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Asia/Tokyo&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  ggplot2&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggtitle&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JPY/USD Jumps within Tohoku earthquake on 2011-3-11&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Warning: Removed 36 row(s) containing missing values (geom_path).

## Warning: Removed 36 row(s) containing missing values (geom_path).
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;ここまで執筆するのに結構時間使っていて、今23:37なんで深い考察は控えますが、震災が発生したのが14:46:18ですから市場は震災直後即座に円安に反応したことが分かります。その後なぜか円高方向へ進み19:00にはピークになっています。安全資産の円とか言われますが、この時ばかりは不確実性の高まりからして安全じゃないだろと思いますが。。。&lt;/p&gt;
&lt;h2 id=&#34;5-まとめ&#34;&gt;5. まとめ&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Rcpp&lt;/code&gt;を使った&lt;code&gt;R&lt;/code&gt;分析の効率化について紹介しました。&lt;code&gt;C++&lt;/code&gt;は愚直にコードを書いてもRより格段に処理が早いのでコーディングミスしにくい印象です。学術的な実装をやるときは内容が複雑になるのでこれはありがたいです。また、コンパイルエラーが起こってもRStudioを使っていればどこでコンパイルエラーが起こっているか手がかりをくれますのでその点でもストレスはないのでお勧めです。&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;非負、整数、非減少の値を持つ確率過程のこと。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;平均はドリフト項の形状により必ずしも0にはなりませんが、今ドリフト項は十分小さい値を想定しているのでこの書き方にさせてください。論文ではより厳密に定義しています。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>PytorchのPre-trainedモデルで馬体写真の背景を自動トリミングする</title>
      <link>/post/post20/</link>
      <pubDate>Wed, 12 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/post20/</guid>
      <description>&lt;p&gt;おはこんばんにちは。前回、競走馬の馬体写真からCNNを用いて順位を予想するモデルを構築しました。結果は芳しくなく、特に&lt;code&gt;shap&lt;/code&gt;値を用いた要因分析を行うと馬体よりも背景の厩舎に反応している様子が見えたりと分析の精緻化が必要となりました。今回は&lt;code&gt;Pytorch&lt;/code&gt;のPre-trainedモデルを用いて馬体写真から背景を切り出し、馬体のみとなった写真で再分析を行いたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;1-pre-trainedモデルのダウンロード&#34;&gt;1. Pre-trainedモデルのダウンロード&lt;/h2&gt;
&lt;p&gt;コードは&lt;a href=&#34;https://pytorch.org/hub/pytorch_vision_deeplabv3_resnet101/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;のものを参考にしています。まず、パッケージをインストールします。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cv2
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; torch
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; torchvision
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; torchvision &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; transforms
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; glob
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; PIL &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Image
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; PIL
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;学習済みモデルのインストールを行います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#学習済みモデルをインストール&lt;/span&gt;
device &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; torch&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;device(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cuda:0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; torch&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cuda&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;is_available() &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cpu&amp;#34;&lt;/span&gt;)
model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; torchvision&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;models&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;segmentation&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deeplabv3_resnet101(pretrained&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to(device)
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;eval()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;どうやら全てのPre-trainedモデルは、同じ方法で正規化された形状$（N, 3, H, W）$の3チャンネルRGB画像のミニバッチを想定しているようです。ここで$N$は画像の数、$H$と$W$は少なくとも224ピクセルであることが想定されています。画像は、[0, 1]の範囲にスケーリングされ、その後、平均値＝[0.485, 0.456, 0.406]と標準値＝[0.229, 0.224, 0.225]を使用して正規化される必要があります。ということで、前処理を行う関数を定義します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#前処理&lt;/span&gt;
preprocess &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; transforms&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Compose([
    transforms&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ToTensor(),
    transforms&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Normalize(mean&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0.485&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.456&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.406&lt;/span&gt;], std&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0.229&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.224&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.225&lt;/span&gt;]),
])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-背景削除処理の実行&#34;&gt;2. 背景削除処理の実行&lt;/h2&gt;
&lt;p&gt;では、前回記事の&lt;code&gt;selenium&lt;/code&gt;を用いたコードで収集した画像を読み込み、1枚1枚背景削除処理を行っていきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#フォルダを指定&lt;/span&gt;
folders &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\aashi\umanalytics\photo\image&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;#それぞれのフォルダから画像を読み込み、Image関数を使用してRGB値ベクトル(numpy array)へ変換&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i, folder &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(folders):
  files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glob&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glob(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:/Users/aashi/umanalytics/photo/image/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; folder &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/*.jpg&amp;#34;&lt;/span&gt;)
  index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k, file &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(files):
    img_array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fromfile(file, dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;uint8)
    img &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cv2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;imdecode(img_array, cv2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;IMREAD_COLOR)
    h,w,_ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; img&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
    input_tensor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; preprocess(img)
    input_batch &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input_tensor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unsqueeze(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to(device)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; torch&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;no_grad():
      output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; model(input_batch)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;out&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
    output_predictions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; output&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argmax(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
    mask_array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; output_predictions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;byte()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cpu()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;numpy()
    Image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fromarray(mask_array&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;save(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C:\Users\aashi\umanalytics\photo\image\mask.jpg&amp;#39;&lt;/span&gt;)
    mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cv2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;imread(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C:\Users\aashi\umanalytics\photo\image\mask.jpg&amp;#39;&lt;/span&gt;)
    bg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;full_like(img,&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;)
    img &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cv2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;multiply(img&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(float), mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(float)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;)
    bg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cv2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;multiply(bg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(float), &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(float)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;)
    outImage &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cv2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(img, bg)
    Image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fromarray(outImage&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;uint8))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;convert(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;L&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;save(file)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;行っている処理はPre-trainedモデルで以下のような&lt;code&gt;mask&lt;/code&gt;画像を出力し、実際の画像の&lt;code&gt;numpy&lt;/code&gt;配列と&lt;code&gt;mask&lt;/code&gt;画像を統合して、背景削除画像を生成しています。出力例は以下のような感じです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gray()
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;))
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;imshow(img)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;imshow(mask)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;imshow(outImage)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post20/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;1920&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;フォルダはこんな感じです。うまく処理できているものもあれば調教師の方が映ってしまっているのもありますね。物体を識別して、馬だけを&lt;code&gt;mask&lt;/code&gt;する方法もあるとは思いますがこのモデルでは物体のラベリングまではできないのでこのまま進みます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;maskhorse.PNG&#34; alt=&#34;フォルダ&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-cnnを用いた分析&#34;&gt;3. CNNを用いた分析&lt;/h2&gt;
&lt;p&gt;ここからは前回記事と同じ内容です。結果のみ掲載します。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Test accuracy: 0.711864406779661
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;## &amp;lt;sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x000000003694DFC8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;../../post/post20/index_files/figure-html/unnamed-chunk-9-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;まったく識別できていません。全ての馬が負値の予想になっています。馬体写真には順位を予測するような特徴量はないんでしょうか。それともG1の出走馬ではバラツキがなく、識別不可能なのでしょうか。いずれいにせよ、ちょっと厳しそうです。&lt;/p&gt;
&lt;h2 id=&#34;4-shap値を用いた結果解釈&#34;&gt;4. Shap値を用いた結果解釈&lt;/h2&gt;
&lt;p&gt;前回同様、どのように失敗したのか&lt;code&gt;shap&lt;/code&gt;値を使って検証してみましょう。この画像を例として使います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;imshow(X_test[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post20/index_files/figure-html/unnamed-chunk-10-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; shap
background &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; X_resampled[np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;choice(X_resampled&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,replace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)]

e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; shap&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GradientExplainer(model,background)

shap_values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shap_values(X_test[[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]])
shap&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image_plot(shap_values[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],X_test[[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post20/index_files/figure-html/unnamed-chunk-11-7.png&#34; width=&#34;576&#34; /&gt;&lt;/p&gt;
&lt;p&gt;前足から顔にかけてを評価しているようです。意外に臀部を評価している様子はありません。&lt;/p&gt;
&lt;h2 id=&#34;5まとめ&#34;&gt;5.まとめ&lt;/h2&gt;
&lt;p&gt;厩舎背景を削除し、再実行してみましたが結果変わらずでした。PyTorchを使ったり、背景削除を行ういい経験にはなりましたが結果は伴わずということで馬体写真はいったんここでストップです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LightGBMを使用して競馬結果を予想してみる</title>
      <link>/post/post16/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/post/post16/</guid>
      <description>&lt;p&gt;おはこんばんにちは。かなり久しぶりではありますが、Pythonの勉強をかねて以前yahoo.keibaで収集した競馬のレース結果データから、レース結果を予想するモデルを作成したいと思います。&lt;/p&gt;
&lt;h2 id=&#34;1データインポート&#34;&gt;1.データインポート&lt;/h2&gt;
&lt;p&gt;まず、前回&lt;code&gt;sqlite&lt;/code&gt;に保存したレース結果データを&lt;code&gt;pandas&lt;/code&gt;データフレームへ保存します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlite3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C:\hogehoge\horse_data.db&amp;#39;&lt;/span&gt;)
sql &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SELECT * FROM race_result&amp;#39;&lt;/span&gt;
df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_sql(con&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;conn,sql&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sql)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;データの中身を確認してみましょう。列は以下のようになっています。orderが着順となっています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Index([&#39;order&#39;, &#39;frame_number&#39;, &#39;horse_number&#39;, &#39;trainer&#39;, &#39;passing_rank&#39;,
##        &#39;last_3F&#39;, &#39;time&#39;, &#39;margin&#39;, &#39;horse_name&#39;, &#39;horse_age&#39;, &#39;horse_sex&#39;,
##        &#39;horse_weight&#39;, &#39;horse_weight_change&#39;, &#39;brinker&#39;, &#39;jockey&#39;,
##        &#39;jockey_weight&#39;, &#39;jockey_weight_change&#39;, &#39;odds&#39;, &#39;popularity&#39;,
##        &#39;race_date&#39;, &#39;race_course&#39;, &#39;race_name&#39;, &#39;race_distance&#39;, &#39;type&#39;,
##        &#39;race_turn&#39;, &#39;race_condition&#39;, &#39;race_weather&#39;, &#39;colour&#39;, &#39;owner&#39;,
##        &#39;farm&#39;, &#39;locality&#39;, &#39;horse_birthday&#39;, &#39;father&#39;, &#39;mother&#39;, &#39;prize&#39;,
##        &#39;http&#39;],
##       dtype=&#39;object&#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;orderの中身を確認してみると、括弧（）がついている物が多く、また取消や中止、失格などが存在するため、文字型に認識されていることがわかります。ちなみに括弧（）内の順位は入線順位というやつで、他馬の走行を妨害したりして順位が降着させられたことを意味します（http://www.jra.go.jp/judge/）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[:,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unique()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## array([&#39;1&#39;, &#39;7&#39;, &#39;2&#39;, &#39;8&#39;, &#39;5&#39;, &#39;15&#39;, &#39;6&#39;, &#39;12&#39;, &#39;11&#39;, &#39;14&#39;, &#39;3&#39;, &#39;13&#39;,
##        &#39;4&#39;, &#39;16&#39;, &#39;9&#39;, &#39;10&#39;, &#39;取消&#39;, &#39;中止&#39;, &#39;除外&#39;, &#39;17&#39;, &#39;18&#39;, &#39;4(3)&#39;, &#39;2(1)&#39;,
##        &#39;3(2)&#39;, &#39;6(4)&#39;, &#39;失格&#39;, &#39;9(8)&#39;, &#39;16(6)&#39;, &#39;12(12)&#39;, &#39;13(9)&#39;, &#39;6(3)&#39;,
##        &#39;10(7)&#39;, &#39;6(5)&#39;, &#39;9(3)&#39;, &#39;11(8)&#39;, &#39;13(2)&#39;, &#39;12(9)&#39;, &#39;14(7)&#39;,
##        &#39;10(1)&#39;, &#39;16(8)&#39;, &#39;14(6)&#39;, &#39;10(3)&#39;, &#39;12(1)&#39;, &#39;13(6)&#39;, &#39;7(1)&#39;,
##        &#39;12(6)&#39;, &#39;6(2)&#39;, &#39;11(2)&#39;, &#39;15(6)&#39;, &#39;13(10)&#39;, &#39;14(4)&#39;, &#39;7(5)&#39;,
##        &#39;17(4)&#39;, &#39;9(7)&#39;, &#39;16(14)&#39;, &#39;12(11)&#39;, &#39;14(2)&#39;, &#39;8(2)&#39;, &#39;9(5)&#39;,
##        &#39;11(5)&#39;, &#39;12(7)&#39;, &#39;11(1)&#39;, &#39;12(8)&#39;, &#39;7(4)&#39;, &#39;5(4)&#39;, &#39;13(12)&#39;,
##        &#39;14(3)&#39;, &#39;10(2)&#39;, &#39;11(10)&#39;, &#39;18(3)&#39;, &#39;10(4)&#39;, &#39;15(8)&#39;, &#39;8(3)&#39;,
##        &#39;5(1)&#39;, &#39;10(5)&#39;, &#39;7(3)&#39;, &#39;5(2)&#39;, &#39;9(1)&#39;, &#39;13(3)&#39;, &#39;16(11)&#39;,
##        &#39;11(3)&#39;, &#39;18(15)&#39;, &#39;11(6)&#39;, &#39;10(6)&#39;, &#39;14(12)&#39;, &#39;12(5)&#39;, &#39;15(14)&#39;,
##        &#39;17(8)&#39;, &#39;18(6)&#39;, &#39;4(2)&#39;, &#39;18(10)&#39;, &#39;16(7)&#39;, &#39;13(1)&#39;, &#39;16(10)&#39;,
##        &#39;15(7)&#39;, &#39;9(4)&#39;, &#39;15(5)&#39;, &#39;12(3)&#39;, &#39;8(7)&#39;, &#39;15(2)&#39;, &#39;12(10)&#39;,
##        &#39;14(9)&#39;, &#39;3(1)&#39;, &#39;6(1)&#39;, &#39;14(5)&#39;, &#39;15(4)&#39;, &#39;11(4)&#39;, &#39;12(4)&#39;,
##        &#39;16(4)&#39;, &#39;9(2)&#39;, &#39;13(5)&#39;, &#39;12(2)&#39;, &#39;15(1)&#39;, &#39;4(1)&#39;, &#39;14(13)&#39;,
##        &#39;14(1)&#39;, &#39;13(7)&#39;, &#39;5(3)&#39;, &#39;8(6)&#39;, &#39;15(13)&#39;, &#39;7(2)&#39;, &#39;15(11)&#39;,
##        &#39;10(9)&#39;, &#39;11(9)&#39;, &#39;8(4)&#39;, &#39;15(3)&#39;, &#39;13(4)&#39;, &#39;16(12)&#39;, &#39;16(5)&#39;,
##        &#39;18(11)&#39;, &#39;10(8)&#39;, &#39;18(8)&#39;, &#39;14(8)&#39;, &#39;16(9)&#39;, &#39;8(5)&#39;, &#39;8(1)&#39;,
##        &#39;14(11)&#39;, &#39;9(6)&#39;, &#39;16(13)&#39;, &#39;16(15)&#39;, &#39;11(11)&#39;, &#39;15(10)&#39;, &#39;7(6)&#39;],
##       dtype=object)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;まずここを修正しましょう。括弧を除去してint型に型変更し、入線順位は新たな列&lt;code&gt;arriving order&lt;/code&gt;として追加します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;arriving order&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;order&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contains(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\d*\(\d*\)&amp;#39;&lt;/span&gt;,regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\d+\(&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\)&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;arriving order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unique()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## array([nan,  3.,  1.,  2.,  4.,  8.,  6., 12.,  9.,  7.,  5., 10., 14.,
##        11., 15., 13.])
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\(\d+\)&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; df: &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;order&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contains(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(取消|中止|除外|失格)&amp;#39;&lt;/span&gt;,regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## C:\Users\aashi\ANACON~1\lib\site-packages\pandas\core\strings.py:1954: UserWarning: This pattern has match groups. To actually get the groups, use str.extract.
##   return func(self, *args, **kwargs)
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unique()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## array([ 1.,  7.,  2.,  8.,  5., 15.,  6., 12., 11., 14.,  3., 13.,  4.,
##        16.,  9., 10., 17., 18.])
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;きれいな&lt;code&gt;float&lt;/code&gt;型に処理することができました。では、次にラスト3Fのタイムの前処理に移ります。前走のラスト3Fのタイムを予測に使用します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;last_3F&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;last_3F&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;character(0)&amp;#39;&lt;/span&gt;,np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nan,regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;last_3F&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_name&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;last_3F&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shift(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;前走のレースと順位、追加順位もデータセットへ含めましょう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prerace&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_name&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_name&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shift(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;preorder&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_name&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shift(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prepassing&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_name&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;passing_rank&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shift(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;出走時点で獲得している累積賞金額も追加します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;preprize&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_name&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prize&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shift(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;preprize&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;preprize&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fillna(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;margin&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_name&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;margin&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shift(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;その他、欠損値やデータ型の修正、カテゴリデータのラベルエンコーディングです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_weight&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_weight&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;margin&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;margin&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;character(0)&amp;#39;&lt;/span&gt;,np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nan,regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_age&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_age&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_weight_change&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_weight_change&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jockey_weight&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jockey_weight&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_distance&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_distance&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float64&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_turn&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_turn&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;character(0)&amp;#39;&lt;/span&gt;,np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nan,regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)
df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_turn&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_turn&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fillna(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;missing&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;colour&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;colour&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fillna(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;missing&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prepassing&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prepassing&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fillna(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;missing&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prerace&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prerace&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fillna(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;missing&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;father&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;father&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fillna(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;missing&amp;#39;&lt;/span&gt;)
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mother&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mother&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fillna(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;missing&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; preprocessing
cat_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;trainer&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_name&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_sex&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;brinker&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jockey&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_course&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_name&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_turn&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_condition&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_weather&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;colour&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;father&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mother&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prerace&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prepassing&amp;#39;&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; column &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cat_list:
    target_column &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[column]
    le &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; preprocessing&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LabelEncoder()
    le&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fit(target_column)
    label_encoded_column &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; le&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transform(target_column)
    df[column] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Series(label_encoded_column)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;category&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas_profiling &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pdq
profile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pdq&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ProfileReport(df)
profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-予測モデルの作成&#34;&gt;2. 予測モデルの作成&lt;/h2&gt;
&lt;p&gt;では&lt;code&gt;LightGBM&lt;/code&gt;で予測モデルを作ってみます。&lt;code&gt;optuna&lt;/code&gt;の&lt;code&gt;LightGBM&lt;/code&gt;を使用して、ハイパーパラメータチューニングを行い、学習したモデルを用いて計算したテストデータの予測値と実績値の&lt;code&gt;confusion matrix&lt;/code&gt;ならびに正解率を算出します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; optuna.integration.lightgbm &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; lgb
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.model_selection &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; train_test_split

y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;]
x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;passing_rank&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;odds&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;popularity&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;owner&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;farm&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;locality&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horse_birthday&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prize&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;race_date&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;margin&amp;#39;&lt;/span&gt;],axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)

X_train, X_test, y_train, y_test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; train_test_split(x, y)
X_train, x_val, y_train, y_val &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; train_test_split(X_train, y_train)

lgb_train &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lgb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Dataset(X_train, y_train)
lgb_eval &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lgb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Dataset(x_val, y_val)
lgb_test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lgb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Dataset(X_test, y_test, reference&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;lgb_train)

lgbm_params &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;objective&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;binary&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;boost_from_average&amp;#39;&lt;/span&gt;: False
    }

model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lgb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;train(lgbm_params, lgb_train, categorical_feature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cat_list, valid_sets &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lgb_eval,  num_boost_round&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, early_stopping_rounds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, verbose_eval&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;calibration&lt;/span&gt;(y_proba, beta):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; y_proba &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (y_proba &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y_proba) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; beta)

sampling_rate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y_train&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum() &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; len(y_train)
y_proba &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;predict(X_test, num_iteration&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;best_iteration)
y_proba_calib &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; calibration(y_proba, sampling_rate)

y_pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vectorize(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.49&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)(y_proba_calib)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可視化パートです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.metrics &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; confusion_matrix, ConfusionMatrixDisplay, accuracy_score, precision_score, recall_score, f1_score
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

&lt;span style=&#34;color:#75715e&#34;&gt;# Confusion Matrixを生成&lt;/span&gt;
ConfusionMatrixDisplay(confusion_matrix(y_test, y_pred))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## &amp;lt;sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x00000000C3E2F7C8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post16/index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()

accuracy_score(y_test, y_pred)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 0.9299209299125913
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;precision_score(y_test, y_pred)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 0.9401709401709402
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;accuracy_score&lt;/code&gt;（予測精度）が90%を超え、&lt;code&gt;precision_Score&lt;/code&gt;（適合率、陽=1着と予想したデータの正解率）もいい感じです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;recall_score(y_test, y_pred)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 0.009727052997700878
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;f1_score(y_test, y_pred)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 0.019254893952212852
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一方、&lt;code&gt;recall_score&lt;/code&gt;(再現性、陽=1着のサンプルのうち実際に正解した割合)が低く偽陰性が高いことが確認できます。その結果、&lt;code&gt;F1&lt;/code&gt;値も低くなっていますね。競馬予測モデルの場合、偽陰性が高いことは偽陽性が高いことよりはましなのですが、回収率を上げるためには偽陰性を下げることを頑張らなければいけません。これは今後の課題ですね。次節では&lt;code&gt;shapley&lt;/code&gt;値を使って要因分解をしたいと思います。。&lt;/p&gt;
&lt;h2 id=&#34;3-shapでの結果解釈&#34;&gt;3. shapでの結果解釈&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; shap

shap&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;initjs()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## &amp;lt;IPython.core.display.HTML object&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;explainer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; shap&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;TreeExplainer(model)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Setting feature_perturbation = &amp;quot;tree_path_dependent&amp;quot; because no background data was given.
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shap_values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; explainer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shap_values(X_test)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## LightGBM binary classifier with TreeExplainer shap values output has changed to a list of ndarray
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;まず、各特徴量の重要度を見ることにします。&lt;code&gt;summary_plot&lt;/code&gt;メソッドを使用します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shap&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;summary_plot(shap_values, X_test)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post16/index_files/figure-html/unnamed-chunk-19-3.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;横軸は各特徴量の平均的な重要度を表しています(shap値の絶対値)。preprize(前走までの賞金獲得金額)やhorse_age、preorder(前走の着順)などが予測に重要であることが分かります。特にpreprizeの重要度は1着の予測、1着以外の予測どちらに対しても大きいです。horse_ageも同様です。ただ、これでは重要というだけで定性的な評価はできません。例えば、preprizeが大きい→1位になる確率が上昇といった関係が確認できれば、それは重要な情報になり得ます。次にそれを確認します。&lt;code&gt;summary_plot&lt;/code&gt;メソッドを使用します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shap&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;summary_plot(shap_values[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], X_test)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post16/index_files/figure-html/unnamed-chunk-20-5.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;上図も各特徴量の重要度を表しています(今回は絶対値ではありません)。今回はそれぞれの特徴量の重要度がバイオリンプロットによって表されており、かつ特徴量の値の大きさで色分けがされています。例えば、preprizeだと横軸が0以上の部分でのみ赤色の分布が発生しており、ここからpreprizeの特徴量が大きい、つまり前走までの獲得賞金額が多いと平均的に1着の確率が上がるという当たり前の解釈をすることができます。
他にも、horse_age,preorder,last_3Fは特徴量が小さくなるほど1着になる確率があがることも読み取れます。horse_weight, jokey_weightは大きくなるほど1着になる確率が上がるようです。一方、その他は特に定性的な関係を読み取ることはできません。&lt;/p&gt;
&lt;p&gt;次に、特徴量と確率の関係をより詳しく確認してみましょう。先ほど、preprizeは特徴量が大きくなるほど1着になる確率が上昇するということがわかりました。ただ、その確率の上昇は1次関数的に増加するのか、指数的に増大するのか、それとも$\log x$のように逓減していくのか、わかりません。&lt;code&gt;dependence_plot&lt;/code&gt;を使用してそれを確認してみましょう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shap&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dependence_plot(ind&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;preprize&amp;#34;&lt;/span&gt;, shap_values&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;shap_values[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], features&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;X_test)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post16/index_files/figure-html/unnamed-chunk-21-7.png&#34; width=&#34;720&#34; /&gt;&lt;/p&gt;
&lt;p&gt;上図は学習した&lt;code&gt;LightGBM&lt;/code&gt;をpreprizeの関数として見たときの概形をplotしたものです。先に確認したとおり、やはり特徴量が大きくなるにつれ、1着になる確率が上昇していきます。ただ、その上昇は徐々に逓減していき、2000万円を超えるところでほぼ頭打ちとなります。また、上図ではhorse_ageでの色分けを行っており、preprizeとの関係性も確認できるようになっています。やはり、直感と同じく、preprizeが高い馬の中でもhorse_ageが若い馬の1着確率が高くなることが見て取れます。&lt;/p&gt;
&lt;p&gt;preorderの&lt;code&gt;dependence_plot&lt;/code&gt;も確認してみましょう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shap&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dependence_plot(ind&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;preorder&amp;#34;&lt;/span&gt;, shap_values&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;shap_values[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], features&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;X_test)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post16/index_files/figure-html/unnamed-chunk-22-9.png&#34; width=&#34;720&#34; /&gt;&lt;/p&gt;
&lt;p&gt;やはり、前走の着順が上位になるほど1着確率が高まることがここからも分かります。また、その確率は6着以上とそれ以外で水準感が変わることも分かります。last_3Fのタイムとの関係性も確認していますが、こちらはあまり関連性はなさそうです。&lt;/p&gt;
&lt;h2 id=&#34;4-最後に&#34;&gt;4. 最後に&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;LightGBM&lt;/code&gt;を使用し、競馬の予測モデルを作成してみました。さすが&lt;code&gt;LightGBM&lt;/code&gt;といった感じで、予測精度は高かったです。また、&lt;code&gt;shap&lt;/code&gt;値を使用した重要特徴量の検出も上手くいきました。これによって、&lt;code&gt;LightGBM&lt;/code&gt;の気持ちを理解し、より良い特徴量の発見を進めていくことでモデリングの精度を高めていこうと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Earth Engine APIで衛星画像データを取得し、景況感をナウキャスティングしてみる</title>
      <link>/post/post12/</link>
      <pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/post/post12/</guid>
      <description>&lt;p&gt;皆さんおはこんばんにちわ。前回、GPLVMモデルを用いたGDP予測モデルを構築しました。ただ、ナウキャスティングというからにはオルタナティブデータを用いた解析を行いたいところではあります。ふと、以下の記事を見つけました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jp.reuters.com/article/gdp-u-tokyo-idJPKBN15M0NH&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;焦点：ナウキャストのＧＤＰ推計、世界初の衛星画像利用　利用拡大も&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;こちらは東京大学の渡辺努先生が人工衛星画像を用いてGDP予測モデルを開発したというものです。記事には&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;米国の海洋大気庁が運営する気象衛星「スオミＮＰＰ」が日本上空を通過する毎日午前１時３０分時点の画像を購入し、縦、横７２０メートル四方のマス目ごとの明るさを計測する。同じ明るさでも、農地、商業用地、工業用地など土地の用途によって経済活動の大きさが異なるため、国土地理院の土地利用調査を参照。土地の用途と、明るさが示す経済活動の相関を弾き出し、この結果を考慮した上で、明るさから経済活動の大きさを試算する。
（中略）衛星画像のように誰もが入手可能な公表データであれば、政府、民間の区別なく分析が可能であるため、渡辺氏はこれを「統計の民主化」と呼び、世界的な潮流になると予想している。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;と書かれており、衛星写真を用いた分析に興味を惹かれました。 衛星写真って誰でも利用可能か？というところですが、Googleが&lt;code&gt;Earth Engine&lt;/code&gt;というサービスを提供していることがわかりました。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;earthengine3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://earthengine.google.com/&#34;&gt;https://earthengine.google.com/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（拙訳）Google Earth Engineは、数ペタバイトの衛星画像群と地理空間データセットを惑星規模の解析機能と組み合わせ、科学者、研究者、開発者が変化を検出し、傾向を射影し、地球の変容を定量化することを可能にします。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;研究・教育・非営利目的ならば、なんと&lt;strong&gt;無料&lt;/strong&gt;で衛星写真データを解析することができます。具体的に何ができるのかは以下の動画を見てください。&lt;/p&gt;
&lt;iframe src=&#34;//www.youtube.com/embed/gKGOeTFHnKY&#34; width=&#34;100%&#34; height=&#34;500&#34; seamless frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;今回はそんなEath Engineのpython APIを用いて衛星画像データを取得し、解析していきたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;1-earth-engineを使うための事前準備&#34;&gt;1. Earth Engineを使うための事前準備&lt;/h2&gt;
&lt;p&gt;Earth Engineを使用するためには、Google Accountを使って申請を行う必要があります。先ほどの画像の右上の「Sign Up」からできます。申請を行って、Gmailに以下のようなメールが来るととりあえずEarth Engineは使用できるようになります。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;earthengine4.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;とりあえずというのはWEB上の&lt;code&gt;Earth Engine&lt;/code&gt; コードエディタは使用できるということです。コードエディタというのは以下のようなもので、ブラウザ上でデータを取得したり、解析をしたり、解析結果をMAPに投影したりすることができる便利ツールです。&lt;code&gt;Earth Engine&lt;/code&gt;の本体はむしろこいつで、APIは副次的なものと考えています。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;earthengine5.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;真ん中のコードエディタにコードを打っていきますが、言語はjavascriptです(APIは&lt;code&gt;python&lt;/code&gt;と&lt;code&gt;javascript&lt;/code&gt;両方あるんですけどね)。解析結果をMAPに投影したり、reference（左）を参照したり、Consoleに吐き出したデータを確認することができるのでかなり便利です。が、データを落とした後で高度な解析を行いたい場合はpythonを使ったほうが慣れているので今回はAPIを使用しています。
話が脱線しました。さて、&lt;code&gt;Earth Engine&lt;/code&gt;の承認を得たら、&lt;code&gt;pip&lt;/code&gt;で&lt;code&gt;earthengine-api&lt;/code&gt;をインストールしておきます。そして、コマンドプロンプト上で、&lt;code&gt;earthengine authenticate&lt;/code&gt;と打ちます。そうすると、勝手にブラウザが立ち上がり、以下のように&lt;code&gt;python api&lt;/code&gt;のauthenticationを行う画面がでますので「次へ」を押下します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;earthengine1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;次に以下のような画面にいきますので、そのまま承認します。これでauthenticationの完成です。&lt;code&gt;python&lt;/code&gt;からAPIが使えます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;earthengine2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-python-apiを用いた衛星画像データの取得&#34;&gt;2. Python APIを用いた衛星画像データの取得&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Python&lt;/code&gt; APIを使用する準備ができました。ここからは衛星画像データを取得していきます。以下にあるように&lt;code&gt;Earth Engine&lt;/code&gt;にはたくさんのデータセットが存在します。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developers.google.com/earth-engine/datasets/&#34;&gt;https://developers.google.com/earth-engine/datasets/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今回は&lt;code&gt;VIIRS Stray Light Corrected Nighttime Day/Night Band Composites Version 1&lt;/code&gt;というデータセットを使用します。このデータセットは世界中の夜間光の光量を月次単位で平均し、提供するものです。サンプル期間は2014-01~現在です。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Earth Engine&lt;/code&gt;にはいくつかの固有なデータ型が存在します。覚えておくべきものは以下の3つです。&lt;/p&gt;
&lt;h3 id=&#34;image&#34;&gt;Image…&lt;/h3&gt;
&lt;p&gt;ある１時点における&lt;code&gt;raste&lt;/code&gt;rデータです。&lt;code&gt;image&lt;/code&gt;オブジェクトはいくつかの&lt;code&gt;band&lt;/code&gt;で構成されています。この&lt;code&gt;band&lt;/code&gt;はデータによって異なりますが、おおよそのデータは&lt;code&gt;band&lt;/code&gt;それぞれがRGB値を表していたりします。&lt;code&gt;Earth Engine&lt;/code&gt;を使用する上で最も基本的なデータです。&lt;/p&gt;
&lt;h3 id=&#34;imagecollection&#34;&gt;ImageCollection…&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Image&lt;/code&gt;オブジェクトを時系列に並べたオブジェクトです。今回は時系列解析をするのでこのデータを使用します。&lt;/p&gt;
&lt;h3 id=&#34;featurecollection&#34;&gt;FeatureCollection…&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;GeoJSON Feature&lt;/code&gt;です。地理情報を表す&lt;code&gt;Geometry&lt;/code&gt;オブジェクトやそのデータのプロパティ（国名等）が格納されています。今回は日本の位置情報を取得する際に使用しています。&lt;/p&gt;
&lt;p&gt;ではコーディングしていきます。まず、日本の地理情報の&lt;code&gt;FeatureCollection&lt;/code&gt;オブジェクトを取得します。地理情報は&lt;code&gt;Fusion Tables&lt;/code&gt;に格納されていますので、IDで引っ張りCountryがJapanのものを抽出します。&lt;code&gt;ee.FeatureCollection()&lt;/code&gt;の引数にIDを入力すれば簡単に取得できます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ee
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; dateutil.parser &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; parse

ee&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Initialize()

&lt;span style=&#34;color:#75715e&#34;&gt;# get Japan geometory as FeatureCollection from fusion table&lt;/span&gt;
japan &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ee&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FeatureCollection(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ft:1tdSwUL7MVpOauSgRzqVTOwdfy17KDbw-1d9omPw&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filter(ee&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Filter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;eq(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Country&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Japan&amp;#39;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に夜間光の衛星画像を取得してみます。こちらも&lt;code&gt;ee.ImageCollection()&lt;/code&gt;にデータセットのIDを渡すと取得できます。なお、ここでは&lt;code&gt;band&lt;/code&gt;を月次の平均光量である&lt;code&gt;avg_rad&lt;/code&gt;に抽出しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# get night-light data from earth engine from 2014-01-01 to 2019-01-01&lt;/span&gt;
dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ee&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ImageCollection(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NOAA/VIIRS/DNB/MONTHLY_V1/VCMSLCFG&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filter(ee&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Filter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2014-01-01&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2019-01-01&amp;#39;&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;select(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_rad&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;取得した衛星画像を日本周辺に切り出し、画像ファイルとして出力してみましょう。画像ファイルの出力は&lt;code&gt;image&lt;/code&gt;オブジェクトで可能です（そうでないと画像がたくさん出てきてしまいますからね。。。）。今取得したのは&lt;code&gt;ImageCollection&lt;/code&gt;オブジェクトですから&lt;code&gt;Image&lt;/code&gt;オブジェクトへ圧縮してやる必要があります（上が&lt;code&gt;ImageCollection&lt;/code&gt;オブジェクト、下が圧縮された&lt;code&gt;Image&lt;/code&gt;オブジェクト）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://developers.google.com/earth-engine/images/Reduce_ImageCollection.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ここでは、&lt;code&gt;ImageCollection&lt;/code&gt;オブジェクトの中にあるの&lt;code&gt;Image&lt;/code&gt;オブジェクトの平均値をとってサンプル期間の平均的な画像を出力してみたいと思います。&lt;code&gt;ImageCollection.mean()&lt;/code&gt;でできます。また、&lt;code&gt;.visualize({min:0.5})&lt;/code&gt;でピクセル値が0.5以上でフィルターをかけています。こうしないと雲と思われるものやゴミ？みたいなものがついてしまいます。次に、ここまで加工した画像データをダウンロードするurlを&lt;code&gt;.getDownloadURL&lt;/code&gt;メソッドで取得しています。その際、&lt;code&gt;region&lt;/code&gt;で切り出す範囲をポリゴン値で指定し、&lt;code&gt;scale&lt;/code&gt;でデータの解像度を指定しています（&lt;code&gt;scale&lt;/code&gt;が小さすぎると処理が重すぎるらしくエラーが出て処理できません）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;visualize(min&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getDownloadURL(dict(name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;thumbnail&amp;#39;&lt;/span&gt;,region&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[[[&lt;span style=&#34;color:#ae81ff&#34;&gt;120.3345348936478&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;46.853488838010854&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;119.8071911436478&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;24.598157870729043&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;148.6353161436478&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;24.75788466523463&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;149.3384411436478&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;46.61252884462868&lt;/span&gt;]]],scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;取得した画像が以下です。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;earthengine6.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;やはり、東京を中心とした関東圏、大阪を中心とした関西圏、愛知、福岡、北海道（札幌周辺）の光量が多く、経済活動が活発であることがわかります。また、陸内よりも沿岸部で光量が多い地域があることがわかります。これは経済活動とは直接関係しない現象のような気もします。今回は分析対象外ですが、北緯38度を境に北側が真っ暗になるのが印象的です。これは言うまでもなく北朝鮮と韓国の境界線ですから、両国の経済活動水準の差が視覚的にコントラストされているのでしょう。今回使用したデータセットは2014年からのものですが、他のデータセットでは1990年代からのデータが取得できるものもあります（その代わり最近のデータは取れませんが）。それらを用いて朝鮮半島や中国の経済発展を観察するのも面白いかもしれません。&lt;/p&gt;
&lt;p&gt;さて、画像は取得できましたがこのままでは解析ができません。ここからは夜間光をピクセル値にマッピングしたデータを取得し、数値的な解析を試みます。ただ、先ほどとはデータ取得の手続きが少し変わります。というのも、今度は日本各地で各ピクセル単位ごとにさまざまな値をとる夜間光を&lt;strong&gt;集約&lt;/strong&gt;し、1つの代用値にしなければならないからです。ピクセルごとの数値を手に入れたところで解析するには手に余ってしまいますからね。イメージは以下のような感じです（Earth Engineサイトから引用）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://developers.google.com/earth-engine/images/Reduce_region_diagram.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;先ほど取得した夜間光の&lt;code&gt;ImageCollection&lt;/code&gt;のある1時点の衛星画像が左です。その中に日本という&lt;code&gt;Region&lt;/code&gt;が存在し、それを&lt;code&gt;ee.Reducer&lt;/code&gt;によって定量的に集約（aggregate）します。Earth Engine APIには&lt;code&gt;.reduceRegions()&lt;/code&gt;メソッドが用意されていますのでそれを用いればいいです。引数は、&lt;code&gt;reducer&lt;/code&gt;=集約方法（ここでは合計値）、&lt;code&gt;collection&lt;/code&gt;=集約をかける&lt;code&gt;region&lt;/code&gt;（&lt;code&gt;FeatureCollection&lt;/code&gt;オブジェクト）、&lt;code&gt;scale&lt;/code&gt;=解像度、です。以下では、&lt;code&gt;ImageCollection&lt;/code&gt;（dataset）の中にある1番目の&lt;code&gt;Image&lt;/code&gt;オブジェクトに&lt;code&gt;.reduceRegions()&lt;/code&gt;メソッドをかけています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# initialize output box&lt;/span&gt;
time0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;first()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;system:time_start&amp;#39;&lt;/span&gt;);
first &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;first()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reduceRegions(reducer&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ee&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Reducer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(),collection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;japan,scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time_start&amp;#39;&lt;/span&gt;, time0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我々は時系列データが欲しいわけですから、&lt;code&gt;ImageCollection&lt;/code&gt;内にある&lt;code&gt;Image&lt;/code&gt;それぞれに対して同じ処理を行う必要があります。Earth Engineには&lt;code&gt;iterate&lt;/code&gt;という便利な関数があり、引数に処理したい関数を渡せばfor文いらずでこの処理を行ってくれます。ここでは&lt;code&gt;Image&lt;/code&gt;オブジェクトに&lt;code&gt;reduceRegions&lt;/code&gt;メソッドを処理した&lt;code&gt;Computed Object&lt;/code&gt;を以前に処理したものとmergeする&lt;code&gt;myfunc&lt;/code&gt;という関数を定義し、それを&lt;code&gt;iterate&lt;/code&gt;に渡しています。最後に、先ほどと同じく生成したデータを&lt;code&gt;getDownloadURL&lt;/code&gt;メソッドを用いてurlを取得しています（ファイル形式はcsv）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# define reduceRegions function for iteration&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;myfunc&lt;/span&gt;(image,first):
  added &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reduceRegions(reducer&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ee&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Reducer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(),collection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;japan,scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time_start&amp;#39;&lt;/span&gt;, image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;system:time_start&amp;#39;&lt;/span&gt;))
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ee&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FeatureCollection(first)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;merge(added)

&lt;span style=&#34;color:#75715e&#34;&gt;# implement iteration&lt;/span&gt;
nightjp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filter(ee&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Filter&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2014-02-01&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2019-01-01&amp;#39;&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iterate(myfunc,first)

&lt;span style=&#34;color:#75715e&#34;&gt;# get url to download&lt;/span&gt;
ee&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FeatureCollection(nightjp)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getDownloadURL(filetype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;csv&amp;#39;&lt;/span&gt;,selectors&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ee&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FeatureCollection(nightjp)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;first()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;propertyNames()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getInfo())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;CSVファイルのurlが取得できました。この時系列をプロットして今日は終わりにしたいと思います。
データを読み込むとこんな感じです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;use(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ggplot&amp;#39;&lt;/span&gt;)

nightjp_csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##   system:index          sum Country  Unnamed: 3  Unnamed: 4
## 0     2014/1/1  881512.4572   Japan         NaN         NaN
## 1     2014/2/1  827345.3551   Japan         NaN         NaN
## 2     2014/3/1  729110.4619   Japan         NaN         NaN
## 3     2014/4/1  612665.8866   Japan         NaN         NaN
## 4     2014/5/1  661434.5027   Japan         NaN         NaN
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_datetime(nightjp_csv[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;system:index&amp;#39;&lt;/span&gt;]),nightjp_csv[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post12/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;かなり季節性がありますね。冬場は日照時間が少ないこともあって光量が増えているみたいです。それにしても急激な増え方ですが。次回はこのデータと景況感の代理変数となる経済統計を元に統計解析を行いたいと思います。おたのしみに。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>rvestでyahoo競馬にある過去のレース結果をスクレイピングしてみた（2回目）</title>
      <link>/post/post11/</link>
      <pubDate>Sat, 13 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/post/post11/</guid>
      <description>&lt;p&gt;2回目になりますが、またrvestで過去のレース結果を落としてみたいと思います。過去の記事を見てないという人は先にそちらをご覧になられることをお勧めします。&lt;/p&gt;
&lt;p&gt;今回データを取り直そうと思ったのは、競馬の分析をした際により多くの項目を説明変数に加えて、分析をしたいと思ったからです。なので、今回は前回のRスクリプトに追記を行う形でプログラムを作成しました。新たに追加したデータ項目は以下の14個です。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;芝かダートか&lt;/li&gt;
&lt;li&gt;右回りか左回りか&lt;/li&gt;
&lt;li&gt;レースコンディション（良や稍重など）&lt;/li&gt;
&lt;li&gt;天候&lt;/li&gt;
&lt;li&gt;馬の毛色（栗毛、鹿毛など）&lt;/li&gt;
&lt;li&gt;馬主&lt;/li&gt;
&lt;li&gt;生産者&lt;/li&gt;
&lt;li&gt;産地&lt;/li&gt;
&lt;li&gt;生年月日&lt;/li&gt;
&lt;li&gt;父馬&lt;/li&gt;
&lt;li&gt;母馬&lt;/li&gt;
&lt;li&gt;そのレースまでの獲得賞金（2003年から入手可能）&lt;/li&gt;
&lt;li&gt;ジョッキーの体重&lt;/li&gt;
&lt;li&gt;ジョッキーの体重の増減&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;実はまだデータ収集は終わっていなくて、Rのプログラムがずっと実行中になっています（3日くらい回しています）。しかし、プログラム自体はきっちり回っているのでスクリプトの紹介をしていこうと思います。もしかしたら追記で結果を書くかもしれません。&lt;/p&gt;
&lt;h2 id=&#34;1-スクリプトの中身&#34;&gt;1. スクリプトの中身&lt;/h2&gt;
&lt;p&gt;まずはパッケージの呼び出しです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# rvestによる競馬データのwebスクレイピング&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#install.packages(&amp;#34;rvest&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#if (!require(&amp;#34;pacman&amp;#34;)) install.packages(&amp;#34;pacman&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#install.packages(&amp;#34;beepr&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#install.packages(&amp;#34;RSQLite&amp;#34;)&lt;/span&gt;
pacman&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;p_load&lt;/span&gt;(qdapRegex)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rvest)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(stringr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(beepr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(RSQLite)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;かなりwarnningが出るのでそれを禁止し、SQLiteに接続しています&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# warnning禁止&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt;(warn&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# SQLiteへの接続&lt;/span&gt;
con &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dbConnect&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;SQLite&lt;/span&gt;(), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;horse_data.db&amp;#34;&lt;/span&gt;, synchronous&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;off&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;1994年からしかオッズが取れないので、1994年から直近までのデータを取得します。yahoo競馬では月ごとにレースがまとめられているので、それを変数として使用しながらデータをとっていきます。基本的には、&lt;a href=&#34;https://keiba.yahoo.co.jp/schedule/list/2018/?month=7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;該当年、該当月のレース結果一覧&lt;/a&gt;へアクセスし、そのページ上の各日の&lt;a href=&#34;https://keiba.yahoo.co.jp/race/list/18020106/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;個々の競馬場ごとのタイムテーブル&lt;/a&gt;へのリンクを取得します。個々の競馬場でレースはだいたい12ほどあるので、そのリンクを取得し、各レースの&lt;a href=&#34;https://keiba.yahoo.co.jp/race/result/1802010601/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;レース結果ページ&lt;/a&gt;にアクセスします。そして、レース結果を取得していきます。まず、各日の個々の競馬場ごとのタイムテーブルへのリンクの取得方法です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(year in &lt;span style=&#34;color:#ae81ff&#34;&gt;1994&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;){
  start.time &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.time&lt;/span&gt;() &lt;span style=&#34;color:#75715e&#34;&gt;# 計算時間を図る&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# yahoo競馬のレース結果一覧ページの取得&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(k in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;){ &lt;span style=&#34;color:#75715e&#34;&gt;# kは月を表す&lt;/span&gt;
    
    &lt;span style=&#34;color:#a6e22e&#34;&gt;tryCatch&lt;/span&gt;(
      {
        keiba.yahoo &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp/schedule/list/&amp;#34;&lt;/span&gt;, year,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/?month=&amp;#34;&lt;/span&gt;,k)) &lt;span style=&#34;color:#75715e&#34;&gt;# 該当年、該当月のレース結果一覧にアクセス&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.sleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
        race_lists &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; keiba.yahoo &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
          &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
          &lt;span style=&#34;color:#a6e22e&#34;&gt;html_attr&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 全urlを取得&lt;/span&gt;
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# 競馬場ごとの各日のレースリストを取得&lt;/span&gt;
        race_lists &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_lists&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_lists, pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;race/list/\\d+/&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#75715e&#34;&gt;# 「result」が含まれるurlを抽出&lt;/span&gt;
      }
      , error &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(e){signal &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}
    )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここでは、取得したリンクのurlにresultという文字が含まれているものだけを抽出しています。要はそれが各競馬場のレーステーブルへのリンクとなります。ここからは取得した競馬場のレーステーブルのリンクを用いて、そのページにアクセスし、全12レースそれぞれのレース結果が掲載されているページのリンクを取得していきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(j in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race_lists)){ &lt;span style=&#34;color:#75715e&#34;&gt;# jは当該年月にあったレーステーブルへのリンクを表す&lt;/span&gt;
      
      &lt;span style=&#34;color:#a6e22e&#34;&gt;tryCatch&lt;/span&gt;(
        {
          race_list &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp&amp;#34;&lt;/span&gt;,race_lists[j]))
          race_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_list &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_attr&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 全urlを取得&lt;/span&gt;
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# レース結果のurlを取得&lt;/span&gt;
          race_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_url&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_url, pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;result&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#75715e&#34;&gt;# 「result」が含まれるurlを抽出&lt;/span&gt;
        }
        , error &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(e){signal &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}
      )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;各レース結果へのリンクが取得できたので、ここからはいよいよレース結果の取得とその整形パートに入ります。かなり長ったらしく複雑なコードになってしまいました。レース結果は以下のようなテーブル属性に格納されているので、まずそれを単純に引っ張ってきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race_url)){ &lt;span style=&#34;color:#75715e&#34;&gt;# iは当該年月当該競馬場で開催されたレースを表す&lt;/span&gt;
        
        &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;現在、&amp;#34;&lt;/span&gt;, year, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;年&amp;#34;&lt;/span&gt;, k, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;月&amp;#34;&lt;/span&gt;,j, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;グループ、&amp;#34;&lt;/span&gt;, i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;番目のレースの保存中です&amp;#34;&lt;/span&gt;))
        
        &lt;span style=&#34;color:#a6e22e&#34;&gt;tryCatch&lt;/span&gt;(
          {
            race1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp&amp;#34;&lt;/span&gt;,race_url[i])) &lt;span style=&#34;color:#75715e&#34;&gt;# レース結果のurlを取得&lt;/span&gt;
            signal &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.sleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
          }
          , error &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(e){signal &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}
        )
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# レースが中止orこれまでの過程でエラーでなければ処理を実行&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;identical&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
                      &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@class = &amp;#39;resultAtt mgnBL fntSS&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
                      &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;(),&lt;span style=&#34;color:#a6e22e&#34;&gt;character&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; signal &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# レース結果をスクレイピング&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//table[@id = &amp;#39;raceScore&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_table&lt;/span&gt;()
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;do.call&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data.frame&amp;#34;&lt;/span&gt;,race_result) &lt;span style=&#34;color:#75715e&#34;&gt;# リストをデータフレームに変更&lt;/span&gt;
          
          &lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(race_result) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;order&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;frame_number&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;horse_number&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;horse_name/age&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time/margin&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;passing_rank/last_3F&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jockey/weight&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;popularity/odds&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;trainer&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;#　列名変更&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;tableをただ取得しただけでは以下のように\nが入っていたり、一つのセルに複数の情報が入っていたりと分析には使えないデータとなっています。なので、これを成型する必要が出てきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# 通過順位と上り3Fのタイム&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,passing_rank&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`passing_rank/last_3F`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(\\d{2}-\\d{2}-\\d{2}-\\d{2})|(\\d{2}-\\d{2}-\\d{2})|(\\d{2}-\\d{2})&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,last_3F&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`passing_rank/last_3F`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d{2}\\.\\d&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-6&lt;/span&gt;]
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# タイムと着差&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`time/margin`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d\\.\\d{2}\\.\\d|\\d{2}\\.\\d&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,margin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`time/margin`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./.馬身|.馬身|.[:space:]./.馬身|[ア-ン-]+&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;margin[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;order&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;トップ&amp;#34;&lt;/span&gt;
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;margin[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;margin&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;character(0)&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;大差&amp;#34;&lt;/span&gt;
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;margin[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;order&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-5&lt;/span&gt;]
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# 馬名、馬齢、馬体重&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ァ-ヴー・]+&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_age&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;牡\\d+|牝\\d+|せん\\d+&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_sex &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_age, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;牡|牝|せん&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_age &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_age, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d&amp;#34;&lt;/span&gt;)
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d{3}&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_weight_change&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\([\\+|\\-]\\d+\\)|\\([\\d+]\\)&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_weight_change &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rm_round&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_weight_change, extract&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;), paste, collapse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,brinker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;brinker[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;brinker&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;N&amp;#34;&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# ジョッキー&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,jockey&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ぁ-ん一-龠]+\\s[ぁ-ん一-龠]+|[:upper:].[ァ-ヶー]+&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,jockey_weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d{2}&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;jockey_weight_change &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;jockey_weight_change&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;☆&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;jockey_weight_change&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;△&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;jockey_weight_change&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;△&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# オッズと人気&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,odds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`popularity/odds`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\(.+\\)&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,popularity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`popularity/odds`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+[^(\\d+.\\d)]&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;odds &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rm_round&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;odds, extract&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;), paste, collapse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、今取得したtable以外の情報も取り込むことにします。具体的には、レース名や天候、馬場状態、日付、競馬場などです。これらの情報はレース結果ページの上部に掲載されています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# レース情報&lt;/span&gt;
          race_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;raceTitName&amp;#39;]/p[@id = &amp;#39;raceTitDay&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
          race_name &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;raceTitName&amp;#39;]/h1[@class = &amp;#39;fntB&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
          race_distance &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//p[@id = &amp;#39;raceTitMeta&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
        
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,race_date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_date,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+年\\d+月\\d+日&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;年&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;月&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date)
          race_course &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_date,pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;札幌|函館|福島|新潟|東京|中山|中京|京都|阪神|小倉&amp;#34;&lt;/span&gt;))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_course &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_course
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,race_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_name,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\s&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,race_distance&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_distance,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+m&amp;#34;&lt;/span&gt;)))
          race_type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_distance,pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;芝|ダート&amp;#34;&lt;/span&gt;))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;type &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_type
          race_turn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_distance,pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;右|左&amp;#34;&lt;/span&gt;))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_turn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_turn
          
          &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg ryou&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_condition &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;良&amp;#34;&lt;/span&gt;
          } else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg yayaomo&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_condition &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;稍重&amp;#34;&lt;/span&gt;
          } else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
                            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg omo&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_condition &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;重&amp;#34;&lt;/span&gt;
          } else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg furyou&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_condition &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;不良&amp;#34;&lt;/span&gt;
          } else race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_condition &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NA&amp;#34;&lt;/span&gt;
          
          &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg hare&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_weather &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;晴れ&amp;#34;&lt;/span&gt;
          } else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg ame&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_weather &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;曇り&amp;#34;&lt;/span&gt;
          } else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg kumori&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_weather &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;雨&amp;#34;&lt;/span&gt;
          } else race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_weather &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;その他&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次は各馬の情報です。 実はさきほど取得したtableの馬名はリンクになっており、そのリンクをたどると&lt;a href=&#34;https://keiba.yahoo.co.jp/directory/horse/2015105508/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;各馬の情報&lt;/a&gt;が取得できます（毛色や生年月日など）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;          horse_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_attr&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;) 
          horse_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; horse_url&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(horse_url, pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;directory/horse&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#75715e&#34;&gt;# 馬情報のリンクだけ抽出する&lt;/span&gt;
          
          &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(l in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(horse_url)){
            &lt;span style=&#34;color:#a6e22e&#34;&gt;tryCatch&lt;/span&gt;(
              {
                horse1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp&amp;#34;&lt;/span&gt;,horse_url[l]))
                &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.sleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)
                horse_name &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; horse1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;dirTitName&amp;#39;]/h1[@class = &amp;#39;fntB&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                  &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
                horse &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; horse1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;dirTitName&amp;#39;]/ul&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                  &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;colour[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(horse,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;毛色：.+&amp;#34;&lt;/span&gt;)) 
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;owner[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(horse,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;馬主：.+&amp;#34;&lt;/span&gt;))
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;farm[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(horse,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;生産者：.+&amp;#34;&lt;/span&gt;))
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;locality[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(horse,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;産地：.+&amp;#34;&lt;/span&gt;))
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_birthday[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(horse,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+年\\d+月\\d+日&amp;#34;&lt;/span&gt;))
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;father[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; horse1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//td[@class = &amp;#39;bloodM&amp;#39;][@rowspan = &amp;#39;4&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;mother[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; horse1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//td[@class = &amp;#39;bloodF&amp;#39;][@rowspan = &amp;#39;4&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
              }
              , error &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(e){
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;colour[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt; 
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;owner[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;farm[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;locality[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_birthday[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;father[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;mother[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                }
            )
          }
          
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;colour &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;colour,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;毛色：&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;owner &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;owner,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;馬主：&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;farm &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;farm,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;生産者：&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;locality &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;locality,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;産地：&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          &lt;span style=&#34;color:#75715e&#34;&gt;#race_result$horse_birthday &amp;lt;- str_replace_all(race_result$horse_birthday,&amp;#34;年&amp;#34;,&amp;#34;/&amp;#34;)&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;#race_result$horse_birthday &amp;lt;- str_replace_all(race_result$horse_birthday,&amp;#34;月&amp;#34;,&amp;#34;/&amp;#34;)&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;#race_result$horse_birthday &amp;lt;- as.Date(race_result$horse_birthday)&lt;/span&gt;
          
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(race_result,horse_number) &lt;span style=&#34;color:#75715e&#34;&gt;# 馬番順に並べる&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次にそのレースまでに獲得した賞金額を落としに行きます。これはレース結果のページの&lt;a href=&#34;https://keiba.yahoo.co.jp/race/denma/1802010601/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;出馬表&lt;/a&gt;と書かれたリンクをたどるとアクセスできます。ここに賞金があるのでそれを取得します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;          yosou_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_attr&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;) 
          yosou_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; yosou_url&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(yosou_url, pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;denma&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
          
          &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(yosou_url)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
          yosou1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp&amp;#34;&lt;/span&gt;,yosou_url)) 
          &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.sleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
          yosou &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; yosou1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//td[@class = &amp;#39;txC&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;()
          prize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; yosou&lt;span style=&#34;color:#a6e22e&#34;&gt;[grepl&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;万&amp;#34;&lt;/span&gt;,yosou)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+万&amp;#34;&lt;/span&gt;)
          prize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;do.call&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data.frame&amp;#34;&lt;/span&gt;,prize)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;()
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;prize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; prize
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;prize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;prize,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;万&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;()
          } else race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;prize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;取得した各レース結果を格納するdatasetというデータフレームを作成し、データを格納していきます。1年ごとにそれをSQLite
へ保存していきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;## ファイル貯めるのかく&lt;/span&gt;
          &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(k &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            dataset &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result
          } else {
            dataset &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbind&lt;/span&gt;(dataset,race_result)
          } &lt;span style=&#34;color:#75715e&#34;&gt;# if文2の終わり&lt;/span&gt;
        }else
        {
          &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;保存できませんでした&amp;#34;&lt;/span&gt;) 
        }&lt;span style=&#34;color:#75715e&#34;&gt;# if文1の終わり&lt;/span&gt;
      } &lt;span style=&#34;color:#75715e&#34;&gt;# iループの終わり&lt;/span&gt;
    } &lt;span style=&#34;color:#75715e&#34;&gt;# jループ終わり&lt;/span&gt;
  } &lt;span style=&#34;color:#75715e&#34;&gt;# kループの終わり&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;beep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;write.csv&lt;/span&gt;(dataset,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;race_result2.csv&amp;#34;&lt;/span&gt;, row.names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(year &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1994&lt;/span&gt;){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;dbWriteTable&lt;/span&gt;(con, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;race_result&amp;#34;&lt;/span&gt;, dataset)
  } else {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;dbWriteTable&lt;/span&gt;(con, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;temp&amp;#34;&lt;/span&gt;, dataset)
    &lt;span style=&#34;color:#a6e22e&#34;&gt;dbSendQuery&lt;/span&gt;(con, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INSERT INTO race_result select * from temp&amp;#34;&lt;/span&gt;)
    &lt;span style=&#34;color:#a6e22e&#34;&gt;dbSendQuery&lt;/span&gt;(con, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DROP TABLE temp&amp;#34;&lt;/span&gt;)
  } &lt;span style=&#34;color:#75715e&#34;&gt;# ifの終わり&lt;/span&gt;
} &lt;span style=&#34;color:#75715e&#34;&gt;# yearループの終わり&lt;/span&gt;
end.time &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.time&lt;/span&gt;()
&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;処理時間は&amp;#34;&lt;/span&gt;,end.time&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;start.time,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;です。&amp;#34;&lt;/span&gt;))
&lt;span style=&#34;color:#a6e22e&#34;&gt;beep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt;(warn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;dbDisconnect&lt;/span&gt;(con)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以上です。取れたデータは以下のようになりました。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(race_result)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##   order frame_number horse_number   trainer passing_rank last_3F   time
## 1    10            1            1   田中 剛        09-09    39.0 1.14.3
## 2    16            1            2 天間 昭一        11-11    40.3 1.15.7
## 3    15            2            3 田中 清隆        14-14    39.4 1.15.1
## 4     9            2            4 中舘 英二        08-08    39.1 1.14.3
## 5    12            3            5 根本 康広        11-11    39.0 1.14.4
## 6     4            3            6 杉浦 宏昭        04-04    38.4 1.13.2
##      margin         horse_name horse_age horse_sex horse_weight
## 1    アタマ     サトノジョニー         3        牡          512
## 2 3 1/2馬身       ツギノイッテ         3        牡          464
## 3     3馬身           ギュウホ         3        牡          444
## 4 2 1/2馬身 セイウンメラビリア         3        牝          466
## 5      クビ サバイバルトリック         3        牝          450
## 6    アタマ       ステイホット         3        牝          474
##   horse_weight_change brinker      jockey jockey_weight jockey_weight_change
## 1                 +30       N   松岡 正海            56                    0
## 2                  +8       N 西田 雄一郎            56                    0
## 3                  +8       N   杉原 誠人            56                    0
## 4                 +10       N   村田 一誠            54                    0
## 5                  -2       N 野中 悠太郎            51                    0
## 6                  -2       N   大野 拓弥            54                    0
##    odds popularity  race_date race_course       race_name race_distance   type
## 1  40.3         9  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
## 2 340.9        16  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
## 3 283.1        14  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
## 4 299.7        15  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
## 5  26.7         8  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
## 6   2.4         1  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
##   race_turn race_condition race_weather colour                           owner
## 1        右             良         晴れ   栗毛 株式会社 サトミホースカンパニー
## 2        右             良         晴れ 黒鹿毛                     西村 新一郎
## 3        右             良         晴れ   鹿毛           有限会社 ミルファーム
## 4        右             良         晴れ 青鹿毛                       西山 茂行
## 5        右             良         晴れ 黒鹿毛                       福田 光博
## 6        右             良         晴れ   栗毛                       小林 善一
##           farm   locality horse_birthday                 father
## 1   千代田牧場 新ひだか町  2016年1月29日         オルフェーヴル
## 2    織笠 時男     青森県  2016年4月17日 スクワートルスクワート
## 3    神垣 道弘 新ひだか町  2016年4月19日     ジャングルポケット
## 4  石郷岡 雅樹     新冠町  2016年4月21日     キンシャサノキセキ
## 5     原田牧場     日高町  2016年4月30日       リーチザクラウン
## 6 社台ファーム     千歳市  2016年3月13日     キャプテントゥーレ
##               mother prize
## 1 スパークルジュエル     0
## 2   エプソムアイリス     0
## 3     デライトシーン     0
## 4     ドリームシップ     0
## 5   フリーダムガール   180
## 6     ステイアライヴ   455
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>rvestでyahoo競馬にある過去のレース結果をクローリングしてみた</title>
      <link>/post/post9/</link>
      <pubDate>Sat, 19 May 2018 00:00:00 +0000</pubDate>
      <guid>/post/post9/</guid>
      <description>&lt;p&gt;みなさん、おはこんばんにちは。&lt;/p&gt;
&lt;p&gt;競馬のレース結果を的中させるモデルを作ろうということで研究をはじめましたが、まずはデータを自分で取ってくるところからやろうとおもいます。どこからデータを取ってくるのかという点が重要になるわけですが、データ先としてはdatascisotistさんがまとめられた非常にわかりやすい記事があります。どこからデータが取れるのかというと大きく分けて二つで、①JRA提供のJRA-VANや電子競馬新聞でおなじみの？JRJDといったデータベース、②netkeiba、yahoo競馬とといった競馬情報サイト、となっています。②の場合は自分でコードを書き、クローリングを行う必要があります。今回は②を選択し、yahoo競馬のデータをクローリングで落としてきたいと思います。Rでクローリングを行うパッケージとしては、rvest, httr, XMLがありますが、今回は1番簡単に使えるrvestを用います。yahoo競馬では以下のように各レース結果が表にまとめられています（5月の日本ダービーの結果）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://keiba.yahoo.co.jp/race/result/1805021210/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;yahoo競馬&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;各馬のざっくりとした特徴やレース結果（通過順位等含む）、オッズが掲載されています。とりあえず、このぐらい情報があれば良いのではないかと思います（オッズの情報はもう少し欲しいのですが）。ただ、今後は少しずつ必要になった情報を拡充していこうとも思っています。1986年までのレース結果が格納されており、全データ数は50万件を超えるのではないかと思っています。ただ、単勝オッズが利用できるのは1994年からのようなので今回は1994年から直近までのデータを落としてきます。今回のゴールは、このデータをcsvファイル or SQLに格納することです。&lt;/p&gt;
&lt;h2 id=&#34;1-rvestとは&#34;&gt;1. Rvestとは&lt;/h2&gt;
&lt;p&gt;Rvestとは、webスクレイピングパッケージの一種でdplyrでおなじみのHadley Wickhamさんによって作成されたパッケージです。たった数行でwebスクレイピングができる優れものとなっており、操作が非常に簡単であるのが特徴です。今回は以下の本を参考にしました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/486354216X/hatena-blog-22/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rによるスクレイピング入門&lt;/a&gt;
&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/51ZBnu8oSvL._SX350_BO1,204,203,200_.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;そもそも、htmlも大学1年生にやった程度でほとんど忘れていたのですが、この本はそこも非常にわかりやすく解説されており、非常に実践的な本だと思います。&lt;/p&gt;
&lt;h2 id=&#34;2-レース結果をスクレイピングしてみる&#34;&gt;2. レース結果をスクレイピングしてみる&lt;/h2&gt;
&lt;p&gt;実際にyahoo競馬からデータを落としてみたいと思います。コードは以下のようになっています。ご留意頂きたいのはこのコードをそのまま使用してスクレイピングを行うことはご遠慮いただきたいという事です。webスクレイピングは高速でサイトにアクセスするため、サイトへの負荷が大きくなる可能性があります。スクレイピングを行う際は、時間を空けるコーディングするなどその点に留意をして行ってください（最悪訴えられる可能性がありますが、こちらは一切の責任を取りません）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# rvestによる競馬データのwebスクレイピング&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#install.packages(&amp;#34;rvest&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#if (!require(&amp;#34;pacman&amp;#34;)) install.packages(&amp;#34;pacman&amp;#34;)&lt;/span&gt;
pacman&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;p_load&lt;/span&gt;(qdapRegex)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rvest)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(stringr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用するパッケージは&lt;code&gt;qdapRegex&lt;/code&gt;、&lt;code&gt;rvest&lt;/code&gt;、&lt;code&gt;stringr&lt;/code&gt;、&lt;code&gt;dplyr&lt;/code&gt;です。&lt;code&gt;qdapRegex&lt;/code&gt;はカッコ内の文字を取り出すために使用しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;keiba.yahoo &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp/schedule/list/2016/?month=&amp;#34;&lt;/span&gt;,k))
race_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; keiba.yahoo &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;html_attr&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 全urlを取得&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# レース結果のをurlを取得&lt;/span&gt;
race_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_url&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_url, pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;result&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#75715e&#34;&gt;# 「result」が含まれるurlを抽出&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まず、read_htmlでyahoo競馬のレース結果一覧のhtml構造を引っ張ってきます（リンクは2016年1月の全レース）。ここで、kと出ているのは月を表し、k=1であれば2016年1月のレース結果を引っ張ってくるということです。keiba.yahooを覗いてみると以下のようにそのページ全体のhtml構造が格納されているのが分かります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;keiba.yahoo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## {html_document}
## &amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&amp;gt;
## [1] &amp;lt;head&amp;gt;\n&amp;lt;!---京---&amp;gt;&amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; cha ...
## [2] &amp;lt;body&amp;gt;\n&amp;lt;noscript&amp;gt;\n  &amp;lt;iframe src=&amp;quot;//b.yjtag.jp/iframe?c=QXMP4c3&amp;quot; width=&amp;quot; ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;race_urlにはyahoo.keibaのうちの2016年k月にあった全レース結果のリンクを格納しています。html_nodeとはhtml構造のうちどの要素を引っ張るかを指定し、それを引っ張る関数で、簡単に言えばほしいデータの住所を入力する関数であると認識しています（おそらく正しくない）。ここではa要素を引っ張ることにしています。注意すべきことは、html_nodeは欲しい情報をhtml形式で引っ張ることです。なので、テキストデータとしてリンクを保存するためにはhtml_attrを使用する必要があります。html_attrの引数として、リンク属性を表すhrefを渡しています。これでレース結果のurlが取れたと思いきや、実はこれでは他のリンクもとってしまっています。一番わかりやすいのが広告のリンクです。こういったリンクは除外する必要があります。レース結果のurlには&amp;quot;result&amp;quot;が含まれているので、この文字が入っている要素だけを抽出したのが一番最後のコードです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race_url)){
  race1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp&amp;#34;&lt;/span&gt;,race_url[i])) &lt;span style=&#34;color:#75715e&#34;&gt;# レース結果のurlを取得&lt;/span&gt;

  &lt;span style=&#34;color:#75715e&#34;&gt;# レース結果をスクレイピング&lt;/span&gt;
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//table[@id = &amp;#39;raceScore&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;html_table&lt;/span&gt;()
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;do.call&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data.frame&amp;#34;&lt;/span&gt;,race_result) &lt;span style=&#34;color:#75715e&#34;&gt;# リストをデータフレームに変更&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(race_result) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;order&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;frame_number&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;horse_number&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;horse_name/age&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time/margin&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;passing_rank/last_3F&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jockey/weight&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;popularity/odds&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;trainer&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;#　列名変更&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;さて、いよいよレース結果のスクレイピングを行います。さきほど取得したリンク先のhtml構造を一つ一つ取得し、その中で必要なテキスト情報を引っ張るという作業をRに実行させます（なのでループを使う）。race_1にはあるレース結果ページのhtml構造が格納されおり、race_resultにはその結果が入っています。html_nodesの引数に入っているxpathですが、これはXLMフォーマットのドキュメントから効率的に要素を抜き出す言語です。先ほど説明した住所のようなものと思っていただければ良いと思います。その横に書いてある&lt;code&gt;//table[@id = &#39;raceScore&#39;]&lt;/code&gt;が住所です。これはwebブラウザから簡単に探すことができます。Firefoxの説明になりますが、ほかのブラウザでも同じような機能があると思います。スクレイプしたい画面で&lt;code&gt;Ctrl+Shift+C&lt;/code&gt;を押すと下のような画面が表示されます。&lt;/p&gt;
&lt;p&gt;このインスペクターの横のマークをクリックすると、カーソルで指した部分のhtml構造（住所）が表示されます。この場合だと、レース結果はtable属性の&lt;code&gt;id&lt;/code&gt;がraceScoreの場所に格納されていることが分かります。なので、上のコードでは&lt;code&gt;xpath=&lt;/code&gt;のところにそれを記述しているのです。そして、レース結果は表（table）形式でドキュメント化されているので、&lt;code&gt;html_table&lt;/code&gt;でごっそりとスクレイプしました。基本的にリスト形式で返されるので、それをデータフレームに変換し、適当に列名をつけています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 通過順位と上り3Fのタイム&lt;/span&gt;
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,passing_rank&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`passing_rank/last_3F`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(\\d{2}-\\d{2}-\\d{2}-\\d{2})|(\\d{2}-\\d{2}-\\d{2})|(\\d{2}-\\d{2})&amp;#34;&lt;/span&gt;)))
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,last_3F&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`passing_rank/last_3F`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d{2}\\.\\d&amp;#34;&lt;/span&gt;)))
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-6&lt;/span&gt;]

&lt;span style=&#34;color:#75715e&#34;&gt;# タイムと着差&lt;/span&gt;
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`time/margin`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d\\.\\d{2}\\.\\d|\\d{2}\\.\\d&amp;#34;&lt;/span&gt;)))
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,margin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`time/margin`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./.馬身|.馬身|.[:space:]./.馬身|[ア-ン-]+&amp;#34;&lt;/span&gt;)))
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-5&lt;/span&gt;]

&lt;span style=&#34;color:#75715e&#34;&gt;# 馬名、馬齢、馬体重&lt;/span&gt;
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ァ-ヴー・]+&amp;#34;&lt;/span&gt;)))
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_age&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;牡\\d+|牝\\d+|せん\\d+&amp;#34;&lt;/span&gt;)))
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d{3}&amp;#34;&lt;/span&gt;)))
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_weight_change&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\([\\+|\\-]\\d+\\)|\\([\\d+]\\)&amp;#34;&lt;/span&gt;)))
  race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_weight_change &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rm_round&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_weight_change, extract&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;), paste, collapse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]

&lt;span style=&#34;color:#75715e&#34;&gt;# ジョッキー&lt;/span&gt;
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,jockey&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ぁ-ん一-龠]+\\s[ぁ-ん一-龠]+|[:upper:].[ァ-ヶー]+&amp;#34;&lt;/span&gt;)))
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]

&lt;span style=&#34;color:#75715e&#34;&gt;# オッズと人気&lt;/span&gt;
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,odds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`popularity/odds`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\(.+\\)&amp;#34;&lt;/span&gt;)))
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,popularity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`popularity/odds`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+[^(\\d+.\\d)]&amp;#34;&lt;/span&gt;)))
  race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;odds &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rm_round&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;odds, extract&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;), paste, collapse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここまででデータは取得できたわけなのですが、そのデータは綺麗なものにはなっていません。 上のコードでは、その整形作業を行っています。現在、取得したデータは以下のようになっています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(race_result)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div data-pagedtable=&#34;false&#34;&gt;
  &lt;script data-pagedtable-source type=&#34;application/json&#34;&gt;
{&#34;columns&#34;:[{&#34;label&#34;:[&#34;&#34;],&#34;name&#34;:[&#34;_rn_&#34;],&#34;type&#34;:[&#34;&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;order&#34;],&#34;name&#34;:[1],&#34;type&#34;:[&#34;int&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;frame_number&#34;],&#34;name&#34;:[2],&#34;type&#34;:[&#34;int&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;horse_number&#34;],&#34;name&#34;:[3],&#34;type&#34;:[&#34;int&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;trainer&#34;],&#34;name&#34;:[4],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;passing_rank&#34;],&#34;name&#34;:[5],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;last_3F&#34;],&#34;name&#34;:[6],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;time&#34;],&#34;name&#34;:[7],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;margin&#34;],&#34;name&#34;:[8],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;horse_name&#34;],&#34;name&#34;:[9],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;horse_age&#34;],&#34;name&#34;:[10],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;horse_weight&#34;],&#34;name&#34;:[11],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;horse_weight_change&#34;],&#34;name&#34;:[12],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;jockey&#34;],&#34;name&#34;:[13],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;odds&#34;],&#34;name&#34;:[14],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;popularity&#34;],&#34;name&#34;:[15],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;race_date&#34;],&#34;name&#34;:[16],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;race_name&#34;],&#34;name&#34;:[17],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]}],&#34;data&#34;:[{&#34;1&#34;:&#34;1&#34;,&#34;2&#34;:&#34;2&#34;,&#34;3&#34;:&#34;2&#34;,&#34;4&#34;:&#34;河野 通文&#34;,&#34;5&#34;:&#34;06-07-06-06&#34;,&#34;6&#34;:&#34;35.1&#34;,&#34;7&#34;:&#34;3.19.7&#34;,&#34;8&#34;:&#34;character(0)&#34;,&#34;9&#34;:&#34;センゴクシルバー&#34;,&#34;10&#34;:&#34;牡6&#34;,&#34;11&#34;:&#34;478&#34;,&#34;12&#34;:&#34;+2&#34;,&#34;13&#34;:&#34;田中 勝春&#34;,&#34;14&#34;:&#34;2.3&#34;,&#34;15&#34;:&#34;1&#34;,&#34;16&#34;:&#34;1994年1月31日&#34;,&#34;17&#34;:&#34;第44回ダイヤモンドステークス（GIII）&#34;,&#34;_rn_&#34;:&#34;1&#34;},{&#34;1&#34;:&#34;2&#34;,&#34;2&#34;:&#34;6&#34;,&#34;3&#34;:&#34;9&#34;,&#34;4&#34;:&#34;武 邦彦&#34;,&#34;5&#34;:&#34;06-05-04-04&#34;,&#34;6&#34;:&#34;35.7&#34;,&#34;7&#34;:&#34;3.19.9&#34;,&#34;8&#34;:&#34;1 1/4馬身&#34;,&#34;9&#34;:&#34;ジャムシード&#34;,&#34;10&#34;:&#34;牡6&#34;,&#34;11&#34;:&#34;480&#34;,&#34;12&#34;:&#34;0&#34;,&#34;13&#34;:&#34;柴田 政人&#34;,&#34;14&#34;:&#34;14&#34;,&#34;15&#34;:&#34;7&#34;,&#34;16&#34;:&#34;1994年1月31日&#34;,&#34;17&#34;:&#34;第44回ダイヤモンドステークス（GIII）&#34;,&#34;_rn_&#34;:&#34;2&#34;},{&#34;1&#34;:&#34;3&#34;,&#34;2&#34;:&#34;7&#34;,&#34;3&#34;:&#34;10&#34;,&#34;4&#34;:&#34;白井 寿昭&#34;,&#34;5&#34;:&#34;08-07-06-06&#34;,&#34;6&#34;:&#34;35.7&#34;,&#34;7&#34;:&#34;3.20.1&#34;,&#34;8&#34;:&#34;1 1/2馬身&#34;,&#34;9&#34;:&#34;ホクセツギンガ&#34;,&#34;10&#34;:&#34;牡6&#34;,&#34;11&#34;:&#34;500&#34;,&#34;12&#34;:&#34;+4&#34;,&#34;13&#34;:&#34;小屋敷 昭&#34;,&#34;14&#34;:&#34;7.5&#34;,&#34;15&#34;:&#34;3&#34;,&#34;16&#34;:&#34;1994年1月31日&#34;,&#34;17&#34;:&#34;第44回ダイヤモンドステークス（GIII）&#34;,&#34;_rn_&#34;:&#34;3&#34;},{&#34;1&#34;:&#34;4&#34;,&#34;2&#34;:&#34;7&#34;,&#34;3&#34;:&#34;11&#34;,&#34;4&#34;:&#34;矢野 進&#34;,&#34;5&#34;:&#34;03-03-03-02&#34;,&#34;6&#34;:&#34;36.3&#34;,&#34;7&#34;:&#34;3.20.4&#34;,&#34;8&#34;:&#34;1 3/4馬身&#34;,&#34;9&#34;:&#34;サマーワイン&#34;,&#34;10&#34;:&#34;牝5&#34;,&#34;11&#34;:&#34;422&#34;,&#34;12&#34;:&#34;-4&#34;,&#34;13&#34;:&#34;木幡 初広&#34;,&#34;14&#34;:&#34;32.6&#34;,&#34;15&#34;:&#34;9&#34;,&#34;16&#34;:&#34;1994年1月31日&#34;,&#34;17&#34;:&#34;第44回ダイヤモンドステークス（GIII）&#34;,&#34;_rn_&#34;:&#34;4&#34;},{&#34;1&#34;:&#34;5&#34;,&#34;2&#34;:&#34;1&#34;,&#34;3&#34;:&#34;1&#34;,&#34;4&#34;:&#34;秋山 史郎&#34;,&#34;5&#34;:&#34;12-12-12-12&#34;,&#34;6&#34;:&#34;35.6&#34;,&#34;7&#34;:&#34;3.20.5&#34;,&#34;8&#34;:&#34;1/2馬身&#34;,&#34;9&#34;:&#34;ダイワジェームス&#34;,&#34;10&#34;:&#34;牡6&#34;,&#34;11&#34;:&#34;472&#34;,&#34;12&#34;:&#34;+6&#34;,&#34;13&#34;:&#34;大塚 栄三郎&#34;,&#34;14&#34;:&#34;5.9&#34;,&#34;15&#34;:&#34;2&#34;,&#34;16&#34;:&#34;1994年1月31日&#34;,&#34;17&#34;:&#34;第44回ダイヤモンドステークス（GIII）&#34;,&#34;_rn_&#34;:&#34;5&#34;},{&#34;1&#34;:&#34;6&#34;,&#34;2&#34;:&#34;5&#34;,&#34;3&#34;:&#34;7&#34;,&#34;4&#34;:&#34;須貝 彦三&#34;,&#34;5&#34;:&#34;11-10-06-06&#34;,&#34;6&#34;:&#34;36.1&#34;,&#34;7&#34;:&#34;3.20.5&#34;,&#34;8&#34;:&#34;ハナ&#34;,&#34;9&#34;:&#34;シゲノランボー&#34;,&#34;10&#34;:&#34;牡7&#34;,&#34;11&#34;:&#34;438&#34;,&#34;12&#34;:&#34;-6&#34;,&#34;13&#34;:&#34;須貝 尚介&#34;,&#34;14&#34;:&#34;8.7&#34;,&#34;15&#34;:&#34;4&#34;,&#34;16&#34;:&#34;1994年1月31日&#34;,&#34;17&#34;:&#34;第44回ダイヤモンドステークス（GIII）&#34;,&#34;_rn_&#34;:&#34;6&#34;}],&#34;options&#34;:{&#34;columns&#34;:{&#34;min&#34;:{},&#34;max&#34;:[10]},&#34;rows&#34;:{&#34;min&#34;:[10],&#34;max&#34;:[10]},&#34;pages&#34;:{}}}
  &lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;ご覧のように、&lt;code&gt;\n&lt;/code&gt;が入っていたり、通過順位と上り3ハロンのタイムが一つのセルに入っていたりとこのままでは分析ができません。不要なものを取り除いたり、データを二つに分割する作業が必要になります。今回の記事ではこの部分について詳しくは説明しません。この部分は正規表現を駆使する必要がありますが、私自身全く詳しくないからです。今回も手探りでやりました。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# レース情報&lt;/span&gt;
  race_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;raceTitName&amp;#39;]/p[@id = &amp;#39;raceTitDay&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
  race_name &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;raceTitName&amp;#39;]/h1[@class = &amp;#39;fntB&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()

  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,race_date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_date,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+年\\d+月\\d+日&amp;#34;&lt;/span&gt;)))
  race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,race_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_name,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\s&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)))

&lt;span style=&#34;color:#75715e&#34;&gt;# ファイル格納&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(k &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
    dataset &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result
  } else {
    dataset &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbind&lt;/span&gt;(dataset,race_result)
  }&lt;span style=&#34;color:#75715e&#34;&gt;# if文の終わり&lt;/span&gt;
} &lt;span style=&#34;color:#75715e&#34;&gt;# iループの終わり&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;write.csv&lt;/span&gt;(race_result,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;race_result.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最後に、レース日時とレース名を抜き出し、データを一時的に格納するコードとcsvファイルに書き出すコードを書いて終了です。完成データセットは以下のような状態になっています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(dataset)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div data-pagedtable=&#34;false&#34;&gt;
  &lt;script data-pagedtable-source type=&#34;application/json&#34;&gt;
{&#34;columns&#34;:[{&#34;label&#34;:[&#34;&#34;],&#34;name&#34;:[&#34;_rn_&#34;],&#34;type&#34;:[&#34;&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;order&#34;],&#34;name&#34;:[1],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;frame_number&#34;],&#34;name&#34;:[2],&#34;type&#34;:[&#34;int&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;horse_number&#34;],&#34;name&#34;:[3],&#34;type&#34;:[&#34;int&#34;],&#34;align&#34;:[&#34;right&#34;]},{&#34;label&#34;:[&#34;trainer&#34;],&#34;name&#34;:[4],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;passing_rank&#34;],&#34;name&#34;:[5],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;last_3F&#34;],&#34;name&#34;:[6],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;time&#34;],&#34;name&#34;:[7],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;margin&#34;],&#34;name&#34;:[8],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;horse_name&#34;],&#34;name&#34;:[9],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;horse_age&#34;],&#34;name&#34;:[10],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;horse_weight&#34;],&#34;name&#34;:[11],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;horse_weight_change&#34;],&#34;name&#34;:[12],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;jockey&#34;],&#34;name&#34;:[13],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;odds&#34;],&#34;name&#34;:[14],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;popularity&#34;],&#34;name&#34;:[15],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;race_date&#34;],&#34;name&#34;:[16],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]},{&#34;label&#34;:[&#34;race_name&#34;],&#34;name&#34;:[17],&#34;type&#34;:[&#34;chr&#34;],&#34;align&#34;:[&#34;left&#34;]}],&#34;data&#34;:[{&#34;1&#34;:&#34;1&#34;,&#34;2&#34;:&#34;8&#34;,&#34;3&#34;:&#34;11&#34;,&#34;4&#34;:&#34;森安 弘昭&#34;,&#34;5&#34;:&#34;01-01-01-01&#34;,&#34;6&#34;:&#34;35.7&#34;,&#34;7&#34;:&#34;2.00.7&#34;,&#34;8&#34;:&#34;character(0)&#34;,&#34;9&#34;:&#34;ヒダカハヤト&#34;,&#34;10&#34;:&#34;牡8&#34;,&#34;11&#34;:&#34;488&#34;,&#34;12&#34;:&#34;-2&#34;,&#34;13&#34;:&#34;大塚 栄三郎&#34;,&#34;14&#34;:&#34;29&#34;,&#34;15&#34;:&#34;10&#34;,&#34;16&#34;:&#34;1994年1月5日&#34;,&#34;17&#34;:&#34;第43回日刊スポーツ賞金杯（GIII）&#34;,&#34;_rn_&#34;:&#34;1&#34;},{&#34;1&#34;:&#34;2&#34;,&#34;2&#34;:&#34;5&#34;,&#34;3&#34;:&#34;6&#34;,&#34;4&#34;:&#34;矢野 進&#34;,&#34;5&#34;:&#34;06-06-04-03&#34;,&#34;6&#34;:&#34;35.3&#34;,&#34;7&#34;:&#34;2.00.8&#34;,&#34;8&#34;:&#34;3/4馬身&#34;,&#34;9&#34;:&#34;ステージチャンプ&#34;,&#34;10&#34;:&#34;牡5&#34;,&#34;11&#34;:&#34;462&#34;,&#34;12&#34;:&#34;+14&#34;,&#34;13&#34;:&#34;岡部 幸雄&#34;,&#34;14&#34;:&#34;3.2&#34;,&#34;15&#34;:&#34;1&#34;,&#34;16&#34;:&#34;1994年1月5日&#34;,&#34;17&#34;:&#34;第43回日刊スポーツ賞金杯（GIII）&#34;,&#34;_rn_&#34;:&#34;2&#34;},{&#34;1&#34;:&#34;3&#34;,&#34;2&#34;:&#34;4&#34;,&#34;3&#34;:&#34;4&#34;,&#34;4&#34;:&#34;新関 力&#34;,&#34;5&#34;:&#34;03-03-02-02&#34;,&#34;6&#34;:&#34;35.8&#34;,&#34;7&#34;:&#34;2.01.1&#34;,&#34;8&#34;:&#34;1 3/4馬身&#34;,&#34;9&#34;:&#34;マキノトウショウ&#34;,&#34;10&#34;:&#34;牡5&#34;,&#34;11&#34;:&#34;502&#34;,&#34;12&#34;:&#34;+6&#34;,&#34;13&#34;:&#34;的場 均&#34;,&#34;14&#34;:&#34;6.9&#34;,&#34;15&#34;:&#34;4&#34;,&#34;16&#34;:&#34;1994年1月5日&#34;,&#34;17&#34;:&#34;第43回日刊スポーツ賞金杯（GIII）&#34;,&#34;_rn_&#34;:&#34;3&#34;},{&#34;1&#34;:&#34;4&#34;,&#34;2&#34;:&#34;8&#34;,&#34;3&#34;:&#34;12&#34;,&#34;4&#34;:&#34;大和田 稔&#34;,&#34;5&#34;:&#34;02-02-03-03&#34;,&#34;6&#34;:&#34;35.7&#34;,&#34;7&#34;:&#34;2.01.1&#34;,&#34;8&#34;:&#34;ハナ&#34;,&#34;9&#34;:&#34;ペガサス&#34;,&#34;10&#34;:&#34;牡5&#34;,&#34;11&#34;:&#34;464&#34;,&#34;12&#34;:&#34;+4&#34;,&#34;13&#34;:&#34;安田 富男&#34;,&#34;14&#34;:&#34;5.7&#34;,&#34;15&#34;:&#34;2&#34;,&#34;16&#34;:&#34;1994年1月5日&#34;,&#34;17&#34;:&#34;第43回日刊スポーツ賞金杯（GIII）&#34;,&#34;_rn_&#34;:&#34;4&#34;},{&#34;1&#34;:&#34;5&#34;,&#34;2&#34;:&#34;7&#34;,&#34;3&#34;:&#34;9&#34;,&#34;4&#34;:&#34;田中 和夫&#34;,&#34;5&#34;:&#34;07-07-07-05&#34;,&#34;6&#34;:&#34;35.8&#34;,&#34;7&#34;:&#34;2.01.6&#34;,&#34;8&#34;:&#34;3馬身&#34;,&#34;9&#34;:&#34;シャマードシンボリ&#34;,&#34;10&#34;:&#34;牡7&#34;,&#34;11&#34;:&#34;520&#34;,&#34;12&#34;:&#34;+4&#34;,&#34;13&#34;:&#34;田中 剛&#34;,&#34;14&#34;:&#34;29.6&#34;,&#34;15&#34;:&#34;12&#34;,&#34;16&#34;:&#34;1994年1月5日&#34;,&#34;17&#34;:&#34;第43回日刊スポーツ賞金杯（GIII）&#34;,&#34;_rn_&#34;:&#34;5&#34;},{&#34;1&#34;:&#34;6&#34;,&#34;2&#34;:&#34;3&#34;,&#34;3&#34;:&#34;3&#34;,&#34;4&#34;:&#34;中島 敏文&#34;,&#34;5&#34;:&#34;09-10-10-09&#34;,&#34;6&#34;:&#34;35.5&#34;,&#34;7&#34;:&#34;2.01.7&#34;,&#34;8&#34;:&#34;3/4馬身&#34;,&#34;9&#34;:&#34;モンタミール&#34;,&#34;10&#34;:&#34;牡7&#34;,&#34;11&#34;:&#34;474&#34;,&#34;12&#34;:&#34;+4&#34;,&#34;13&#34;:&#34;蓑田 早人&#34;,&#34;14&#34;:&#34;10.4&#34;,&#34;15&#34;:&#34;6&#34;,&#34;16&#34;:&#34;1994年1月5日&#34;,&#34;17&#34;:&#34;第43回日刊スポーツ賞金杯（GIII）&#34;,&#34;_rn_&#34;:&#34;6&#34;}],&#34;options&#34;:{&#34;columns&#34;:{&#34;min&#34;:{},&#34;max&#34;:[10]},&#34;rows&#34;:{&#34;min&#34;:[10],&#34;max&#34;:[10]},&#34;pages&#34;:{}}}
  &lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;以上です。次回はこのデータセットを使用して、分析を行っていきます。次回までには1994年からのデータを全てスクレイピングしてきます。&lt;/p&gt;
&lt;p&gt;【追記（2018/6/10）】&lt;/p&gt;
&lt;p&gt;上述したスクリプトを用いて、スクレイピングを行ったところエラーが出ました。どうやらレース結果の中には強風などで中止になったものも含まれているらしく、そこでエラーが出る様子（race_resultがcharacter(0)になってしまう）。なので、この部分を修正したスクリプトを以下で公開しておきます。こちらは私の PC環境では正常に作動しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# rvestによる競馬データのwebスクレイピング&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#install.packages(&amp;#34;rvest&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#if (!require(&amp;#34;pacman&amp;#34;)) install.packages(&amp;#34;pacman&amp;#34;)&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;install.packages&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;beepr&amp;#34;&lt;/span&gt;)
  pacman&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;p_load&lt;/span&gt;(qdapRegex)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rvest)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(stringr)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(beepr)

&lt;span style=&#34;color:#75715e&#34;&gt;# pathの設定&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;setwd&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:/Users/assiy/Dropbox/競馬統計解析&amp;#34;&lt;/span&gt;)

  &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(year in &lt;span style=&#34;color:#ae81ff&#34;&gt;1994&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;){

  &lt;span style=&#34;color:#75715e&#34;&gt;# yahoo競馬のレース結果一覧ページの取得&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(k in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;){

    keiba.yahoo &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp/schedule/list/&amp;#34;&lt;/span&gt;, year,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/?month=&amp;#34;&lt;/span&gt;,k))
    race_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; keiba.yahoo &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;html_attr&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 全urlを取得&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# レース結果のをurlを取得&lt;/span&gt;
    race_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_url&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_url, pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;result&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#75715e&#34;&gt;# 「result」が含まれるurlを抽出&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race_url)){

    &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.sleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
    &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;現在、&amp;#34;&lt;/span&gt;, year, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;年&amp;#34;&lt;/span&gt;, k, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;月&amp;#34;&lt;/span&gt;, i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;番目のレースの保存中です&amp;#34;&lt;/span&gt;))

    race1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp&amp;#34;&lt;/span&gt;,race_url[i])) &lt;span style=&#34;color:#75715e&#34;&gt;# レース結果のurlを取得&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# レースが中止でなければ処理を実行&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;identical&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@class = &amp;#39;resultAtt mgnBL fntSS&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;(),&lt;span style=&#34;color:#a6e22e&#34;&gt;character&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;){

    &lt;span style=&#34;color:#75715e&#34;&gt;# レース結果をスクレイピング&lt;/span&gt;
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//table[@id = &amp;#39;raceScore&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;html_table&lt;/span&gt;()
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;do.call&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data.frame&amp;#34;&lt;/span&gt;,race_result) &lt;span style=&#34;color:#75715e&#34;&gt;# リストをデータフレームに変更&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(race_result) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;order&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;frame_number&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;horse_number&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;horse_name/age&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time/margin&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;passing_rank/last_3F&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jockey/weight&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;popularity/odds&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;trainer&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;#　列名変更&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# 通過順位と上り3Fのタイム&lt;/span&gt;
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,passing_rank&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`passing_rank/last_3F`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(\\d{2}-\\d{2}-\\d{2}-\\d{2})|(\\d{2}-\\d{2}-\\d{2})|(\\d{2}-\\d{2})&amp;#34;&lt;/span&gt;)))
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,last_3F&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`passing_rank/last_3F`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d{2}\\.\\d&amp;#34;&lt;/span&gt;)))
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-6&lt;/span&gt;]

    &lt;span style=&#34;color:#75715e&#34;&gt;# タイムと着差&lt;/span&gt;
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`time/margin`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d\\.\\d{2}\\.\\d|\\d{2}\\.\\d&amp;#34;&lt;/span&gt;)))
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,margin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`time/margin`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./.馬身|.馬身|.[:space:]./.馬身|[ア-ン-]+&amp;#34;&lt;/span&gt;)))
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-5&lt;/span&gt;]

    &lt;span style=&#34;color:#75715e&#34;&gt;# 馬名、馬齢、馬体重&lt;/span&gt;
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ァ-ヴー・]+&amp;#34;&lt;/span&gt;)))
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_age&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;牡\\d+|牝\\d+|せん\\d+&amp;#34;&lt;/span&gt;)))
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d{3}&amp;#34;&lt;/span&gt;)))
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_weight_change&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\([\\+|\\-]\\d+\\)|\\([\\d+]\\)&amp;#34;&lt;/span&gt;)))
    race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_weight_change &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rm_round&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_weight_change, extract&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;), paste, collapse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]

    &lt;span style=&#34;color:#75715e&#34;&gt;# ジョッキー&lt;/span&gt;
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,jockey&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ぁ-ん一-龠]+\\s[ぁ-ん一-龠]+|[:upper:].[ァ-ヶー]+&amp;#34;&lt;/span&gt;)))
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]

    &lt;span style=&#34;color:#75715e&#34;&gt;# オッズと人気&lt;/span&gt;
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,odds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`popularity/odds`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\(.+\\)&amp;#34;&lt;/span&gt;)))
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,popularity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`popularity/odds`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+[^(\\d+.\\d)]&amp;#34;&lt;/span&gt;)))
    race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;odds &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rm_round&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;odds, extract&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;), paste, collapse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]

    &lt;span style=&#34;color:#75715e&#34;&gt;# レース情報&lt;/span&gt;
    race_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;raceTitName&amp;#39;]/p[@id = &amp;#39;raceTitDay&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
    race_name &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;raceTitName&amp;#39;]/h1[@class = &amp;#39;fntB&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()

    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,race_date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_date,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+年\\d+月\\d+日&amp;#34;&lt;/span&gt;)))
    race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,race_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_name,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\s&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)))

    &lt;span style=&#34;color:#75715e&#34;&gt;## ファイル貯めるのかく&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(k &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1994&lt;/span&gt;){
    dataset &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result
    } else {
    dataset &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbind&lt;/span&gt;(dataset,race_result)
    } &lt;span style=&#34;color:#75715e&#34;&gt;# if文2の終わり&lt;/span&gt;
    } &lt;span style=&#34;color:#75715e&#34;&gt;# if文1の終わり&lt;/span&gt;
    } &lt;span style=&#34;color:#75715e&#34;&gt;# iループの終わり&lt;/span&gt;
    } &lt;span style=&#34;color:#75715e&#34;&gt;# kループの終わり&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;beep&lt;/span&gt;()
    } &lt;span style=&#34;color:#75715e&#34;&gt;# yearループの終わり&lt;/span&gt;

    &lt;span style=&#34;color:#a6e22e&#34;&gt;write.csv&lt;/span&gt;(dataset,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;race_result.csv&amp;#34;&lt;/span&gt;, row.names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを回すのに16時間かかりました（笑）データ数は想定していたよりは少なく、97939になりました。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
