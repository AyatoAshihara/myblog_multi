<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BVAR | 京都の電子部品メーカーで働く社会人が研究に没頭するブログ</title>
    <link>/tag/bvar/</link>
      <atom:link href="/tag/bvar/index.xml" rel="self" type="application/rss+xml" />
    <description>BVAR</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ja</language><lastBuildDate>Sat, 01 Dec 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>BVAR</title>
      <link>/tag/bvar/</link>
    </image>
    
    <item>
      <title>BVARについて</title>
      <link>/post/post5/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 +0000</pubDate>
      <guid>/post/post5/</guid>
      <description>&lt;p&gt;　おはこんばんにちは。日次GDP推計を休日に進めているのですが、今日は少し勉強編で&lt;code&gt;BVAR&lt;/code&gt;についての記事を書きたいと思います。この&lt;code&gt;BVAR&lt;/code&gt;はFRBアトランタ連銀の&lt;code&gt;GDPNow&lt;/code&gt;でも使用されていることから、日次GDP推計との親和性も高いと思われます。そもそも、時系列でアウトサンプルの予測精度を上げたいということになると真っ先に思いつくのが&lt;code&gt;BVAR&lt;/code&gt;です。Doan, Litterman and Sims(1984)で提案されたこのモデルは予測精度が良いので、非常に有効な手段になると思われます。&lt;code&gt;BVAR&lt;/code&gt;は&lt;code&gt;Bayesian Vector Autoregression&lt;/code&gt;の略で、ベクトル自己回帰モデル（&lt;code&gt;VAR&lt;/code&gt;）の派生版です。&lt;code&gt;VAR&lt;/code&gt;とネットで調べるとまず&lt;code&gt;Value at Risk&lt;/code&gt;（&lt;code&gt;VaR&lt;/code&gt;）が出てくると思いますが、それとは違います。よく見るとaが小文字になっていることに気づくかと思います。
　さて、&lt;code&gt;BVAR&lt;/code&gt;の説明をこれから行おうとするのですが、その前にまず基本的な&lt;code&gt;VAR&lt;/code&gt;の説明からしたいと思います。ただし、歴史的な背景（大型マクロ計量モデルからの経緯など）には触れません。あくまで、&lt;code&gt;BVAR&lt;/code&gt;を説明するうえで必要な知識について触れたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;1-unrestricted-varについて&#34;&gt;1. Unrestricted VARについて&lt;/h2&gt;
&lt;p&gt;　まず、注意点を一点。この投稿では、もっとも基本的な&lt;code&gt;VAR&lt;/code&gt;のことをUnrestricted VAR（UVAR）と呼ぶことにします。UVARはSims(1980)の論文が有名です。&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;このモデルには、理論的な基礎づけは原則ありません。あくまで実証的なモデルです。UVARは一般系は以下のような形をしています。&lt;/p&gt;
&lt;p&gt;$$
Y_{t} = A_{0} + A_{1}Y_{t-1} + &amp;hellip; + A_{K}Y_{t-K} + U_{t}, ~~ U_{t} ～ N(0,\Omega)
$$
$$
Y_{t} = \left(
\begin{array}{cccc}
y_{1,t} \&lt;br&gt;
y_{2,t} \&lt;br&gt;
\vdots  \&lt;br&gt;
y_{J,t} \&lt;br&gt;
\end{array}
\right),
A_{0} = \left(
\begin{array}{cccc}
a_{10} \&lt;br&gt;
a_{20} \&lt;br&gt;
\vdots  \&lt;br&gt;
a_{J0} \&lt;br&gt;
\end{array}
\right),
A_{k} = \left(
\begin{array}{cccc}
a_{11,k} &amp;amp; a_{12,k} &amp;amp; \ldots &amp;amp; a_{1J,k} \&lt;br&gt;
a_{21,k} &amp;amp; a_{22,k} &amp;amp; \ldots &amp;amp; a_{2J,k} \&lt;br&gt;
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \&lt;br&gt;
a_{J1,k} &amp;amp; a_{J2,k} &amp;amp; \ldots &amp;amp; a_{JJ,k}
\end{array}
\right),
U_{t} = \left(
\begin{array}{cccc}
u_{1,t} \&lt;br&gt;
u_{2,t} \&lt;br&gt;
\vdots  \&lt;br&gt;
u_{J,t} \&lt;br&gt;
\end{array}
\right)
$$
ここで、$t$は時点、$J$は変数の数、$K$はラグ数を表しています。上式を見ると、UVARは自己回帰＋他変数のラグでt期の変数$y_{j,t}$を説明しようとするモデルであると言えます。しばしば、経済の実証分析で使用され、インサンプルの当てはまりが良いことも知られています（GDP、消費、投資、金利、マネーサプライの５変数&lt;code&gt;VAR&lt;/code&gt;で金融政策の波及経路を分析したり･･･）。推定するパラメータの個数は、回帰式1本だけでJK+1個（定数項込み）の係数を含むので、J本になればJ(JK+1)個になります。また、$\Omega$がJ(J+1)/2個のパラメータを持っているので、合計J(JK+1)+J(J+1)/2個のパラメータを推定することになり、かなりパラメータ数が多い印象です（これは後々重要になってきます）。具体的な推計方法ですが、UVARは同時方程式体系ではないのでそこまで面倒ではありません。UVAR自体は&lt;code&gt;Seemingly Unrestricted Regression Equation&lt;/code&gt;（SUR）の一種でそれぞれの方程式は誤差項の相関を通じて関係してはいますが（$\Omega$の部分）、全ての回帰式が同じ説明変数を持つため、各方程式を最小二乗法（&lt;code&gt;OLS&lt;/code&gt;）によって推定するだけで良いことが知られています。
　この事実を説明してみましょう（&lt;code&gt;BVAR&lt;/code&gt;が気になる方は読み飛ばしてもらって構いません）。説明のために今、UVARをSURの一般系に書き直します。上式はt期の&lt;code&gt;VAR&lt;/code&gt;(K)システムですが、UVARを推定する際はこれらJ本の方程式がサンプル数Tセット分存在するので、実際のシステム体系は以下のようになります。&lt;/p&gt;
&lt;p&gt;$$
\left(
\begin{array}{cccc}
Y_{1} \&lt;br&gt;
Y_{2} \&lt;br&gt;
\vdots  \&lt;br&gt;
Y_{J} \&lt;br&gt;
\end{array}
\right) = 
\left(
\begin{array}{cccc}
X_{1} &amp;amp; 0 &amp;amp; \ldots &amp;amp; 0 \&lt;br&gt;
0 &amp;amp; X_{2} &amp;amp; \ldots &amp;amp; 0 \&lt;br&gt;
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \&lt;br&gt;
0 &amp;amp; 0 &amp;amp; \ldots &amp;amp; X_{J}
\end{array}
\right) 
\left(
\begin{array}{cccc}
A_{1} \&lt;br&gt;
A_{2} \&lt;br&gt;
\vdots  \&lt;br&gt;
A_{J} \&lt;br&gt;
\end{array}
\right) +
\left(
\begin{array}{cccc}
U_{1} \&lt;br&gt;
U_{2} \&lt;br&gt;
\vdots  \&lt;br&gt;
U_{J} \&lt;br&gt;
\end{array}
\right) = \overline{X}A + U (1式)
$$
ここで、&lt;/p&gt;
&lt;p&gt;$$
Y_{j} = \left(
\begin{array}{cccc}
y_{t,j} \&lt;br&gt;
y_{t+1,j} \&lt;br&gt;
\vdots  \&lt;br&gt;
y_{T,j} \&lt;br&gt;
\end{array}
\right) ,
X_{j} = X = \left(
\begin{array}{cccc}
1 &amp;amp; y_{t-1,1} &amp;amp; \ldots &amp;amp; y_{t-K,1} &amp;amp; \ldots &amp;amp; y_{t-K,J} \&lt;br&gt;
1 &amp;amp; y_{t,1} &amp;amp; \ldots &amp;amp; y_{t-K+1,1} &amp;amp; \ldots &amp;amp; y_{t-K+1,J} \&lt;br&gt;
\vdots &amp;amp; \vdots &amp;amp; \ldots &amp;amp; \ldots &amp;amp; \ddots &amp;amp; \vdots \&lt;br&gt;
1 &amp;amp; y_{T-1,1} &amp;amp; \ldots &amp;amp; y_{T-K,1} &amp;amp; \ldots &amp;amp; y_{T-K,J} \&lt;br&gt;
\end{array}
\right),
A_{j} = \left(
\begin{array}{cccc}
a_{00,j} \&lt;br&gt;
a_{11,j} \&lt;br&gt;
\vdots  \&lt;br&gt;
a_{JK,j} \&lt;br&gt;
\end{array}
\right)
$$
です。上式とは違い、変数順で並べられていることに注意してください（つまり、各方程式を並べる優先順位は１番目にj、２番目にtとなっている）。また、$X_{j}$が全ての変数$j$について等しいことに注目してください（jに依存していません、&lt;code&gt;VAR&lt;/code&gt;なので当たり前ですが）。これが後々非常に重要になってきます。$U$の分散共分散行列は&lt;/p&gt;
&lt;p&gt;$$
E[UU&#39;|X_{1}, X_{2},..,X_{J}] = \Omega = 
\left(
\begin{array}{cccc}
\sigma_{11}I &amp;amp; \sigma_{12}I &amp;amp; \ldots &amp;amp; \sigma_{1J}I \&lt;br&gt;
\sigma_{21}I &amp;amp; \sigma_{22}I &amp;amp; \ldots &amp;amp; \sigma_{2J}I \&lt;br&gt;
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \&lt;br&gt;
\sigma_{J1}I &amp;amp; \sigma_{J2}I &amp;amp; \ldots &amp;amp; \sigma_{JJ}I \&lt;br&gt;
\end{array}
\right)
$$&lt;/p&gt;
&lt;p&gt;となっており、それぞれの変数は誤差項の相関を通じて関係しています（ただし、同じ変数内の異なる時点間の相関はないと仮定します）。このような場合、一般化最小二乗法（&lt;code&gt;GLS&lt;/code&gt;）を用いて推計を行うことになりますが、これら方程式体系において説明変数が同じであるならば、&lt;code&gt;GLS&lt;/code&gt;推定量と&lt;code&gt;OLS&lt;/code&gt;推定量は同値になります。それを確かめてみましょう。上述した方程式体系(1)の&lt;code&gt;GLS&lt;/code&gt;推定量は以下になります（&lt;a href=&#34;http://user.keio.ac.jp/~nagakura/zemi/GLS.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;参考&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;$$
A_{GLS} = (\overline{X}&#39;\Omega^{-1}\overline{X})^{-1}\overline{X}&#39;\Omega^{-1}Y = (\overline{X}&#39;(\Sigma^{-1}\otimes I)\overline{X})^{-1}\overline{X}&#39;(\Sigma^{-1}\otimes I)Y
$$&lt;/p&gt;
&lt;p&gt;ここで、$\Sigma$は誤差項の分散共分散行列のうち、スカラーである分散、共分散を取り出した行列です。先ほど確認したように、$X_{1}=X_{2}=&amp;hellip;=X_{J}=X$なので$\overline{X}=I \otimes X$であり、その転置も$\overline{X}&#39;=I \otimes X$となります。よって、&lt;a href=&#34;https://mathwords.net/kuronekaseki&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;この&lt;/a&gt;の性質を用いると、&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} A_{GLS} &amp;amp;=&amp;amp; [(I \otimes X&#39;)(\Sigma^{-1}\otimes I)(I \otimes X)]^{-1}(I \otimes X&#39;)(\Sigma^{-1}\otimes I)Y \\ &amp;amp;=&amp;amp; [(\Sigma^{-1}\otimes X&#39;)(I \otimes X)]^{-1}(\Sigma^{-1}\otimes X&#39;)y \\ &amp;amp;=&amp;amp; (\Sigma^{-1}\otimes(X&#39;X))^{-1}(\Sigma^{-1}\otimes X&#39;)y \\ &amp;amp;=&amp;amp; (I \otimes (X&#39;X)^{-1}X&#39;)y \\ &amp;amp;=&amp;amp; (\overline{X}&#39;\overline{X})^{-1}\overline{X}&#39;Y \\ &amp;amp;=&amp;amp;  \left( \begin{array}{cccc} (X&#39;X)^{-1}X&#39; &amp;amp; 0 &amp;amp; \ldots &amp;amp; 0 \\ 0 &amp;amp; (X&#39;X)^{-1}X&#39; &amp;amp; \ldots &amp;amp; 0 \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ 0 &amp;amp; 0 &amp;amp; \ldots &amp;amp; (X&#39;X)^{-1}X&#39; \end{array} \right)  \left( \begin{array}{cccc} Y_{1} \\ Y_{2} \\ \vdots  \\ Y_{J} \\ \end{array} \right)\\  &amp;amp;=&amp;amp; \left( \begin{array}{cccc} (X&#39;X)^{-1}X&#39;Y_{1} \\ (X&#39;X)^{-1}X&#39;Y_{2} \\ \vdots  \\ (X&#39;X)^{-1}X&#39;Y_{J} \\ \end{array} \right) \\ &amp;amp;=&amp;amp; \left( \begin{array}{cccc} A_{1,OLS} \\ A_{2,OLS} \\ \vdots  \\ A_{J,OLS} \\ \end{array} \right) \end{eqnarray}&lt;/code&gt;
$$&lt;/p&gt;
&lt;p&gt;となり、各経済変数の方程式を別個に&lt;code&gt;OLS&lt;/code&gt;推計していけばよいことがわかります。
　&lt;code&gt;OLS&lt;/code&gt;推定に際し、&lt;code&gt;VAR&lt;/code&gt;の次数Kの選択を選択する必要がありますが、次数Kは&lt;code&gt;AIC&lt;/code&gt;（&lt;code&gt;BIC&lt;/code&gt;）を評価軸に探索的に決定します。つまり、いろいろな値をKに設定し、&lt;code&gt;OLS&lt;/code&gt;推計を行い、計算された&lt;code&gt;VAR&lt;/code&gt;(K)の&lt;code&gt;AIC&lt;/code&gt;(&lt;code&gt;BIC&lt;/code&gt;)のうちで最も値が大きいモデルの次数を真のモデルの次数Kとして採用するということです。&lt;code&gt;R&lt;/code&gt;にも&lt;code&gt;VARselect()&lt;/code&gt;という関数があり、引数にラグの探索最大数とデータを渡すことで最適な次数を計算してくれます（便利）。
　このようにUVARは&lt;code&gt;OLS&lt;/code&gt;推計で各変数間の相互依存関係をデータから推計できる手軽な手法です。私が知っている分野ですと財政政策乗数の推計に使用されていました。GDP、消費、投資、政府支出の４変数で&lt;code&gt;VAR&lt;/code&gt;を推定し、推定した&lt;code&gt;VAR&lt;/code&gt;でインパルス応答を見ることで１単位の財政支出の増加がGDP等に与える影響を定量的にシミュレートすることができたりします（指導教官が論文を書いてました）。そもそも私の専門の&lt;code&gt;DSGE&lt;/code&gt;も誘導系に書き直せば&lt;code&gt;VAR&lt;/code&gt;形式になり、インパルス応答などは基本的に一緒です。また、経済変数は慣性が強いので（特に我が国の場合）、インサンプルのモデルの当てはまりもいいです。ただし、あくまでインサンプルです。&lt;b&gt;アウトサンプルの当てはまりはそれほど良い印象はありません。&lt;/b&gt;なぜなら、推定パラメータが多すぎるからです。UVARの予測に関する問題点は&lt;code&gt;over-parametrization&lt;/code&gt;です。例えば、先ほどの４変数UVARでラグが６期だったとすると、推定すべきパラメータは３１個になります。よって、データ数にもよりますが、パラメータ数がデータ数に近づくとインサンプルの補間に近づき、過学習を引き起こす危険性があります。日次GDP推計は大量の変数を使用するのでこの問題は非常に致命的になります。&lt;code&gt;BVAR&lt;/code&gt;はこの問題を解決することに主眼を置いています。&lt;/p&gt;
&lt;h2 id=&#34;2-bvarについて&#34;&gt;2. BVARについて&lt;/h2&gt;
&lt;p&gt;　UVARの問題点は&lt;code&gt;over-parametrization&lt;/code&gt;であると述べました。&lt;code&gt;BVAR&lt;/code&gt;はこの問題を防ぐために不必要な説明変数（のパラメータ）をそぎ落とそうとします。ただ、不要なパラメータを推定する前に０と仮置き（カリブレート）するのではなく、１階の自己に関わるパラメータは１周り、その他変数のパラメータは０周りに正規分布するという形の制約を与えます。このモデルの最大の仮定は「各経済変数は多かれ少なかれドリフト付き１階のランダムウォークに従う」というものであり、上述したような事前分布を先験的に与えた上で推定を行うのです。砕けた言い方をすると、&lt;code&gt;BVAR&lt;/code&gt;の考え方は「経済変数の挙動は基本はランダムウォークだけど他変数のラグに予測力向上に資するものがあればそれも取り入れるよ」というものなんです。さて、前置きが長くなりましたが、具体的な説明に移りたいと思います。&lt;/p&gt;
&lt;h3 id=&#34;具体的な推定方法カルマンフィルタ&#34;&gt;具体的な推定方法（カルマンフィルタ）&lt;/h3&gt;
&lt;p&gt;　上述した事前分布に加えて、&lt;code&gt;BVAR&lt;/code&gt;がUVARと異なる点はパラメータが&lt;code&gt;time-varying&lt;/code&gt;であるということです。なんとなく、パラメータがずっと固定よりもサンプルが増えるたびにその値が更新されるほうが予測精度が上がりそうですよね（笑）。推定手法としてはUVARの時のように&lt;code&gt;OLS&lt;/code&gt;をそれぞれにかけることはせず、&lt;a href=&#34;https://qiita.com/MoriKen/items/0c80ef75749977767b43&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;カルマンフィルタ&lt;/a&gt; と呼ばれるアルゴリズムを用いて推定を行います。&lt;code&gt;BVAR&lt;/code&gt;は以下のような状態空間モデルとして定義されます（各ベクトル、行列の次元はUVAR時と同じです）。&lt;/p&gt;
&lt;p&gt;$$
Y_{t} = X_{t}B_{t} + u_{t} \&lt;br&gt;
B_{t} = \Phi B_{t-1} + \epsilon_{t} \&lt;br&gt;
B_{t} = \left(
\begin{array}{cccc}
\beta_{00,t} \&lt;br&gt;
\beta_{11,t} \&lt;br&gt;
\vdots  \&lt;br&gt;
\beta_{JK,t} \&lt;br&gt;
\end{array}
\right), 
\Phi = \left(
\begin{array}{cccc}
\phi_{00} &amp;amp; 0 &amp;amp; \ldots &amp;amp; 0 \&lt;br&gt;
0 &amp;amp; \phi_{11} &amp;amp; \ldots &amp;amp; 0 \&lt;br&gt;
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \&lt;br&gt;
0 &amp;amp; 0 &amp;amp; \ldots &amp;amp; \phi_{JK}
\end{array}
\right),
u_{t} = \left(
\begin{array}{cccc}
u_{1,t} \&lt;br&gt;
u_{2,t} \&lt;br&gt;
\vdots  \&lt;br&gt;
u_{J,t} \&lt;br&gt;
\end{array}
\right),
\epsilon_{t} = \left(
\begin{array}{cccc}
\epsilon_{00,t} \&lt;br&gt;
\epsilon_{11,t} \&lt;br&gt;
\vdots  \&lt;br&gt;
\epsilon_{JK,t} \&lt;br&gt;
\end{array}
\right)
$$
状態空間モデルは観測可能なデータ（ex.経済統計）を用いて、観測不可能なデータ（ex.リスクプレミアムや限界消費性向等）を推定します。観測可能なデータと不可能なデータを関連付ける方程式を観測方程式、観測不可能なデータの挙動をモデル化した方程式を遷移方程式と呼びます。ここでは、1本目が観測方程式、2本目が遷移方程式となります。御覧の通り、観測方程式は通常の&lt;code&gt;VAR&lt;/code&gt;の形をしている一方、遷移方程式は&lt;code&gt;AR(1)&lt;/code&gt;となっており、これによってパラメータ$B_{t}$は過去の値を引きずりながら$\epsilon_{t}$によって確率的に変動します。$\Phi$は自己回帰係数です。誤差項$u_{t}$と$\epsilon_{t}$は平均０の正規分布に従い、その分散は&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} Var(u_{t}) &amp;amp;=&amp;amp; \sigma_{u}^{2} \\ Var(\epsilon_{t}) &amp;amp;=&amp;amp; \sigma_{\epsilon}^{2}R \end{eqnarray}&lt;/code&gt;
$$
で与えられます。ここで、$\Phi,R,\sigma_{u}^{2},\sigma_{\epsilon}^{2}$は既知であるとします。今、t-1期までのデータが入手可能であるとすると、そのデータをカルマンフィルタアルゴリズムで推定した$B_{t-1|t-1}$とその分散共分散行列$P_{t-1|t-1}$を用いて、t期の予想値を以下のように計算します。&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} B_{t|t-1} &amp;amp;=&amp;amp; \Phi B_{t-1|t-1} \\ P_{t|t-1} &amp;amp;=&amp;amp; \Phi P_{t|t-1} \Phi&#39; + \sigma_{\epsilon}^{2}R \end{eqnarray}&lt;/code&gt;
$$
観測可能な変数の予測値はこの値を用いて計算します。&lt;/p&gt;
&lt;p&gt;$$
\hat{Y_{t}} = X_{t} B_{t|t-1}
$$
次にt期の観測値が得られると次の更新方程式を用いて$B_{t|t}, P_{t|t}$を計算します。&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} B_{t|t} &amp;amp;=&amp;amp; B_{t|t-1} + P_{t|t-1}X_{t}&#39;(X_{t}P_{t|t-1}X_{t}&#39; + \sigma_{u}^{2})^{-1}(Y_{t}-X_{t}B_{t|t-1}) \\ P_{t|t} &amp;amp;=&amp;amp; P_{t|t-1} + P_{t|t-1}X_{t}&#39;(X_{t}P_{t|t-1}X_{t}&#39; + \sigma_{u}^{2})^{-1}X_{t}P_{t|t-1} \end{eqnarray}&lt;/code&gt;
$$
&lt;code&gt;\(\sigma_{\epsilon}^{2}R = 0\)&lt;/code&gt;かつ$\Phi = I$の場合は&lt;code&gt;逐次最小二乗法&lt;/code&gt;に一致します。要は入手できるサンプル増えるたびに&lt;code&gt;OLS&lt;/code&gt;をやり直していくことと同値だということです。こうして推計を行うのが&lt;code&gt;BVAR&lt;/code&gt;なのですが、カルマンフィルタは漸化式なので初期値$B_{0|0}, P_{0|0}$を決めてやる必要があります。&lt;code&gt;BVAR&lt;/code&gt;の２つ目の特徴は初期値の計算に混合推定法を用いているところであり、ここに前述した事前分布が関係してきます。&lt;/p&gt;
&lt;h3 id=&#34;カルマンフィルタの初期値をどのようにきめるか&#34;&gt;カルマンフィルタの初期値をどのようにきめるか&lt;/h3&gt;
&lt;p&gt;初期値$B_{0|0}, P_{0|0}$をどうやって計算するのかを考えた際にすぐ思いつく方法としては、カルマンフィルタのスタート地点tの前に、初期値推計期間をある程度用意し、$Y = XB + \epsilon$で$B_{0|0}, P_{0|0}$を推定する方法があります。つまり、観測方程式を&lt;code&gt;GLS&lt;/code&gt;推計し、そのパラメータを初期値とする方法です。その際の&lt;code&gt;GLS&lt;/code&gt;推定量は&lt;/p&gt;
&lt;p&gt;$$
\hat{B} = (X&amp;rsquo;V^{-1}X)^{-1}X&amp;rsquo;V^{-1}Y
$$&lt;/p&gt;
&lt;p&gt;です。これでもいいんですが、これではただ時変パラメータを推計しているだけで先ほど述べた&lt;code&gt;over-parametrization&lt;/code&gt;の問題にはアプローチできていません。そこで、ここではパラメータ$B$に対してなにか先験的な情報が得られているとしましょう。つまり、先述した「経済変数の挙動は基本はランダムウォークだけど他変数のラグに予測力向上に資するものがあればそれも取り入れるよ」という予想です。これを定式化してみましょう。つまり、パラメータ$B$に対して以下の制約式を課します。&lt;/p&gt;
&lt;p&gt;$$
r = RB + \nu
$$
ここで、$E(\nu) = 0,Var(\nu) = V_{0}$です。また、$r$は$RB$の予想値であり、$V_{0}$はその予想値の周りでのばらつきを表しています。取っ付きにくいかもしれませんが、$r$は１階自己回帰係数に関わる部分は1、それ以外は0となるベクトルで、$R$は単位行列$I$だと思ってもらえばいいです。つまり、&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} \left( \begin{array}{cccc} 0 \\ 1 \\ 0 \\ \vdots  \\ 1 \\ \vdots  \\ 0 \\ \end{array} \right) &amp;amp;=&amp;amp;  \left( \begin{array}{cccc} 　  \beta_{0,1}^{1} \\ \beta_{1,1}^{1} \\ \beta_{2,1}^{1} \\ \vdots  \\ \beta_{j,1}^{j} \\ \vdots  \\ \beta_{J,K}^{J} \\ \end{array} \right) + \left( \begin{array}{cccc} \nu_{0,1}^{1} \\ \nu_{1,1}^{1} \\ \nu_{2,1}^{1}  \\ \vdots  \\ \nu_{j,1}^{j}  \\ \vdots  \\ \nu_{J,K}^{J} \\ \end{array} \right) \end{eqnarray}&lt;/code&gt;
$$
みたいな感じです。ここで$\beta_{j,k}^{i}$はi番目の方程式のj番目の変数のk次ラグにかかるパラメータを表しています。混合推定では、正規分布に従う観測値とこの事前分布が独立であるという仮定の下で観測方程式$Y = XB + \epsilon$と$ r = RB + \nu$を以下のように組み合わせます。&lt;/p&gt;
&lt;p&gt;$$
\left(
\begin{array}{cccc}
Y \&lt;br&gt;
r 
\end{array}
\right) = \left(
\begin{array}{cccc}
X \&lt;br&gt;
R 
\end{array}
\right)B + 
\left(
\begin{array}{cccc}
\epsilon \&lt;br&gt;
\nu 
\end{array}
\right)
$$&lt;/p&gt;
&lt;p&gt;ここで、&lt;/p&gt;
&lt;p&gt;$$
E\left(
\begin{array}{cccc}
\epsilon \&lt;br&gt;
\nu 
\end{array}
\right) = 0 \&lt;br&gt;
Var\left(
\begin{array}{cccc}
\epsilon \&lt;br&gt;
\nu 
\end{array}
\right) = \left(
\begin{array}{cccc}
\sigma^{2}V &amp;amp; 0 \&lt;br&gt;
0 &amp;amp; V_{0} \&lt;br&gt;
\end{array}
\right)
$$&lt;/p&gt;
&lt;p&gt;そして、このシステム体系を&lt;code&gt;GLS&lt;/code&gt;で推計するのです。こうすることで、事前分布を考慮した初期値の推定を行うことができます。&lt;code&gt;GLS&lt;/code&gt;推定量は以下のようになります。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\(\displaystyle \hat{B}_{M} = (\frac{1}{\sigma^{2}}X&#39;V^{-1}X + R&#39;V_{0}^{-1}R)^{-1}(\frac{1}{\sigma^{2}}X&#39;V^{-1}y + R&#39;V_{0}^{-1}r)\)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ご覧になればわかるように、&lt;code&gt;GLS&lt;/code&gt;推定量は上記2本の連立方程式(実際には行列なので何本もありますが)それぞれのGLS推定量を按分したような推定量になります。ここで、$\sigma^{2}$は既知ではないので、いったん&lt;code&gt;OLS&lt;/code&gt;で推計しその推定量を用います。問題は$V_{0}$の置き方です。$V_{0}$の各要素を小さくとれば、事前分布に整合的な推定量が得られます（つまり、ランダムウォーク）。逆に、大きくとれば通常の&lt;code&gt;GLS&lt;/code&gt;推定量に近づいていきます。Doan, Litternam and Sims (1984)では以下のように分散を置いています。&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} \displaystyle Var(\beta_{j,k}^{j}) &amp;amp;=&amp;amp; \frac{\pi_{5}・\pi_{1}}{k・exp(\pi_{4}w_{i}^{i})} \\ \displaystyle Var(\beta_{j,k}^{i}) &amp;amp;=&amp;amp; \frac{\pi_{5}・\pi_{2}・\sigma_{i}^{2}}{k・exp(\pi_{4}w_{j}^{i})・\sigma_{j}^{2}} \\ Var(c^{i}) &amp;amp;=&amp;amp; \pi_{5}・\pi_{3}・\sigma_{i}^{2} \end{eqnarray}&lt;/code&gt;
$$&lt;/p&gt;
&lt;p&gt;ここで、$\beta_{j,k}^{j}$は$i$番目の方程式の自己回帰パラメータ、$\beta_{j,k}^{i}$は$i$番目方程式の他変数ラグ項にかかるパラメータ、$c^{i}$は定数項です。そして、$\pi_{1},\pi_{2},\pi_{3},\pi_{4},\pi_{5}$はハイパーパラメータと呼ばれるもので、カルマンフィルタにかけるパラメータの初期値の事前分布の分布の広がりを決定するパラメータとなっています。これらは初期値の推定を行う前に値を指定する必要があります。各ハイパーパラメータの具体的な特徴は以下の通りです。$\pi_{1}$は$\beta_{j,k}^{j}$の分散にのみ出現することから自己回帰係数に影響を与えるパラメータとなっています。具体的には、$\pi_{1}$が大きくなればなるほど自己回帰係数は事前分布から大きく離れた辺りを取りうることになります。$\pi_{2}$は$\beta_{j,k}^{i}$の分散にのみ出現することから他変数のラグ項に影響を与えるパラメータとなっています。こちらも値が大きくなればなるほど係数は事前分布から大きく離れた辺りを取りうることになります。$\pi_{3}$は定数項の事前分布に影響を与えるパラメータでこちらも考え方は同じです。$\pi_{4}$はラグ項の分散(つまり定数項以外)に影響を与えるパラメータで、値が大きくなるにつれ、初期値は事前分布に近づいていきます。最後に$\pi_{5}$ですが、こちらは全体にかかるパラメータで、値が大きくなるにつれ、初期値は事前分布から遠ざかります。&lt;/p&gt;
&lt;p&gt;　上式には、ハイパーパラメータ以外にもパラメータや変数が存在します。$\sigma_{i}, \sigma_{j}$は$y_{j,t}, y_{i,t}$をそれぞれ&lt;code&gt;AR(m)&lt;/code&gt;でフィッティングをかけた時の残差の標準偏差の推定値です。変数間のスケーリングの違いを考慮するために、$\sigma_{i}$を$\sigma_{j}$で割ったものを使用しています。本来ならば、&lt;code&gt;VAR&lt;/code&gt;の残差の標準偏差を使用すべきなのですが、推定する前にわかるわけもないので、それぞれ&lt;code&gt;AR(m)&lt;/code&gt;で推定をかけ、その標準偏差を使用しています((ランダムウォークが先験情報なので整合性は取れているような気がします))。$w_{j}^{i}$は完全に恣意的なパラメータで、DLSではrelative weightsと呼ばれているものです。i番目の方程式のj番目の変数のラグ項にかかるパラメータが０であるかどうかについて、分析者の先験情報を反映するためのパラメータです。分散の式を見ればわかるように、relative weightが大きくなれば分散は小さくなり、推定値は事前分布に近づいていきます。DLSでは、ほとんどの変数は$w_{i}^{i}=0,w_{j}^{i}=1$でよいと主張されています。つまり、自己ラグにかかる事前分布の分散に関しては確信をもってランダムウォークであるといえる一方、他変数ラグについては予測力向上に役立つもののあることを考え、値を１と置いているのです。一方、為替レートや株価はランダムウォーク色が強いということから大きい値を使用しています。最後に、$Var(\beta_{j,k}^{j})$と$Var(\beta_{j,k}^{i})$には分母にkがついています。つまり、ラグ次数kが大きくなればなるほど、その係数は０に近づいていくことを先験的情報として仮定していることになります((このおかげで&lt;code&gt;VAR&lt;/code&gt;の次数をこちらで指定する必要がなくなります。適当に大きい次数を指定しておけば、必要のない次数の大きいパラメータに関しては事前と値が０になるので。))。
　
　これらがいわゆる&lt;code&gt;Minnesota Prior&lt;/code&gt;の正体です((実はこれに加えて自己回帰パラメータの総和が１、他変数のラグ項にかかるパラメータの総和が０となる制約を課すのですが、話が複雑になりすぎるので今回は割愛しました))。初期値が事前分布に近づけば&lt;code&gt;BVAR&lt;/code&gt;はランダムウォークに近づきますし、離れるとUVARに近づきます。現実はその間となるのですが、なにを評価尺度としてハイパーパラメータの値を決めるかというと、それは当てはまりの良さということになります。&lt;/p&gt;
&lt;h3 id=&#34;ハイパーパラメータの決定方法とその評価尺度&#34;&gt;ハイパーパラメータの決定方法とその評価尺度&lt;/h3&gt;
&lt;p&gt;当てはまりの良さと言ってもいろいろありますが、DLSはその時点で観測可能なデータから予測できるk期先の予測値の当てはまりの良さを基準としています。DLSでは以下の予測誤差ベクトル$\hat{\epsilon}_{t+k|t}$のクロス積和を最小化することを目的関数として、ハイパーパラメータのチューニングを行っています。&lt;/p&gt;
&lt;p&gt;$$
\hat{\epsilon}&lt;em&gt;{t+k|t} = \hat{Y}&lt;/em&gt;{t+k|t}-Y_{t+k}
$$
ここで、$\hat{Y}_{t+k|t}$はカルマンフィルタによるk期先の予測値です（kをいくつ先にすれば良いかは不明）。このクロス積は$\hat{\epsilon}_{t+k|t}\hat{\epsilon}&#39;_{t+k|t}$であり、これをフィルタリングをかけるt=1期からサンプル期間であるt=T期まで計算していくので、最終的にはT個の予測誤差ベクトルを得ることになり、以下のようなこれらの総和を最小化します。&lt;/p&gt;
&lt;p&gt;$$
\displaystyle \sum_{t=1}^{T-k}\hat{\epsilon}_{t+k|t}\hat{\epsilon}&#39;_{t+k|t}
$$
より厳密にはこのクロス積和の対数値を最小化するハイパーパラメータの値をグリッドサーチやランダムサーチで探索していくことになります((ここは機械学習等で用いられているベイズ最適化を利用するとより高速に収束させることが可能かもです。))。
とまあ、&lt;code&gt;BVAR&lt;/code&gt;の推定方法はこんな感じです。他の&lt;code&gt;VAR&lt;/code&gt;と違い、恣意的であり、また推定方法が機械学習に近い点が特徴ではないかと思います。そもそも、&lt;code&gt;BVAR&lt;/code&gt;は予測に特化した&lt;code&gt;VAR&lt;/code&gt;ですから、他の&lt;code&gt;VAR&lt;/code&gt;とは別物と考える方が良いかもです。&lt;/p&gt;
&lt;p&gt;（追記　2019/4/29）&lt;/p&gt;
&lt;h2 id=&#34;3-rでの実装&#34;&gt;3. Rでの実装&lt;/h2&gt;
&lt;p&gt;ここまでを&lt;code&gt;R&lt;/code&gt;で実装したいと思います。まずは、&lt;code&gt;vars&lt;/code&gt;パッケージに準備されているCanadaデータを使用して、通常の&lt;code&gt;VAR&lt;/code&gt;の推定をやってみます。これはカナダの1980～2000年の労働生産性、雇用、失業率、実質賃金をまとめたものになります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(vars)

&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;(Canada)
Canada.var &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VAR&lt;/span&gt;(Canada,p&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;VARselect&lt;/span&gt;(Canada,lag.max &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;selection[1])
&lt;span style=&#34;color:#a6e22e&#34;&gt;summary&lt;/span&gt;(Canada.var)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## VAR Estimation Results:
## ========================= 
## Endogenous variables: e, prod, rw, U 
## Deterministic variables: const 
## Sample size: 81 
## Log Likelihood: -150.609 
## Roots of the characteristic polynomial:
## 1.004 0.9283 0.9283 0.7437 0.7437 0.6043 0.6043 0.5355 0.5355 0.2258 0.2258 0.1607
## Call:
## VAR(y = Canada, p = VARselect(Canada, lag.max = 4)$selection[1])
## 
## 
## Estimation results for equation e: 
## ================================== 
## e = e.l1 + prod.l1 + rw.l1 + U.l1 + e.l2 + prod.l2 + rw.l2 + U.l2 + e.l3 + prod.l3 + rw.l3 + U.l3 + const 
## 
##           Estimate Std. Error t value Pr(&amp;gt;|t|)    
## e.l1       1.75274    0.15082  11.622  &amp;lt; 2e-16 ***
## prod.l1    0.16962    0.06228   2.723 0.008204 ** 
## rw.l1     -0.08260    0.05277  -1.565 0.122180    
## U.l1       0.09952    0.19747   0.504 0.615915    
## e.l2      -1.18385    0.23517  -5.034 3.75e-06 ***
## prod.l2   -0.10574    0.09425  -1.122 0.265858    
## rw.l2     -0.02439    0.06957  -0.351 0.727032    
## U.l2      -0.05077    0.24534  -0.207 0.836667    
## e.l3       0.58725    0.16431   3.574 0.000652 ***
## prod.l3    0.01054    0.06384   0.165 0.869371    
## rw.l3      0.03824    0.05365   0.713 0.478450    
## U.l3       0.34139    0.20530   1.663 0.100938    
## const   -150.68737   61.00889  -2.470 0.016029 *  
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
## 
## 
## Residual standard error: 0.3399 on 68 degrees of freedom
## Multiple R-Squared: 0.9988,	Adjusted R-squared: 0.9985 
## F-statistic:  4554 on 12 and 68 DF,  p-value: &amp;lt; 2.2e-16 
## 
## 
## Estimation results for equation prod: 
## ===================================== 
## prod = e.l1 + prod.l1 + rw.l1 + U.l1 + e.l2 + prod.l2 + rw.l2 + U.l2 + e.l3 + prod.l3 + rw.l3 + U.l3 + const 
## 
##           Estimate Std. Error t value Pr(&amp;gt;|t|)    
## e.l1      -0.14880    0.28913  -0.515   0.6085    
## prod.l1    1.14799    0.11940   9.615 2.65e-14 ***
## rw.l1      0.02359    0.10117   0.233   0.8163    
## U.l1      -0.65814    0.37857  -1.739   0.0866 .  
## e.l2      -0.18165    0.45083  -0.403   0.6883    
## prod.l2   -0.19627    0.18069  -1.086   0.2812    
## rw.l2     -0.20337    0.13337  -1.525   0.1319    
## U.l2       0.82237    0.47034   1.748   0.0849 .  
## e.l3       0.57495    0.31499   1.825   0.0723 .  
## prod.l3    0.04415    0.12239   0.361   0.7194    
## rw.l3      0.09337    0.10285   0.908   0.3672    
## U.l3       0.40078    0.39357   1.018   0.3121    
## const   -195.86985  116.95813  -1.675   0.0986 .  
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
## 
## 
## Residual standard error: 0.6515 on 68 degrees of freedom
## Multiple R-Squared:  0.98,	Adjusted R-squared: 0.9765 
## F-statistic: 277.5 on 12 and 68 DF,  p-value: &amp;lt; 2.2e-16 
## 
## 
## Estimation results for equation rw: 
## =================================== 
## rw = e.l1 + prod.l1 + rw.l1 + U.l1 + e.l2 + prod.l2 + rw.l2 + U.l2 + e.l3 + prod.l3 + rw.l3 + U.l3 + const 
## 
##           Estimate Std. Error t value Pr(&amp;gt;|t|)    
## e.l1    -4.716e-01  3.373e-01  -1.398    0.167    
## prod.l1 -6.500e-02  1.393e-01  -0.467    0.642    
## rw.l1    9.091e-01  1.180e-01   7.702 7.63e-11 ***
## U.l1    -7.941e-04  4.417e-01  -0.002    0.999    
## e.l2     6.667e-01  5.260e-01   1.268    0.209    
## prod.l2 -2.164e-01  2.108e-01  -1.027    0.308    
## rw.l2   -1.457e-01  1.556e-01  -0.936    0.353    
## U.l2    -3.014e-01  5.487e-01  -0.549    0.585    
## e.l3    -1.289e-01  3.675e-01  -0.351    0.727    
## prod.l3  2.140e-01  1.428e-01   1.498    0.139    
## rw.l3    1.902e-01  1.200e-01   1.585    0.118    
## U.l3     1.506e-01  4.592e-01   0.328    0.744    
## const   -1.167e+01  1.365e+02  -0.086    0.932    
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
## 
## 
## Residual standard error: 0.7601 on 68 degrees of freedom
## Multiple R-Squared: 0.9989,	Adjusted R-squared: 0.9987 
## F-statistic:  5239 on 12 and 68 DF,  p-value: &amp;lt; 2.2e-16 
## 
## 
## Estimation results for equation U: 
## ================================== 
## U = e.l1 + prod.l1 + rw.l1 + U.l1 + e.l2 + prod.l2 + rw.l2 + U.l2 + e.l3 + prod.l3 + rw.l3 + U.l3 + const 
## 
##          Estimate Std. Error t value Pr(&amp;gt;|t|)    
## e.l1     -0.61773    0.12508  -4.939 5.39e-06 ***
## prod.l1  -0.09778    0.05165  -1.893 0.062614 .  
## rw.l1     0.01455    0.04377   0.332 0.740601    
## U.l1      0.65976    0.16378   4.028 0.000144 ***
## e.l2      0.51811    0.19504   2.656 0.009830 ** 
## prod.l2   0.08799    0.07817   1.126 0.264279    
## rw.l2     0.06993    0.05770   1.212 0.229700    
## U.l2     -0.08099    0.20348  -0.398 0.691865    
## e.l3     -0.03006    0.13627  -0.221 0.826069    
## prod.l3  -0.01092    0.05295  -0.206 0.837180    
## rw.l3    -0.03909    0.04450  -0.879 0.382733    
## U.l3      0.06684    0.17027   0.393 0.695858    
## const   114.36732   50.59802   2.260 0.027008 *  
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
## 
## 
## Residual standard error: 0.2819 on 68 degrees of freedom
## Multiple R-Squared: 0.9736,	Adjusted R-squared: 0.969 
## F-statistic: 209.2 on 12 and 68 DF,  p-value: &amp;lt; 2.2e-16 
## 
## 
## 
## Covariance matrix of residuals:
##             e     prod       rw        U
## e     0.11550 -0.03161 -0.03681 -0.07034
## prod -0.03161  0.42449  0.05589  0.01494
## rw   -0.03681  0.05589  0.57780  0.03660
## U    -0.07034  0.01494  0.03660  0.07945
## 
## Correlation matrix of residuals:
##            e     prod      rw        U
## e     1.0000 -0.14276 -0.1425 -0.73426
## prod -0.1428  1.00000  0.1129  0.08136
## rw   -0.1425  0.11286  1.0000  0.17084
## U    -0.7343  0.08136  0.1708  1.00000
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;plot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;predict&lt;/span&gt;(Canada.var,n.ahead&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;,ci&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.95&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post5/index_files/figure-html/r-1.png&#34; width=&#34;480&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;パッケージが整備されているので簡単に実行できました。上で見たようにやっていることは別々の&lt;code&gt;OLS&lt;/code&gt;を4本推定しているだけです。
次に&lt;code&gt;BVAR&lt;/code&gt;です。まず、カルマンフィルタと事前分布を定義します。カルマンフィルタは以前記事でご紹介したものと同じです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(seasonal)

kalmanfiter &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(y,I,t,z,c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,R&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,Q&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,d&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,S&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,h&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,a_int&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,sig_int&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;){
  &lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Implemention of Kalman filter&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   y - observed variable&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   I - the number of unobserved variable&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   t - parameter of endogenous variable in state equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   z - parameter of endogenous variable in observable equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   c - constant in state equaion&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   R - parameter of exogenous variable in state equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   Q - var-cov matrix of exogenous variable in state equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   d - constant in observable equaion&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   S - parameter of exogenous variable in observable equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   h - var-cov matrix of exogenous variable in observable equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   a_int - initial value of endogenous variable&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   sig_int - initial value of variance of endogenous variable&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------&lt;/span&gt;
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(MASS)
    
  &lt;span style=&#34;color:#75715e&#34;&gt;# 1.Define Variable&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(y)&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;matrix&amp;#34;&lt;/span&gt;){
    y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(y)
  }
  N &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(y) &lt;span style=&#34;color:#75715e&#34;&gt;# sample size&lt;/span&gt;
  L &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(y) &lt;span style=&#34;color:#75715e&#34;&gt;# the number of observable variable &lt;/span&gt;
  a_pre &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(I,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,N)) &lt;span style=&#34;color:#75715e&#34;&gt;# prediction of unobserved variable&lt;/span&gt;
  a_fil &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(I,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,N&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)) &lt;span style=&#34;color:#75715e&#34;&gt;# filtered of unobserved variable&lt;/span&gt;
  sig_pre &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(I,I,N)) &lt;span style=&#34;color:#75715e&#34;&gt;# prediction of var-cov mat. of unobserved variable&lt;/span&gt;
  sig_fil &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(I,I,N&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)) &lt;span style=&#34;color:#75715e&#34;&gt;# filtered of var-cov mat. of unobserved variable&lt;/span&gt;
  y_pre &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(L,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,N)) &lt;span style=&#34;color:#75715e&#34;&gt;# prediction of observed variable&lt;/span&gt;
  F_pre &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(L,L,N)) &lt;span style=&#34;color:#75715e&#34;&gt;# auxiliary variable &lt;/span&gt;
  k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(I,L,N)) &lt;span style=&#34;color:#75715e&#34;&gt;# kalman gain&lt;/span&gt;
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(a_int))){
    a_int &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(sig_int))){
    sig_int &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I)
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(R))){
    R &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I)
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(Q))){
    Q &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I)
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(S))){
    S &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; L,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; L)
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(h))){
    H &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(L,L,N))
    &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N){
      &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(H[,,i]) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    }
  }else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(h)&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;array&amp;#34;&lt;/span&gt;){
    H &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(h,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(h),&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(h),N))
  }
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# fill infinite if observed data is NA&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N){
    miss &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(y[i,])
    &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(H[,,i])[miss] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e+32&lt;/span&gt;
  }
  y&lt;span style=&#34;color:#a6e22e&#34;&gt;[is.na&lt;/span&gt;(y)] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 2.Set Initial Value&lt;/span&gt;
  a_fil[,,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; a_int
  sig_fil[,,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sig_int
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 3.Implement Kalman filter&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(z)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;array&amp;#34;&lt;/span&gt;){
      Z &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; z[,,i]
    }else{
      Z &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; z
    }
    a_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; t&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;a_fil[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; c
    sig_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; t&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;sig_fil[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(t) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; R&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;Q&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(R)
    y_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; Z&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;a_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; d
    F_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; Z&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;sig_pre[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(Z) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; S&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;H[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(S)
    k[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sig_pre[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(Z)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(F_pre[,,i])
    a_fil[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; a_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; k[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;(y[i,]&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y_pre[,,i])
    sig_fil[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sig_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; k[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;F_pre[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(k[,,i])
  }
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 4.Aggregate results&lt;/span&gt;
  result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(a_pre,a_fil,sig_pre,sig_fil,y_pre,k,t,z)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(result) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state prediction&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state filtered&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state var prediction&amp;#34;&lt;/span&gt;, 
                     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state var filtered&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;observable prediction&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kalman gain&amp;#34;&lt;/span&gt;,
                     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;parameter of state eq&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;parameter of observable eq&amp;#34;&lt;/span&gt;)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt;(result)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;事前分布を計算する関数を定義します。まず、引数を計算しやすい形に変換しておきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# set pi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;pi&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;abs&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)) &lt;span style=&#34;color:#75715e&#34;&gt;# hyperparameter&lt;/span&gt;
  x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; Canada &lt;span style=&#34;color:#75715e&#34;&gt;# dataset&lt;/span&gt;
  order &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# order&lt;/span&gt;
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(MASS)
    
  &lt;span style=&#34;color:#75715e&#34;&gt;# 1. Process row data&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;eval&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pi&amp;#34;&lt;/span&gt;,i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=pi[[&amp;#34;&lt;/span&gt;,i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]]&amp;#34;&lt;/span&gt;)))
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;matrix&amp;#34;&lt;/span&gt;){
    x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(x)
  }
  dependent &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(x&lt;span style=&#34;color:#a6e22e&#34;&gt;[&lt;/span&gt;(order&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(x),&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)){
    dependent &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbind&lt;/span&gt;(dependent,&lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(x&lt;span style=&#34;color:#a6e22e&#34;&gt;[&lt;/span&gt;(order&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(x),i]))
  }
  explanatory &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;embed&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cbind&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,x),order)[,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;((order&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;order&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x))&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(order&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;order))]
  explanatory &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x),ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x))&lt;span style=&#34;color:#f92672&#34;&gt;%x%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(explanatory)
  npara &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(explanatory) &lt;span style=&#34;color:#75715e&#34;&gt;# the number of parameters/ ncol(x)*(ncol(x)*order + 1(const))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;dependentは非説明変数、explanatoryは説明変数です。ちょうど1式を再現した形になります。&lt;/p&gt;
&lt;p&gt;$$
\left(
\begin{array}{cccc}
Y_{1} \&lt;br&gt;
Y_{2} \&lt;br&gt;
\vdots  \&lt;br&gt;
Y_{J} \&lt;br&gt;
\end{array}
\right) = 
\left(
\begin{array}{cccc}
X_{1} &amp;amp; 0 &amp;amp; \ldots &amp;amp; 0 \&lt;br&gt;
0 &amp;amp; X_{2} &amp;amp; \ldots &amp;amp; 0 \&lt;br&gt;
\vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \&lt;br&gt;
0 &amp;amp; 0 &amp;amp; \ldots &amp;amp; X_{J}
\end{array}
\right) 
\left(
\begin{array}{cccc}
A_{1} \&lt;br&gt;
A_{2} \&lt;br&gt;
\vdots  \&lt;br&gt;
A_{J} \&lt;br&gt;
\end{array}
\right) +
\left(
\begin{array}{cccc}
U_{1} \&lt;br&gt;
U_{2} \&lt;br&gt;
\vdots  \&lt;br&gt;
U_{J} \&lt;br&gt;
\end{array}
\right)
$$&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 2. Make Prior matrixes&lt;/span&gt;
  r &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;(npara)) &lt;span style=&#34;color:#75715e&#34;&gt;# a part of dependent variable in mixed estimation&lt;/span&gt;
  iter1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x))
  n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(iter1)){
    iter1[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n
    n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; order&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in iter1){
    r[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  }
  R &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara) &lt;span style=&#34;color:#75715e&#34;&gt;# a part of explanatory variables in mixed estimation&lt;/span&gt;
  V &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(explanatory),ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(explanatory)) &lt;span style=&#34;color:#75715e&#34;&gt;# coefficient matrix of var-cov matrix in mixed estimation&lt;/span&gt;
  
  V0 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara) &lt;span style=&#34;color:#75715e&#34;&gt;# Prior for var matrix&lt;/span&gt;
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# PRIOR FOR VAR OF CONSTANT&lt;/span&gt;
  sigi &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)) &lt;span style=&#34;color:#75715e&#34;&gt;# var of AR(m)&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)){
    AR &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ar&lt;/span&gt;(x[,i],order.max &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; order)
    sigi[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; AR&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;var.pred
  }
  sigma_AR &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(sigi,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x),ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x))
  iter2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,npara,(&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;order&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;))
  n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in iter2){
    V0[i,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; pi5&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pi3&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;sigi[n]
    n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  }
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# PRIOR FOR VAR OF AUTOREGRESSIVE PARAMETER&lt;/span&gt;
  wi &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# prior weight on s.d. of autoregressive parameter&lt;/span&gt;
  k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# decay parameter&lt;/span&gt;
  iter3 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;order))
  n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;iter3[1] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(iter3)){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;((i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;order &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
      n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# const&lt;/span&gt;
      iter3[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n 
    }else{
      n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)
      iter3[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n
    }
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in iter3) {
    k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    V0[i,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; pi5&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pi1&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;(k&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exp&lt;/span&gt;(pi4&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;wi))
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(k &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; order){
      k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
    }
  }
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# PRIOR FOR VAR OF DISTRIBUTED LAG PARAMETER&lt;/span&gt;
  wj &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# prior weight on s.d. of distributed lag parameter&lt;/span&gt;
  k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# decay parameter&lt;/span&gt;
  count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  ndis &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; npara &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(iter3) &lt;span style=&#34;color:#75715e&#34;&gt;# the number of distibuted lag in each equation&lt;/span&gt;
  
  l &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x),length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;npara)
  temp &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(iter3))
  j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;temp[1] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; j
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(temp)){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;((i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;order &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
      j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# const&lt;/span&gt;
      temp[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; j 
    }else{
      j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)
      temp[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; j
    }
  }
  l &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; l[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(temp)]; l &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; l[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(ndis)]
  
  iter4 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;npara; iter4 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; iter4[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(iter2,iter3)]
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in iter4){
    count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    V0[i,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; pi5&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pi2&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;sigi[n]&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;(k&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exp&lt;/span&gt;(pi4&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;wj)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;sigi[l[count]])
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(count&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;(order&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
      k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(count&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;(ndis&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
      n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
      k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    }
  }

  &lt;span style=&#34;color:#75715e&#34;&gt;# 3. Estimate OLS&lt;/span&gt;
  beta &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;explanatory))&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;dependent
  sig &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(explanatory))&lt;span style=&#34;color:#a6e22e&#34;&gt;^&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
                      &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(dependent&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;explanatory&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;beta)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;
                      (dependent&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;explanatory&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;beta))
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 4. Implement Mixed Estimation for initial values&lt;/span&gt;
  beta_M &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;((&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;sig)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;explanatory &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(R)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V0)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;R)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;
    ((sig)&lt;span style=&#34;color:#a6e22e&#34;&gt;^&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;dependent &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(R)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V0)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;r)
  sig_M &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sig&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;((sig)&lt;span style=&#34;color:#a6e22e&#34;&gt;^&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;explanatory &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(R)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V0)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;R)
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# for kalman filter&lt;/span&gt;
  observable &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(x&lt;span style=&#34;color:#a6e22e&#34;&gt;[&lt;/span&gt;(order&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(x),]) &lt;span style=&#34;color:#75715e&#34;&gt;# dependent variable&lt;/span&gt;
  coefficient &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x),ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara,(&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;order))) &lt;span style=&#34;color:#75715e&#34;&gt;# explanatory variable&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;order)){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(k in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)){
      coefficient[k,(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(k&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;npara&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x))&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(k&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;npara&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)),i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; explanatory[i,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(npara&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x))]
    }
  }
  
  result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(observable, coefficient, beta_M, sig_M, sigma_AR, V0, order, npara)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(result) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;observable&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;coefficient&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;beta_M&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sig_M&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sigma_AR&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;V0&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;order&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;npara&amp;#34;&lt;/span&gt;)
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt;(result)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;MPrior &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(x,order,&lt;span style=&#34;color:#66d9ef&#34;&gt;pi&lt;/span&gt;){
  &lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make Minnesota Prior&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   x - dataset&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   order - max lag of autoregression&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   pi - a set of hyper-parameter of prior matrix&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------&lt;/span&gt;

  &lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(MASS)
    
  &lt;span style=&#34;color:#75715e&#34;&gt;# 1. Process row data&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;eval&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste0&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pi&amp;#34;&lt;/span&gt;,i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=pi[[&amp;#34;&lt;/span&gt;,i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]]&amp;#34;&lt;/span&gt;)))
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;matrix&amp;#34;&lt;/span&gt;){
    x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(x)
  }
  dependent &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(x[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;order),&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)){
    dependent &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbind&lt;/span&gt;(dependent,&lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(x&lt;span style=&#34;color:#a6e22e&#34;&gt;[&lt;/span&gt;(order&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(x),i]))
  }
  explanatory &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbind&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;embed&lt;/span&gt;(x,order)[&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;,])
  explanatory &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x),ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x))&lt;span style=&#34;color:#f92672&#34;&gt;%x%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(explanatory)
  npara &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(explanatory) &lt;span style=&#34;color:#75715e&#34;&gt;# the number of parameters/ ncol(x)*(ncol(x)*order + 1(const))&lt;/span&gt;
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 2. Make Prior matrixes&lt;/span&gt;
  r &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;(npara)) &lt;span style=&#34;color:#75715e&#34;&gt;# a part of dependent variable in mixed estimation&lt;/span&gt;
  iter1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x))
  n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(iter1)){
    iter1[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n
    n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; order&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in iter1){
    r[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  }
  R &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara) &lt;span style=&#34;color:#75715e&#34;&gt;# a part of explanatory variables in mixed estimation&lt;/span&gt;
  V &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(explanatory),ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(explanatory)) &lt;span style=&#34;color:#75715e&#34;&gt;# coefficient matrix of var-cov matrix in mixed estimation&lt;/span&gt;
  
  V0 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara) &lt;span style=&#34;color:#75715e&#34;&gt;# Prior for var matrix&lt;/span&gt;
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# PRIOR FOR VAR OF CONSTANT&lt;/span&gt;
  sigi &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)) &lt;span style=&#34;color:#75715e&#34;&gt;# var of AR(m)&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)){
    AR &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ar&lt;/span&gt;(x[,i],order.max &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; order)
    sigi[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; AR&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;var.pred
  }
  sigma_AR &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(sigi,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x),ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x))
  iter2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,npara,(&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;order&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;))
  n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in iter2){
    V0[i,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; pi5&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pi3&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;sigi[n]
    n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  }
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# PRIOR FOR VAR OF AUTOREGRESSIVE PARAMETER&lt;/span&gt;
  wi &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# prior weight on s.d. of autoregressive parameter&lt;/span&gt;
  k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# decay parameter&lt;/span&gt;
  iter3 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;order))
  n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;iter3[1] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(iter3)){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;((i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;order &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
      n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# const&lt;/span&gt;
      iter3[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n 
    }else{
      n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)
      iter3[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; n
    }
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in iter3) {
    k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    V0[i,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; pi5&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pi1&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;(k&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exp&lt;/span&gt;(pi4&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;wi))
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(k &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; order){
      k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
    }
  }
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# PRIOR FOR VAR OF DISTRIBUTED LAG PARAMETER&lt;/span&gt;
  wj &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# prior weight on s.d. of distributed lag parameter&lt;/span&gt;
  k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# decay parameter&lt;/span&gt;
  count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  ndis &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; npara &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(iter3) &lt;span style=&#34;color:#75715e&#34;&gt;# the number of distibuted lag in each equation&lt;/span&gt;
  
  l &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x),length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;npara)
  temp &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(iter3))
  j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;temp[1] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; j
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(temp)){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;((i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;order &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
      j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# const&lt;/span&gt;
      temp[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; j 
    }else{
      j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)
      temp[i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; j
    }
  }
  l &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; l[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(temp)]; l &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; l[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(ndis)]
  
  iter4 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;npara; iter4 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; iter4[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(iter2,iter3)]
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in iter4){
    count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    V0[i,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; pi5&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pi2&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;sigi[n]&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;(k&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exp&lt;/span&gt;(pi4&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;wj)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;sigi[l[count]])
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(count&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;(order&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
      k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(count&lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt;(ndis&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
      n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
      k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    }
  }

  &lt;span style=&#34;color:#75715e&#34;&gt;# 3. Estimate OLS&lt;/span&gt;
  beta &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;explanatory))&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;dependent
  sig &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(explanatory))&lt;span style=&#34;color:#a6e22e&#34;&gt;^&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
                      &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(dependent&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;explanatory&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;beta)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;
                      (dependent&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;explanatory&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;beta))
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 4. Implement Mixed Estimation for initial values&lt;/span&gt;
  beta_M &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;((&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;sig)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;explanatory &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(R)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V0)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;R)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;
    ((sig)&lt;span style=&#34;color:#a6e22e&#34;&gt;^&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;dependent &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(R)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V0)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;r)
  sig_M &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sig&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;((sig)&lt;span style=&#34;color:#a6e22e&#34;&gt;^&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(explanatory)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;explanatory &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(R)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(V0)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;R)
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# for kalman filter&lt;/span&gt;
  observable &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(x&lt;span style=&#34;color:#a6e22e&#34;&gt;[&lt;/span&gt;(order&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(x),]) &lt;span style=&#34;color:#75715e&#34;&gt;# dependent variable&lt;/span&gt;
  coefficient &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x),ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara,(&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;order))) &lt;span style=&#34;color:#75715e&#34;&gt;# explanatory variable&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(x)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;order)){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(k in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)){
      coefficient[k,(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(k&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;npara&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x))&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(k&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;npara&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x)),i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; explanatory[i,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(npara&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(x))]
    }
  }
  
  result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(observable, coefficient, beta_M, sig_M, sigma_AR, V0, order, npara)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(result) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;observable&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;coefficient&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;beta_M&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sig_M&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sigma_AR&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;V0&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;order&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;npara&amp;#34;&lt;/span&gt;)
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt;(result)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;BVAR &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(m){
  &lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Estimation of Bayesian Vector Auto-Regression&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   m - dataset&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------&lt;/span&gt;
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 1. Process data&lt;/span&gt;
  observable &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; m&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;observable
  coefficient &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; m&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;coefficient
  beta_M &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; m&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;beta_M
  sig_M &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; m&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;sig_M
  sigma_AR &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; m&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;sigma_AR
  V0 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; m&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;V0
  order &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; m&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;order
  npara &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; m&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;npara
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 2. Run Kalmanfilter&lt;/span&gt;
  results &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;kalmanfiter&lt;/span&gt;(observable,npara,&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; npara),
                         coefficient,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,V0,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,sigma_AR,beta_M,sig_M)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt;(results)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MPrior&lt;/span&gt;(Canada,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;abs&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)))
results &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BVAR&lt;/span&gt;(m)

BVAR_Prediction &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(results,horizon){
  
  state_pred &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; results&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state prediction`
  state_fil &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; results&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state filtered`
  obs_pred &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; results&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`observable prediction`
  A &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; results&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`parameter of state eq`
    
  nparaall &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dim&lt;/span&gt;(state_pred)[1]
  num &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dim&lt;/span&gt;(obs_pred)[1]
  npara &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; order&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;num&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;
  order &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; (nparaall&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;num)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;(num^2)
  samplesize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dim&lt;/span&gt;(state_pred)[3]
  
  y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,horizon,num)
  B &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,horizon,nparaall)
  x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; results&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`parameter of observable eq`[1,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;npara,samplesize]
  
  B[1,] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; state_fil[,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,samplesize]
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(horizon&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)) {
    B[i&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;,] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; A&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;B[i,]
    y[i&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;,] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; B[i&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;,]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,num)&lt;span style=&#34;color:#f92672&#34;&gt;%x%&lt;/span&gt;x)
    x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,y[i&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;,],x[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt;(from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(npara&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;order),to&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;npara))])
  }
  
  result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(B,y)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(result) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;)
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt;(result)
  
}

pre &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BVAR_Prediction&lt;/span&gt;(results,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)

BVAR_OPT &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(x){
  int_pi &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
  
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Sims, Christopher A, 1980. &amp;ldquo;Macroeconomics and Reality,&amp;rdquo; Econometrica, Econometric Society, vol. 48(1), pages 1-48, January. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
  </channel>
</rss>
