<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>カルマンフィルタ | 京都の電子部品メーカーで働く社会人が研究に没頭するブログ</title>
    <link>/tag/%E3%82%AB%E3%83%AB%E3%83%9E%E3%83%B3%E3%83%95%E3%82%A3%E3%83%AB%E3%82%BF/</link>
      <atom:link href="/tag/%E3%82%AB%E3%83%AB%E3%83%9E%E3%83%B3%E3%83%95%E3%82%A3%E3%83%AB%E3%82%BF/index.xml" rel="self" type="application/rss+xml" />
    <description>カルマンフィルタ</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ja</language><lastBuildDate>Sun, 10 Feb 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>カルマンフィルタ</title>
      <link>/tag/%E3%82%AB%E3%83%AB%E3%83%9E%E3%83%B3%E3%83%95%E3%82%A3%E3%83%AB%E3%82%BF/</link>
    </image>
    
    <item>
      <title>カルマンフィルタの実装</title>
      <link>/post/post3/</link>
      <pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/post/post3/</guid>
      <description>&lt;p&gt;おはこんばんにちは。かなり久しぶりの投稿となってしまいました。決して研究をさぼっていたのではなく、&lt;code&gt;BVAR&lt;/code&gt;のコーディングに手こずっていました。あと少しで完成します。さて、今回は&lt;code&gt;BVAR&lt;/code&gt;やこの前のGiannnone et a (2008)のような分析でも大活躍のカルマンフィルタを実装してしまいたいと思います。このブログではパッケージソフトに頼らず、基本的に自分で一から実装を行い、研究することをポリシーとしていますので、これから頻繁に使用するであろうカルマンフィルタを関数として実装してしまうことは非常に有益であると考えます。今回はRで実装をしましたので、そのご報告をします。&lt;/p&gt;
&lt;h2 id=&#34;1-カルマンフィルタとは&#34;&gt;1. カルマンフィルタとは？&lt;/h2&gt;
&lt;p&gt;まず、カルマンフィルタに関する簡単な説明を行います。非常にわかりやすい記事があるので、&lt;a href=&#34;https://qiita.com/MoriKen/items/0c80ef75749977767b43&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;を読んでいただいたほうがより分かりやすいかと思います。&lt;/p&gt;
&lt;p&gt;カルマンフィルタとは、状態空間モデルを解くアルゴリズムの一種です。状態空間モデルとは、手元の観測可能な変数から観測できない変数を推定するモデルであり、以下のような形をしています。&lt;/p&gt;
&lt;p&gt;$$
Y_{t} = Z_{t}\alpha_{t} + d_{t} + S_{t}\epsilon_{t} \&lt;br&gt;
\alpha_{t} = T_{t}\alpha_{t-1} + c_{t} + R_{t}\eta_{t}
$$&lt;/p&gt;
&lt;p&gt;ここで、$Y_{t}$は$g×1$ベクトルの観測可能な変数(観測変数)、$Z_{t}$は$g×k$係数行列、$\alpha_{t}$は$k×1$ベクトルの観測不可能な変数(状態変数)、$T_{t}$は$k×k$係数行列です。また、$\epsilon_{t}$は観測変数の誤差項、$\eta_{t}$は状態変数の誤差項です。これらの誤差項はそれぞれ$N(0,H_{t})$, &lt;code&gt;\(N(0,Q_{t})\)&lt;/code&gt;に従います（$H_{t},Q_{t}$は分散共分散行列）。$d_{t}$, &lt;code&gt;\(c_{t}\)&lt;/code&gt;は定数項です。1本目の式は観測方程式、2本目の式は遷移方程式と呼ばれます。
状態空間モデルを使用する例として、しばしば池の魚の数を推定する問題が使用されます。今、池の中の魚の全数が知りたいとして、その推定を考えます。観測時点毎に池の中の魚をすべて捕まえてその数を調べるのは現実的に困難なので、一定期間釣りをして釣れた魚をサンプルに全数を推定することを考えます。ここで、釣れた魚は観測変数、池にいる魚の全数は状態変数と考えることができます。今、経験的に釣れた魚の数と全数の間に以下のような関係があるとします。&lt;/p&gt;
&lt;p&gt;$$
Y_{t} = 0.01\alpha_{t} + 5 + \epsilon_{t}
$$
これが観測方程式になります。また、魚の全数は過去の値からそれほど急速には変化しないと考えられるため、以下のようなランダムウォークに従うと仮定します。&lt;/p&gt;
&lt;p&gt;$$
\alpha_{t} = \alpha_{t-1}  + 500 + \eta_{t}
$$
これが遷移方程式になります。あとは、これをカルマンフィルタアルゴリズムを用いて計算すれば、観測できない魚の全数を推定することができます。
このように状態空間モデルは非常に便利なモデルであり、また応用範囲も広いです。例えば、販売額から潜在顧客数を推定したり、クレジットスプレッドやトービンのQ等経済モデル上の概念として存在する変数を推定する、&lt;code&gt;BVAR&lt;/code&gt;のように&lt;code&gt;VAR&lt;/code&gt;や回帰式の時変パラメータ推定などにも使用されます。&lt;/p&gt;
&lt;h2 id=&#34;2-カルマンフィルタアルゴリズムの導出&#34;&gt;2. カルマンフィルタアルゴリズムの導出&lt;/h2&gt;
&lt;p&gt;さて、非常に便利な状態空間モデルの説明はこれくらいにして、カルマンフィルタの説明に移りたいと思います。カルマンフィルタは状態空間モデルを解くアルゴリズムの一種であると先述しました。つまり、他にも状態空間モデルを解くアルゴリズムは存在します。カルマンフィルタアルゴリズムは一般に誤差項の正規性の仮定を必要としないフィルタリングアルゴリズムであり、観測方程式と遷移方程式の線形性の仮定さえあれば、線形最小分散推定量となります。カルマンフィルタアルゴリズムの導出にはいくつかの方法がありますが、今回はこの線形最小分散推定量としての導出を行います。まず、以下の３つの仮定を置きます。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初期値$\alpha_{0}$は正規分布$N(a_{0},\Sigma_{0})$に従う確率ベクトルである($a_{t}$は$\alpha_{t}$の推定値)。&lt;/li&gt;
&lt;li&gt;誤差項$\epsilon_{t}$,$\eta_{s}$は全ての$t$,$s$で互いに独立で、初期値ベクトル$\alpha_{0}$と無相関である（$E(\epsilon_{t}\eta_{s})=0$, &lt;code&gt;\(E(\epsilon_{t}\alpha_{0})=0\)&lt;/code&gt;, &lt;code&gt;\(E(\eta_{t}\alpha_{0})=0\)&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;2より、$E(\epsilon_{t}\alpha_{t}&#39;)=0$、$E(\eta_{t}\alpha_{t-1}&#39;)=0$。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;まず、$t-1$期の情報集合$\Omega_{t-1}$が既知の状態での$\alpha_{t}$と$Y_{t}$の期待値（予測値）を求めてみましょう。上述した状態空間モデルと誤差項の期待値がどちらもゼロである事実を用いると、以下のように計算することができます。&lt;/p&gt;
&lt;p&gt;$$
E(\alpha_{t}|\Omega_{t-1}) = a_{t|t-1} = T_{t}a_{t-1|t-1} + c_{t}
E(Y_{t}|\Omega_{t-1}) = Y_{t|t-1} = Z_{t}a_{t|t-1} + d_{t}
$$&lt;/p&gt;
&lt;p&gt;ここで、次に、これらの分散を求めます。&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} E( (\alpha_{t}-a_{t|t-1})(\alpha_{t}-a_{t|t-1})&#39;|\Omega_{t-1}) &amp;amp;=&amp;amp; E( (T_{t}\alpha_{t-1} + c_{t} + R_{t}\eta_{t}-a_{t|t-1})(T_{t}\alpha_{t-1} + c_{t} + R_{t}\eta_{t}-a_{t|t-1})&#39;|\Omega_{t-1}) \\  &amp;amp;=&amp;amp; E(T_{t}\alpha_{t-1}\alpha_{t-1}&#39;T_{t}&#39; + R_{t}\eta_{t}\eta_{t}&#39;R_{t}&#39;|\Omega_{t-1}) \\ &amp;amp;=&amp;amp; E(T_{t}\alpha_{t-1}\alpha_{t-1}&#39;T_{t}&#39;|\Omega_{t-1}) + E(R_{t}\eta_{t}\eta_{t}&#39;R_{t}&#39;|\Omega_{t-1}) \\ &amp;amp;=&amp;amp; T_{t}E(\alpha_{t-1}\alpha_{t-1}&#39;|\Omega_{t-1})T_{t}&#39; + R_{t}E(\eta_{t}\eta_{t}&#39;|\Omega_{t-1})R_{t}&#39; \\ &amp;amp;=&amp;amp; T_{t}\Sigma_{t-1|t-1}T_{t}&#39; + R_{t}Q_{t}R_{t}&#39; \\ &amp;amp;=&amp;amp; \Sigma_{t|t-1} \end{eqnarray}&lt;/code&gt;
$$&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} E( (Y_{t}-Y_{t|t-1})(Y_{t}-Y_{t|t-1})&#39;|\Omega_{t-1}) &amp;amp;=&amp;amp; E( (Z_{t}\alpha_{t} + d_{t} + S_{t}\epsilon_{t}-Y_{t|t-1})(Z_{t}\alpha_{t} + d_{t} + S_{t}\epsilon_{t}-Y_{t|t-1})&#39;|\Omega_{t-1}) \\ &amp;amp;=&amp;amp; E(Z_{t}\alpha_{t}\alpha_{t}&#39;Z_{t}&#39; + S_{t}\epsilon_{t}\epsilon_{t}&#39;S_{t}&#39;|\Omega_{t-1}) \\ &amp;amp;=&amp;amp; E(Z_{t}\alpha_{t}\alpha_{t}&#39;Z_{t}&#39;|\Omega_{t-1}) + E(S_{t}\epsilon_{t}\epsilon_{t}&#39;S_{t}&#39;|\Omega_{t-1}) \\ &amp;amp;=&amp;amp; Z_{t}E(\alpha_{t}\alpha_{t}&#39;|\Omega_{t-1})Z_{t}&#39; + S_{t}E(\epsilon_{t}\epsilon_{t}&#39;|\Omega_{t-1})S_{t}&#39; \\ &amp;amp;=&amp;amp; Z_{t}\Sigma_{t|t-1}Z_{t}&#39; + S_{t}H_{t}S_{t}&#39; \\ &amp;amp;=&amp;amp; F_{t|t-1} \end{eqnarray}&lt;/code&gt;
$$&lt;/p&gt;
&lt;p&gt;ここで、$t$期の情報集合$\Omega_{t}$が得られたとします（つまり、観測値$Y_{t}$を入手）。カルマンフィルタでは、$t$期の情報である観測値$Y_{t}$を用いて$a_{t|t-1}$を以下の方程式で更新します。&lt;/p&gt;
&lt;p&gt;$$
E(\alpha_{t}|\Omega_{t}) = a_{t|t} = a_{t|t-1} + k_{t}(Y_{t} - Y_{t|t-1})
$$
つまり、観測値と$Y_{t}$の期待値（予測値）の差をあるウェイト$k_{t}$（$k×g$行列）でかけたもので補正をかけるわけです。よって、観測値と予測値が完全に一致していた場合は補正は行われないことになります。ここで重要なのは、ウエイト$k_{t}$をどのように決めるのかです。$k_{t}$は更新後の状態変数の分散$E( (\alpha_{t} - a_{t|t})(\alpha_{t} - a_{t|t})&#39;)= \Sigma_{t|t}$を最小化するよう決定します。これが、カルマンフィルタが線形最小分散推定量である根拠です。最小化にあたっては以下のベクトル微分が必要になりますので、おさらいをしておきましょう。今回使用するのは以下の事実です。&lt;/p&gt;
&lt;p&gt;$$
\displaystyle \frac{\partial a&amp;rsquo;b}{\partial b} = \frac{\partial b&amp;rsquo;a}{\partial b} = a \&lt;br&gt;
\displaystyle \frac{\partial b&amp;rsquo;Ab}{\partial b} = 2Ab
$$&lt;/p&gt;
&lt;p&gt;ここで、$a,b$はベクトル（それぞれ$n×1$ベクトル、$1×n$ベクトル）、$A$は$n×n$の対称行列です。まず、１つ目から証明していきます。$\displaystyle y = a&amp;rsquo;b = b&amp;rsquo;a = \sum_{i=1}^{n}a_{i}b_{i}$とします。
このとき、$\frac{\partial y}{\partial b_{i}}=a_{i}$なので、&lt;/p&gt;
&lt;p&gt;$$
\displaystyle \frac{\partial a&amp;rsquo;b}{\partial b} = \frac{\partial b&amp;rsquo;a}{\partial b} = a
$$&lt;/p&gt;
&lt;p&gt;次に２つ目です。$y = b&amp;rsquo;Ab = \sum_{i=1}^{n}\sum_{j=1}^{n}a_{ij}b_{i}b_{j}$とします。このとき、&lt;/p&gt;
&lt;p&gt;$$
\displaystyle \frac{\partial y}{\partial b_{i}} = \sum_{j=1}^{n}a_{ij}b_{j} + \sum_{j=1}^{n}a_{ji}b_{j} = 2\sum_{j=1}^{n}a_{ij}b_{j} = 2a_{i}&amp;lsquo;b
$$
よって、&lt;/p&gt;
&lt;p&gt;$$
\displaystyle \frac{\partial y}{\partial b} =
\left(
\begin{array}{cccc}
\frac{\partial y}{\partial b_{1}} \&lt;br&gt;
\vdots \&lt;br&gt;
\frac{\partial y}{\partial b_{n}} \&lt;br&gt;
\end{array}
\right) = 2
\left(
\begin{array}{cccc}
\sum_{j=1}^{n}a_{1j}b_{j} \&lt;br&gt;
\vdots \&lt;br&gt;
\sum_{j=1}^{n}a_{nj}b_{j} \&lt;br&gt;
\end{array}
\right) = 2
\left(
\begin{array}{cccc}
a_{1}&amp;lsquo;b \&lt;br&gt;
\vdots \&lt;br&gt;
a_{n}&amp;lsquo;b \&lt;br&gt;
\end{array}
\right)
= 2Ab
$$
さて、準備ができたので、更新後の状態変数の分散$E( (\alpha_{t} - a_{t|t})(\alpha_{t} - a_{t|t})&#39;)$を求めてみましょう。&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} E( (\alpha_{t} - a_{t|t})(\alpha_{t} - a_{t|t})&#39;) &amp;amp;=&amp;amp; \Sigma_{t|t} \\ &amp;amp;=&amp;amp; E\{ (\alpha_{t} - a_{t|t-1} + k_{t}(Y_{t} - Y_{t|t-1}))(\alpha_{t} - a_{t|t-1} + k_{t}(Y_{t} - Y_{t|t-1}))&#39;\} \\ &amp;amp;=&amp;amp; E\{ ( (\alpha_{t} - a_{t|t-1}) - k_{t}(Z_{t}\alpha_{t} + d_{t} + S_{t}\epsilon_{t} - Z_{t}a_{t|t-1} - d_{t}) )( (\alpha_{t} - a_{t|t-1}) - k_{t}(Z_{t}\alpha_{t} + d_{t} + S_{t}\epsilon_{t} - Z_{t}a_{t|t-1} - d_{t}) )\} \\ &amp;amp;=&amp;amp; E\{ ( (\alpha_{t} - a_{t|t-1}) - k_{t}(Z_{t}\alpha_{t} + S_{t}\epsilon_{t} - Z_{t}a_{t|t-1}) )( (\alpha_{t} - a_{t|t-1}) - k_{t}(Z_{t}\alpha_{t} + S_{t}\epsilon_{t} - Z_{t}a_{t|t-1}) )&#39;\} \\ &amp;amp;=&amp;amp; E\{ ( (I - k_{t}Z_{t})\alpha_{t} - k_{t}S_{t}\epsilon_{t} - (I - k_{t}Z_{t})a_{t|t-1})( (I - k_{t}Z_{t})\alpha_{t} - k_{t}S_{t}\epsilon_{t} - (I - k_{t}Z_{t})a_{t|t-1})&#39; \} \\ &amp;amp;=&amp;amp; E\{( (I - k_{t}Z_{t})(\alpha_{t}-a_{t|t-1}) - k_{t}S_{t}\epsilon_{t})( (I - k_{t}Z_{t})(\alpha_{t}-a_{t|t-1}) - k_{t}S_{t}\epsilon_{t})&#39;\} \\ &amp;amp;=&amp;amp; (I - k_{t}Z_{t})\Sigma_{t|t-1}(I - k_{t}Z_{t})&#39; + k_{t}S_{t}H_{t}S_{t}&#39;k_{t}&#39; \\ &amp;amp;=&amp;amp; (\Sigma_{t|t-1} - k_{t}Z_{t}\Sigma_{t|t-1})(I - k_{t}Z_{t})&#39; + k_{t}S_{t}H_{t}S_{t}&#39;k_{t}&#39; \\ &amp;amp;=&amp;amp; \Sigma_{t|t-1} - \Sigma_{t|t-1}(k_{t}Z_{t})&#39; - k_{t}Z_{t}\Sigma_{t|t-1} + k_{t}Z_{t}\Sigma_{t|t-1}Z_{t}&#39;k_{t}&#39; + k_{t}S_{t}H_{t}S_{t}&#39;k_{t}&#39; \\ &amp;amp;=&amp;amp; \Sigma_{t|t-1} - \Sigma_{t|t-1}Z_{t}&#39;k_{t}&#39; - k_{t}Z_{t}\Sigma_{t|t-1} + k_{t}(Z_{t}\Sigma_{t|t-1}Z_{t}&#39; + S_{t}H_{t}S_{t}&#39;)k_{t}&#39; \\ \end{eqnarray}&lt;/code&gt;
$$&lt;/p&gt;
&lt;p&gt;１回目の式変形で、$a_{t|t}$に上述した更新式を代入し、２回目の式変形で観測方程式と上で計算した$E(Y_{t}|\Omega_{t-1})$を代入しています。さて、更新後の状態変数の分散$\Sigma_{t|t}$を$k_{t}$の関数として書き表すことができたので、これを$k_{t}$で微分し、0と置き、$\Sigma_{t|t}$を最小化する$k_{t}$を求めます。先述した公式で、$a=\Sigma_{t|t-1}Z_{t}&#39;$、$b=k_{t}&#39;$、$A=(Z_{t}\Sigma_{t|t-1}Z_{t}&amp;rsquo; + S_{t}H_{t}S_{t}&#39;)$とすると（$A$は分散共分散行列の和なので対称行列）、&lt;/p&gt;
&lt;p&gt;$$
\frac{\partial \Sigma_{t|t}}{\partial k_{t}&#39;} = -2(Z_{t}\Sigma_{t|t-1})&amp;rsquo; + 2(Z_{t}\Sigma_{t|t-1}Z_{t}&amp;rsquo; + S_{t}H_{t}S_{t}&#39;)k_{t} = 0
$$&lt;/p&gt;
&lt;p&gt;ここから、$k_{t}$を解きなおすと、&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} k_{t} &amp;amp;=&amp;amp; \Sigma_{t|t-1}Z_{t}&#39;(Z_{t}\Sigma_{t|t-1}Z_{t}&#39; + S_{t}H_{t}S_{t}&#39;)^{-1} \\ &amp;amp;=&amp;amp; \Sigma_{t|t-1}Z_{t}&#39;F_{t|t-1}^{-1} \end{eqnarray}&lt;/code&gt;
$$&lt;/p&gt;
&lt;p&gt;突然、$F_{t|t-1}$が出てきました。これは観測変数の予測値の分散$E((Y_{t}-Y_{t|t-1})(Y_{t}-Y_{t|t-1})&#39;|\Omega_{t-1})$でした。一方、$\Sigma_{t|t-1}Z_{t}$は状態変数の予測値の分散を観測変数のスケールに調整したものです（観測空間に写像したもの）。つまり、カルマンゲイン$k_{t}$は状態変数と観測変数の予測値の分散比となっているのです。観測変数にはノイズがあり、観測方程式はいつも誤差０で満たされるわけではありません。また、状態方程式にも誤差項が存在します。状態の遷移も100%モデル通りにはいかないということです。$t$期の観測変数$Y_{t}$が得られたとして、それをどれほど信頼して状態変数を更新するかは観測変数のノイズが状態変数のノイズに比べてどれほど小さいかによります。つまり、相対的に観測方程式が遷移方程式よりも信頼できる場合には状態変数を大きく更新するのです。このように、カルマンフィルタでは、観測方程式と遷移方程式の相対的な信頼度によって、更新の度合いを毎期調整しています。その度合いが分散比であり、カルマンゲインだというわけです。ちなみに欠損値が発生した場合には、観測変数の分散を無限大にし、状態変数の更新を全く行わないという対処を行います。観測変数に信頼がないので当たり前の処置です。この場合は遷移方程式を100%信頼します。これがカルマンフィルタのコアの考え方になります。
更新後の分散を計算しておきます。&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} \Sigma_{t|t} &amp;amp;=&amp;amp; \Sigma_{t|t-1} - \Sigma_{t|t-1}Z_{t}&#39;k_{t}&#39; - k_{t}Z_{t}\Sigma_{t|t-1} + k_{t}F_{t|t-1}k_{t}&#39; \\ &amp;amp;=&amp;amp; \Sigma_{t|t-1} - \Sigma_{t|t-1}Z_{t}&#39;k_{t}&#39; - k_{t}Z_{t}\Sigma_{t|t-1} + (\Sigma_{t|t-1}Z_{t}&#39;F_{t|t-1}^{-1})F_{t|t-1}k_{t}&#39; \\ &amp;amp;=&amp;amp; \Sigma_{t|t-1} - \Sigma_{t|t-1}Z_{t}&#39;k_{t}&#39; - k_{t}Z_{t}\Sigma_{t|t-1} + \Sigma_{t|t-1}Z_{t}&#39;k_{t}&#39; \\ &amp;amp;=&amp;amp; \Sigma_{t|t-1} - k_{t}Z_{t}\Sigma_{t|t-1} \\ &amp;amp;=&amp;amp; \Sigma_{t|t-1} - k_{t}F_{t|t-1}F_{t|t-1}^{-1}Z_{t}\Sigma_{t|t-1} \\ &amp;amp;=&amp;amp; \Sigma_{t|t-1} - k_{t}F_{t|t-1}k_{t}&#39; \end{eqnarray}&lt;/code&gt;
$$&lt;/p&gt;
&lt;p&gt;では、最終的に導出されたアルゴリズムをまとめたいと思います。&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} a_{t|t-1} &amp;amp;=&amp;amp; T_{t}a_{t-1|t-1} + c_{t} \\ \Sigma_{t|t-1} &amp;amp;=&amp;amp; T_{t}\Sigma_{t-1|t-1}T_{t}&#39; + R_{t}Q_{t}R_{t}&#39; \\ Y_{t|t-1} &amp;amp;=&amp;amp; Z_{t}a_{t|t-1} + d_{t} \\ F_{t|t-1} &amp;amp;=&amp;amp;  Z_{t}\Sigma_{t|t-1}Z_{t}&#39; + S_{t}H_{t}S_{t}&#39; \\ k_{t} &amp;amp;=&amp;amp; \Sigma_{t|t-1}Z_{t}&#39;F_{t|t-1}^{-1} \\ a_{t|t} &amp;amp;=&amp;amp; a_{t|t-1} + k_{t}(Y_{t} - Y_{t|t-1}) \\ \Sigma_{t|t} &amp;amp;=&amp;amp;  \Sigma_{t|t-1} - k_{t}F_{t|t-1}k_{t}&#39; \end{eqnarray}&lt;/code&gt;
$$
初期値$a_{0},\Sigma_{0}$が所与の元で、まず状態変数の予測値$a_{1|0},\Sigma_{1|0}$を計算します。その結果を用いて、次は観測変数の予測値$Y_{t|t-1},F_{t|t-1}$を計算し、カルマンゲイン$k_{t}$を得ます。$t$期の観測可能なデータを入手したら、更新方程式を用いて$a_{t|t},\Sigma_{t|t}$を更新します。これをサンプル期間繰り返していくことになります。ちなみに、遷移方程式の誤差項$\eta_{t}$と定数項$c_{t}$がなく、遷移方程式のパラメータが単位行列のカルマンフィルタは逐次最小自乗法と一致します。つまり、新しいサンプルを入手するたびに&lt;code&gt;OLS&lt;/code&gt;をやり直す推計方法ということです（今回はその証明は勘弁してください）。&lt;/p&gt;
&lt;h2 id=&#34;3-rで実装する&#34;&gt;3. &lt;code&gt;R&lt;/code&gt;で実装する。&lt;/h2&gt;
&lt;p&gt;以下が&lt;code&gt;R&lt;/code&gt;での実装コードです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;kalmanfiter &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(y,I,t,z,c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,R&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,Q&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,d&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,S&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,h&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,a_int&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,sig_int&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;){
  &lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Implemention of Kalman filter&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   y - observed variable&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   I - the number of unobserved variable&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   t - parameter of endogenous variable in state equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   z - parameter of endogenous variable in observable equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   c - constant in state equaion&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   R - parameter of exogenous variable in state equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   Q - var-cov matrix of exogenous variable in state equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   d - constant in observable equaion&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   S - parameter of exogenous variable in observable equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   h - var-cov matrix of exogenous variable in observable equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   a_int - initial value of endogenous variable&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   sig_int - initial value of variance of endogenous variable&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------&lt;/span&gt;
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(MASS)
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 1.Define Variable&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(y)&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;matrix&amp;#34;&lt;/span&gt;){
    y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(y)
  }
  N &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(y) &lt;span style=&#34;color:#75715e&#34;&gt;# sample size&lt;/span&gt;
  L &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(y) &lt;span style=&#34;color:#75715e&#34;&gt;# the number of observable variable &lt;/span&gt;
  a_pre &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(I,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,N)) &lt;span style=&#34;color:#75715e&#34;&gt;# prediction of unobserved variable&lt;/span&gt;
  a_fil &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(I,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,N&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)) &lt;span style=&#34;color:#75715e&#34;&gt;# filtered of unobserved variable&lt;/span&gt;
  sig_pre &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(I,I,N)) &lt;span style=&#34;color:#75715e&#34;&gt;# prediction of var-cov mat. of unobserved variable&lt;/span&gt;
  sig_fil &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(I,I,N&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)) &lt;span style=&#34;color:#75715e&#34;&gt;# filtered of var-cov mat. of unobserved variable&lt;/span&gt;
  y_pre &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(L,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,N)) &lt;span style=&#34;color:#75715e&#34;&gt;# prediction of observed variable&lt;/span&gt;
  F_pre &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(L,L,N)) &lt;span style=&#34;color:#75715e&#34;&gt;# prediction of var-cov mat. of observable variable &lt;/span&gt;
  F_inv &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(L,L,N)) &lt;span style=&#34;color:#75715e&#34;&gt;# inverse of F_pre&lt;/span&gt;
  k &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(I,L,N)) &lt;span style=&#34;color:#75715e&#34;&gt;# kalman gain&lt;/span&gt;
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(a_int))&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;){
    a_int &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(sig_int))&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;){
    sig_int &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I)
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(R))&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;){
    R &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I)
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(Q))&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;){
    Q &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; I)
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(S))&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;){
    S &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; L,ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; L)
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;any&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(h))&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;){
    H &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(L,L,N))
    &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N){
      &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(H[,,i]) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    }
  }else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(h)&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;array&amp;#34;&lt;/span&gt;){
    H &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(h,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(h),&lt;span style=&#34;color:#a6e22e&#34;&gt;NCOL&lt;/span&gt;(h),N))
  }
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# fill infinite if observed data is NA&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N){
    miss &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(y[i,])
    &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(H[,,i])[miss] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e+32&lt;/span&gt;
  }
  y&lt;span style=&#34;color:#a6e22e&#34;&gt;[is.na&lt;/span&gt;(y)] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 2.Set Initial Value&lt;/span&gt;
  a_fil[,,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; a_int
  sig_fil[,,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sig_int
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 3.Implement Kalman filter&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(z)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;array&amp;#34;&lt;/span&gt;){
      Z &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; z[,,i]
    }else{
      Z &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; z
    }
    a_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; t&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;a_fil[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; c
    sig_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; t&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;sig_fil[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(t) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; R&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;Q&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(R)
    y_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; Z&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;a_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; d
    F_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; Z&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;sig_pre[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(Z) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; S&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;H[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(S)
    k[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sig_pre[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(Z)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(F_pre[,,i])
    a_fil[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; a_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; k[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;(y[i,]&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y_pre[,,i])
    sig_fil[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sig_pre[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; k[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;F_pre[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(k[,,i])
  }
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 4.Aggregate results&lt;/span&gt;
  result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(a_pre,a_fil,sig_pre,sig_fil,y_pre,k,t,z)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(result) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state prediction&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state filtered&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state var prediction&amp;#34;&lt;/span&gt;, 
                     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state var filtered&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;observable prediction&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kalman gain&amp;#34;&lt;/span&gt;,
                     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;parameter of state eq&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;parameter of observable eq&amp;#34;&lt;/span&gt;)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt;(result)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;案外簡単に書けるもんですね。これを使って、Giannone et al (2008)をやり直してみます。データセットは前回記事と変わりません。&lt;/p&gt;
&lt;p&gt;以下、分析用の&lt;code&gt;R&lt;/code&gt;コードです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Giannone et. al. 2008 &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#------------------------&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(MASS)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(xts)

&lt;span style=&#34;color:#75715e&#34;&gt;# ファクターを計算&lt;/span&gt;
f &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
z &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scale&lt;/span&gt;(dataset1)
&lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z)){
  &lt;span style=&#34;color:#a6e22e&#34;&gt;eval&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;S_i &amp;lt;- z[i,]%*%t(z[i,])&amp;#34;&lt;/span&gt;,sep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)))
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(i&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
    S &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; S_i
  }else{
    S &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; S &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; S_i
  }
}
S &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z))&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;S
gamma &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;eigen&lt;/span&gt;(S)
D &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(gamma&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;values[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;f])
V &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; gamma&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;vectors[,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;f]
F_t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z),f)
&lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z)){
  &lt;span style=&#34;color:#a6e22e&#34;&gt;eval&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;F_t[&amp;#34;&lt;/span&gt;,i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,]&amp;lt;- z[&amp;#34;&lt;/span&gt;,i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,]%*%V&amp;#34;&lt;/span&gt;,sep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)))
}
lambda_hat &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; V
psi &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(S&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;V&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;D&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(V)))
R &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cov&lt;/span&gt;(z&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;z&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;V&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(V))))

a &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,f,f)
b &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,f,f)
&lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(t in &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z)){
  a &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; F_t[t,]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(F_t[t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;,])
  b &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; F_t[t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;,]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(F_t[t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;,])
}
b_inv &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;solve&lt;/span&gt;(b)
A_hat &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;b_inv

e &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;(f)
&lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(t in &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(F_t)){
  e &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; e &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; F_t[t,]&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;F_t[t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;,]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;A_hat
}
H &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(e)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;e
Q &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,f,f)
Q[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;f,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;f] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; H

p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;kronecker&lt;/span&gt;(A_hat,A_hat)))&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kronecker&lt;/span&gt;(A_hat,A_hat))

result1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;kalmanfiter&lt;/span&gt;(z,f,A_hat,lambda_hat,c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,R&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,Q&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Q,d&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,S&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;,h&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;R,a_int&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;F_t[1,],sig_int&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(p,f,f))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;プロットしてみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;gather&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(factor1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;result1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state filtered`[1,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dim&lt;/span&gt;(result1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state filtered`)[3]],factor2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;result1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state filtered`[2,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dim&lt;/span&gt;(result1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state filtered`)[3]],factor3&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;result1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state filtered`[3,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dim&lt;/span&gt;(result1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state filtered`)[3]],time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rownames&lt;/span&gt;(dataset1))),key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; factor,value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;time),&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;time,y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;value,colour&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;factor)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_line&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post3/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;giannoneの記事を書いた際は、元論文の&lt;code&gt;MATLAB&lt;/code&gt;コードを参考にRで書いたのですが、通常のカルマンフィルタとは観測変数の分散共分散行列の逆数の計算方法が違うらしくグラフの形が異なっています。まあでも、概形はほとんど同じですが（なので、ちゃんと動いているはず）。&lt;/p&gt;
&lt;h2 id=&#34;4-カルマンスムージング&#34;&gt;4. カルマンスムージング&lt;/h2&gt;
&lt;p&gt;カルマンフィルタの実装は以上で終了なのですが、誤差項の正規性を仮定すれば$T$期までの情報集合$\Omega_{T}$を用いて、$a_{i|i}, \Sigma_{i|i}(i = 1:T)$を$a_{i|T}, \Sigma_{i|T}(i = 1:T)$へ更新することができます。これをカルマンスムージングと呼びます。これを導出してみましょう。その準備として、以下のような$\alpha_{t|t}$と$\alpha_{t+1|t}$の混合分布を計算しておきます。&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} (\alpha_{t|t},\alpha_{t+1|t}) &amp;amp;=&amp;amp; N( \left( \begin{array}{cccc} E(\alpha_{t|t}) \\ E(\alpha_{t+1|t}) \end{array} \right), \left( \begin{array}{cccc} Var(\alpha_{t|t}), Cov(\alpha_{t|t},\alpha_{t+1|t}) \\ Cov(\alpha_{t+1|t},\alpha_{t|t}), Var(\alpha_{t+1|t}) \end{array} \right) ) \\ &amp;amp;=&amp;amp; N( \left( \begin{array}{cccc} a_{t|t} \\ a_{t+1|t} \end{array} \right), \left( \begin{array}{cccc} \Sigma_{t|t}, \Sigma_{t|t}T_{t}&#39; \\ T_{t}\Sigma_{t|t}, \Sigma_{t+1|t}  \end{array} \right) ) \end{eqnarray}&lt;/code&gt;
$$
ここで、$Cov(\alpha_{t|t},\alpha_{t+1|t})$は&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} Cov(\alpha_{t+1|t},\alpha_{t|t}) &amp;amp;=&amp;amp; Cov(T_{t}\alpha_{t-1} + c_{t} + R_{t}\eta_{t}, \alpha_{t|t}) \\ &amp;amp;=&amp;amp; T_{t}Cov(\alpha_{t|t},\alpha_{t|t}) + Cov(c_{t},\alpha_{t|t}) + Cov(R_{t}\eta_{t},\alpha_{t|t}) \\ &amp;amp;=&amp;amp; T_{t}Var(\alpha_{t|t}) = T_{t}\Sigma_{t|t} \end{eqnarray}&lt;/code&gt;
$$&lt;/p&gt;
&lt;p&gt;ここで、条件付き多変量正規分布は以下のような分布をしていることを思い出しましょう（
&lt;a href=&#34;https://mathwords.net/gaussjoken&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;参考&lt;/a&gt;
）。&lt;/p&gt;
&lt;p&gt;$$
(X_{1},X_{2}) = N(
\left(
\begin{array}{cccc}
\mu_{1} \&lt;br&gt;
\mu_{2}
\end{array}
\right),
\left(
\begin{array}{cccc}
\Sigma_{11}, \Sigma_{12} \&lt;br&gt;
\Sigma_{21}, \Sigma_{22}
\end{array}
\right)
) \&lt;br&gt;
$$
$$
(X_{1}|X_{2}=x_{2}) = N(\mu_{1} + \Sigma_{12}\Sigma_{22}^{-1}(x_{2}-\mu_{2}),\Sigma_{11}-\Sigma_{12}\Sigma_{22}^{-1}\Sigma_{21})
$$&lt;/p&gt;
&lt;p&gt;これを用いて、$(\alpha_{t|t}|\alpha_{t+1|t}=a_{t+1})$を計算してみましょう。&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} (\alpha_{t|t}|\alpha_{t+1|t}=a_{t+1}) &amp;amp;=&amp;amp; N(a_{t|t} + \Sigma_{t|t}T_{t}&#39;\Sigma_{t+1|t}^{-1}(a_{t+1}-a_{t+1|t}), \Sigma_{t|t}-\Sigma_{t|t}T_{t}&#39;\Sigma_{t+1|t}^{-1}T_{t}\Sigma_{t|t}) \\ &amp;amp;=&amp;amp;N(a_{t|t} + L_{t}(a_{t+1}-a_{t+1|t}), \Sigma_{t|t}-L_{t}\Sigma_{t+1|t}L_{t}&#39;) \end{eqnarray}&lt;/code&gt;
$$&lt;/p&gt;
&lt;p&gt;ただし、$a_{t+1}$の値は観測不可能なので、上式を用いて状態変数を更新することはできません。今、わかるのは$T$期における$a_{t+1|T}$の分布のみです。ということで、$a_{t+1}$を$a_{t+1|T}$で代用し、$\alpha_{t|T}$の分布を求めてみます。では、計算していきます。$\alpha_{t|T} = N(E(\alpha_{t|T}),Var(\alpha_{t|T}))$ですが、&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} E(\alpha_{t|T}) &amp;amp;=&amp;amp; E_{\alpha_{t+1|T}}(E(\alpha_{t|t}|\alpha_{t+1|t}=\alpha_{t+1|T})) \\ Var(\alpha_{t|T}) &amp;amp;=&amp;amp; E_{\alpha_{t+1|T}}(Var(\alpha_{t|t}|\alpha_{t+1|t} = \alpha_{t+1|T})) + Var_{\alpha_{t+1|T}}(E(\alpha_{t|t}|\alpha_{t+1|t}=\alpha_{t+1|T})) \end{eqnarray}&lt;/code&gt;
$$&lt;/p&gt;
&lt;p&gt;というように、$\alpha_{t+1|T}$も確率変数となるので、繰り返し期待値の法則と繰り返し分散の法則を使用します（&lt;a href=&#34;https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-041-probabilistic-systems-analysis-and-applied-probability-fall-2010/video-lectures/lecture-12-iterated-expectations-sum-of-a-random-number-of-random-variables/MIT6_041F10_L12.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;を参照）。&lt;/p&gt;
&lt;p&gt;*繰り返し期待値の法則
&lt;code&gt;\(E(x) = E_{Z}(E(X|Y=Z))\)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;*繰り返し分散の法則
&lt;code&gt;\(Var(X) = E_{Z}(Var(X|Y=Z))+Var_{Z}(E(X|Y=Z))\)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;よって、&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} E(\alpha_{t|T}) &amp;amp;=&amp;amp; E_{\alpha_{t+1|T}}(E(\alpha_{t|t}|\alpha_{t+1|t}=\alpha_{t+1|T})) \\ &amp;amp;=&amp;amp; a_{t|t} + L_{t}(a_{t+1|T}-a_{t+1|t}) \\ Var(\alpha_{t|T}) &amp;amp;=&amp;amp; E_{\alpha_{t+1|T}}(Var(\alpha_{t|t}|\alpha_{t+1|t}=\alpha_{t+1|T})) + Var_{\alpha_{t+1|T}}(E(\alpha_{t|t}|\alpha_{t+1|t}=\alpha_{t+1|T})) \\ &amp;amp;=&amp;amp; \Sigma_{t|t} - L_{t}\Sigma_{t+1|t}L_{t}&#39; + E( (a_{t|t} + L_{t}(\alpha_{t+1|T}-a_{t+1|t}) - a_{t|t} - L_{t}(a_{t+1|T}-a_{t+1|t}))(a_{t|t} + L_{t}(\alpha_{t+1|T}-a_{t+1|t}) - a_{t|t} - L_{t}(a_{t+1|T}-a_{t+1|t}))&#39;) \\ &amp;amp;=&amp;amp; \Sigma_{t|t} - L_{t}\Sigma_{t+1|t}L_{t}&#39; + E( (L_{t}(\alpha_{t+1|T}-a_{t+1|t}) - L_{t}(a_{t+1|T}-a_{t+1|t}))(L_{t}(\alpha_{t+1|T}-a_{t+1|t}) - L_{t}(a_{t+1|T}-a_{t+1|t}))&#39;) \\ &amp;amp;=&amp;amp; \Sigma_{t|t} - L_{t}\Sigma_{t+1|t}L_{t}&#39; + E( (L_{t}\alpha_{t+1|T} - L_{t}a_{t+1|T})(L_{t}\alpha_{t+1|T} - L_{t}(a_{t+1|T})&#39;) \\ &amp;amp;=&amp;amp; \Sigma_{t|t} - L_{t}\Sigma_{t+1|t}L_{t}&#39; + E( L_{t}(\alpha_{t+1|T} - a_{t+1|T})(\alpha_{t+1|T} - a_{t+1|T})&#39;L_{t}&#39;) \\ &amp;amp;=&amp;amp; \Sigma_{t|t} - L_{t}\Sigma_{t+1|t}L_{t}&#39; + L_{t}E( (\alpha_{t+1|T} - a_{t+1|T})(\alpha_{t+1|T} - a_{t+1|T})&#39;)L_{t}&#39; \\ &amp;amp;=&amp;amp; \Sigma_{t|t} - L_{t}\Sigma_{t+1|t}L_{t}&#39; + L_{t}\Sigma_{t+1|T}L_{t}&#39; \end{eqnarray}&lt;/code&gt;
$$&lt;/p&gt;
&lt;p&gt;となります。カルマンスムージングのアルゴリズムをまとめておきます。&lt;/p&gt;
&lt;p&gt;$$
&lt;code&gt;\begin{eqnarray} L_{t} &amp;amp;=&amp;amp; \Sigma_{t|t}T_{t}\Sigma_{t+1|t}^{-1} \\ a_{t|T} &amp;amp;=&amp;amp; a_{t|t} + L_{t}(a_{t+1|T} - a_{t+1|t}) \\ \Sigma_{t|T} &amp;amp;=&amp;amp; \Sigma_{t+1|t} + L_{t}(\Sigma_{t+1|T}-\Sigma_{t+1|t})L_{t}&#39; \end{eqnarray}&lt;/code&gt;
$$
カルマンスムージングの特徴的な点は後ろ向きに計算をしていく点です。つまり、$T$期から1期に向けて計算を行っていきます。$L_{t}$に関してはそもそもカルマンフィルタを回した時点で計算可能ですが、$\alpha_{t|T}$は$T$期までのデータが手元にないと計算できません。今、$T$期まで観測可能なデータが入手できたとしましょう。すると、２番目の方程式を用いて、$a_{T-1|T}$を計算します。ちなみに$a_{T|T}$はカルマンフィルタを回した時点ですでに手に入っているので、計算する必要はありません。同時に、３番目の式を用いて$\Sigma_{T-1|T}$を計算します。そして、$a_{T-1|T},\Sigma_{T-1|T}$と$L_{T-1}$を用いて$a_{T-2|T},\Sigma_{T-2|T}$を計算、というように1期に向けて後ろ向きに計算をしていくのです。さきほど、遷移方程式の誤差項$\eta_{t}$と定数項$c_{t}$がなく、遷移方程式のパラメータが単位行列のカルマンフィルタは逐次最小自乗法と一致すると書きましたが、カルマンスムージングの場合は$T$期までのサンプルで&lt;code&gt;OLS&lt;/code&gt;を行った結果と一致します。
&lt;code&gt;R&lt;/code&gt;で実装してみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;kalmansmoothing &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(filter){
  &lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Implemention of Kalman smoothing&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   t - parameter of endogenous variable in state equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   z - parameter of endogenous variable in observable equation&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   a_pre - prediction of state&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   a_fil - filtered value of state&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   sig_pre - prediction of var of state&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#   sig_fil - filtered value of state&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------&lt;/span&gt;
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(MASS)
  
  &lt;span style=&#34;color:#75715e&#34;&gt;# 1.Define variable&lt;/span&gt;
  a_pre &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; filter&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state prediction`
  a_fil &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; filter&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state filtered`
  sig_pre &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; filter&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state var prediction`
  sig_fil &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; filter&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`state var filtered`
  t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; filter&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`parameter of state eq`
  C &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dim&lt;/span&gt;(sig_pre))
  a_sm &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dim&lt;/span&gt;(a_pre))
  sig_sm &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dim&lt;/span&gt;(sig_pre))
  N &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dim&lt;/span&gt;(C)[3]
  a_sm[,,N] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; a_fil[,,N]
  sig_sm[,,N] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sig_fil[,,N]
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in N&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;){
    C[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sig_fil[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(t)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(sig_pre[,,i])
    a_sm[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; a_fil[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; C[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;(a_sm[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;a_pre[,,i])
    sig_sm[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sig_fil[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; C[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;(sig_sm[,,i]&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;sig_pre[,,i])&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(C[,,i&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;])
  }
  
  
  result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(a_sm,sig_sm,C)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt;(result) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state smoothed&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state var smoothed&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt;(result)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;先ほどのコードの続きで&lt;code&gt;R&lt;/code&gt;コードを書いてみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;result2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;kalmansmoothing&lt;/span&gt;(result1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;かなりシンプルですね。ちなみにグラフにしましたが、１個目とほぼ変わりませんでした。とりあえず、今日はここまで。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gianonne et. al. (2008)のマルチファクターモデルで四半期GDPを予想してみた</title>
      <link>/post/post6/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      <guid>/post/post6/</guid>
      <description>&lt;p&gt;おはこんばんにちは。
前回、統計ダッシュボードからAPI接続で統計データを落とすという記事を投稿しました。
今回はそのデータを、Gianonne et. al. (2008)のマルチファクターモデルにかけ、四半期GDPの予測を行いたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;1-gianonne-et-al-2008版マルチファクターモデル&#34;&gt;1. Gianonne et. al. (2008)版マルチファクターモデル&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://dept.ku.edu/~empirics/Courses/Econ844/papers/Nowcasting%20GDP.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;元論文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前回の投稿でも書きましたが、この論文はGiannoneらが2008年にパブリッシュした論文です(JME)。彼らはアメリカの経済指標を用いて四半期GDPを日次で推計し、予測指標としての有用性を示しました。指標間の連動性(colinearity)を利用して、多数ある経済指標を2つのファクターに圧縮し、そのファクターを四半期GDPにフィッティングさせることによって高い予測性を実現しています。
まず、このモデルについてご紹介します。このモデルでは2段階推計を行います。まず主成分分析により経済統計を統計間の相関が0となるファクターへ変換します（&lt;a href=&#34;https://datachemeng.com/principalcomponentanalysis/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;参考&lt;/a&gt;）。そして、その後の状態空間モデルでの推計で必要になるパラメータを&lt;code&gt;OLS&lt;/code&gt;推計し、そのパラメータを使用してカルマンフィルタ＆カルマンスムーザーを回し、ファクターを推計しています。では、具体的な説明に移ります。
統計データを$x_{i,t|v_j}$と定義します。ここで、$i=1,&amp;hellip;,n$は経済統計を表し（つまり$n$が全統計数）、$t=1,&amp;hellip;,T_{iv_j}$は統計$i$のサンプル期間の時点を表しています（つまり、$T_{iv_j}$は統計$i$のその時点での最新データ日付を表す）。また、$v_j$はある時点$j$（2005年など）で得られる情報集合（vintage）を表しています。統計データ$x_{i,t|v_j}$は以下のようにファクター$f_{r,t}$の線形結合で表すことができます（ここで$r$はファクターの数を表す）。&lt;/p&gt;
&lt;p&gt;$$
x_{i,t|v_j} = \mu_i + \lambda_{i1}f_{1,t} + &amp;hellip; + \lambda_{ir}f_{r,t} + \xi_{i,t|v_j} \tag{1}
$$&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\(\mu\_i\)&lt;/code&gt;は定数項、$\lambda_{ir}$はファクターローディング、$\xi_{i,t|v_j}$はホワイトノイズの誤差項を表しています。これを行列形式で書くと以下のようになります。&lt;/p&gt;
&lt;p&gt;$$
x_{t|v_j}  = \mu + \Lambda F_t + \xi_{t|v_j} = \mu + \chi_t + \xi_{t|v_j} \tag{2}
$$&lt;/p&gt;
&lt;p&gt;ここで、$x_{t|v_j} = (x_{1,t|v_j}, &amp;hellip;, x_{n,t|v_j} )^{\mathrm{T}}$、$\xi_{t|v_j}=(\xi_{1,t|v_j}, &amp;hellip;, \xi_{n,t|v_j})^{\mathrm{T}}$、$F_t = (f_{1,t}, &amp;hellip;, f_{r,t})^{\mathrm{T}}$であり、$\Lambda$は各要素が$ \lambda_{ij}$の$n\times r$行列のファクターローディングを表しています。また、$\chi_t = \Lambda F_t$です。よって、ファクター$ F_t$を推定するためには、データ$x_{i,t|v_j}$を以下のように基準化したうえで、分散共分散行列を計算し、その固有値問題を解けばよいという事になります。&lt;/p&gt;
&lt;p&gt;$$
\displaystyle z_{it} = \frac{1}{\hat{\sigma}_i}(x_{it} - \hat{\mu}_{it}) \tag{3}
$$&lt;/p&gt;
&lt;p&gt;ここで、$\displaystyle \hat{\mu}&lt;em&gt;{it} = 1/T \sum&lt;/em&gt;{t=1}^T x_{it}$であり、$\hat{\sigma}_i = \sqrt{1/T \sum_{t=1}^T (x_{it}-\hat{\mu_{it}})^2}$です（ここで$T$はサンプル期間）。分散共分散行列$S$を以下のように定義します。&lt;/p&gt;
&lt;p&gt;$$
\displaystyle S = \frac{1}{T} \sum_{t=1}^T z_t z_t^{\mathrm{T}} \tag{4}
$$
次に、$S$のうち、固有値を大きい順に$r$個取り出し、それを要素にした$ r \times r$対角行列を$ D$、それに対応する固有ベクトルを$n \times r$行列にしたものを$ V$と定義します。ファクター$ \tilde{F}_t$は以下のように推計できます。&lt;/p&gt;
&lt;p&gt;$$
\tilde{F}_t = V^{\mathrm{T}} z_t \tag{5}
$$
ファクターローディング$\Lambda$と誤差項の共分散行列$\Psi = \mathop{\mathbb{E}} [\xi_t\xi^{\mathrm{T}}_t]$は$\tilde{F}_t$を$z_t$に回帰することで推計します。&lt;/p&gt;
&lt;p&gt;$$
\displaystyle \hat{\Lambda} = \sum_{t=1}^T z_t \tilde{F}^{\mathrm{T}}_t (\sum_{t=1}^T\tilde{F}_t\tilde{F}^{\mathrm{T}}_t)^{-1} = V \tag{6}
$$&lt;/p&gt;
&lt;p&gt;$$
\hat{\Psi} = diag(S - VDV) \tag{7}
$$&lt;/p&gt;
&lt;p&gt;注意して頂きたいのは、ここで推計した$\tilde{F}_t$は、以下の状態空間モデルでの推計に必要なパラメータを計算するための一時的な推計値であるという事です（２段階推計の１段階目という事）。&lt;/p&gt;
&lt;p&gt;$$
x_{t|v_j}  = \mu + \Lambda F_t + \xi_{t|v_j} = \mu + \chi_t + \xi_{t|v_j} \tag{2}
$$&lt;/p&gt;
&lt;p&gt;$$
F_t = AF_{t-1} + u_t \tag{8}
$$
ここで、$u_t$は平均0、分散$H$のホワイトノイズです。再掲している(2)式が観測方程式、(8)式が遷移方程式となっています。推定すべきパラメータは$\Lambda$、$\Psi$以外に$A$と$H$があります（$\mu=0$としています）。$A$は主成分分析により計算した$\tilde{F}_t$を&lt;code&gt;VAR(1)&lt;/code&gt;にかけることで推定します。&lt;/p&gt;
&lt;p&gt;$$
\hat{A} = \sum_{t=2}^T\tilde{F}_t\tilde{F}_{t-1}^{\mathrm{T}} (\sum_{t=2}^T\tilde{F}_{t-1}\tilde{F}_{t-1}^{\mathrm{T}})^{-1} \tag{9}
$$
&lt;code&gt;\(H\)&lt;/code&gt;は今推計した&lt;code&gt;VAR(1)&lt;/code&gt;の誤差項の共分散行列から計算します。これで必要なパラメータの推定が終わりました。次にカルマンフィルタを回します。カルマンフィルタに関しては&lt;a href=&#34;https://qiita.com/MoriKen/items/0c80ef75749977767b43&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;を参考にしてください。わかりやすいです。これで最終的に$\hat{F}_{t|v_j}$の推計ができるわけです。
GDPがこれらのファクターで説明可能であり（つまり固有の変動がない）、GDPと月次経済指標がjointly normalであれば以下のような単純なOLS推計でGDPを予測することができます。もちろん月次経済指標の方が早く公表されるので、内生性の問題はないと考えられます。&lt;/p&gt;
&lt;p&gt;$$
\hat{y}&lt;em&gt;{3k|v_j} = \alpha + \beta^{\mathrm{T}} \hat{F}&lt;/em&gt;{3k|v_j} \tag{10}
$$&lt;/p&gt;
&lt;p&gt;ここで、$3k$は四半期の最終月を示しています（3月、6月など）$\hat{y}&lt;em&gt;{3k|v_j}$は$j$時点で得られる情報集合$v_j$での四半期GDPを表しており、$\hat{F}&lt;/em&gt;{3k|v_j}$はその時点で推定したファクターを表しています（四半期最終月の値だけを使用している点に注意）。これで推計方法の説明は終わりです。&lt;/p&gt;
&lt;h2 id=&#34;2-rで実装する&#34;&gt;2. Rで実装する&lt;/h2&gt;
&lt;p&gt;では実装します。前回記事で得られたデータ（dataset）が読み込まれている状態からスタートします。まず、主成分分析でファクターを計算します。なお、前回の記事で3ファクターの累積寄与度が80%を超えたため、今回もファクター数は3にしています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Giannone et. al. 2008 &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#------------------------&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(xts)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(MASS)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)

&lt;span style=&#34;color:#75715e&#34;&gt;# 主成分分析でファクターを計算&lt;/span&gt;
f &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# ファクター数を定義&lt;/span&gt;
a &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;which&lt;/span&gt;(dataset1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;publication &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2012-04-01&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# サンプル開始期間を2012年に設定。&lt;/span&gt;
dataset2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dataset1[a&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(dataset1),]
&lt;span style=&#34;color:#a6e22e&#34;&gt;rownames&lt;/span&gt;(dataset2) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dataset2&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;publication
dataset2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dataset2[,&lt;span style=&#34;color:#ae81ff&#34;&gt;-2&lt;/span&gt;]
z &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scale&lt;/span&gt;(dataset2) &lt;span style=&#34;color:#75715e&#34;&gt;# zは基準化されたサンプルデータ&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z)){
  &lt;span style=&#34;color:#a6e22e&#34;&gt;eval&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;S_i &amp;lt;- z[i,]%*%t(z[i,])&amp;#34;&lt;/span&gt;,sep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)))
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(i&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
    S &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; S_i
  }else{
    S &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; S &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; S_i
  }
}
S &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z))&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;S &lt;span style=&#34;color:#75715e&#34;&gt;# 分散共分散行列を計算 (4)式&lt;/span&gt;
gamma &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;eigen&lt;/span&gt;(S) 
D &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(gamma&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;values[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;f])
V &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; gamma&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;vectors[,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;f]
F_t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z),f)
&lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z)){
  &lt;span style=&#34;color:#a6e22e&#34;&gt;eval&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;paste&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;F_t[&amp;#34;&lt;/span&gt;,i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,]&amp;lt;- z[&amp;#34;&lt;/span&gt;,i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,]%*%V&amp;#34;&lt;/span&gt;,sep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;))) &lt;span style=&#34;color:#75715e&#34;&gt;# (5)式を実行&lt;/span&gt;
}
F_t.xts &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xts&lt;/span&gt;(F_t,order.by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;row.names&lt;/span&gt;(z)))
&lt;span style=&#34;color:#a6e22e&#34;&gt;plot.zoo&lt;/span&gt;(F_t.xts,col &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yellow&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;purple&amp;#34;&lt;/span&gt;),plot.type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;single&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 時系列プロット&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post6/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;lambda_hat &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; V
psi &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(S&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;V&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;D&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(V)) &lt;span style=&#34;color:#75715e&#34;&gt;# (7)式&lt;/span&gt;
R &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cov&lt;/span&gt;(z&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;z&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;V&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(V)))) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;推計したファクター$\tilde{F}_t$の時系列プロットは以下のようになり、前回&lt;code&gt;princomp&lt;/code&gt;関数で計算したファクターと完全一致します（じゃあ&lt;code&gt;princomp&lt;/code&gt;でいいやんと思われるかもしれませんが実装しないと勉強になりませんので）。&lt;/p&gt;
&lt;p&gt;次に、&lt;code&gt;VAR(1)&lt;/code&gt;を推計し、パラメータを取り出します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# VAR(1)モデルを推計&lt;/span&gt;
a &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,f,f)
b &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,f,f)
&lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(t in &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z)){
  a &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; F_t[t,]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(F_t[t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;,])
  b &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; F_t[t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;,]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(F_t[t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;,])
}
b_inv &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;solve&lt;/span&gt;(b)
A_hat &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;b_inv &lt;span style=&#34;color:#75715e&#34;&gt;# (9)式&lt;/span&gt;

e &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;numeric&lt;/span&gt;(f)
&lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(t in &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(F_t)){
  e &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; e &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; F_t[t,]&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;F_t[t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;,]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;A_hat
}
H &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(e)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;e
Q &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,f,f)
Q[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;f,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;f] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; H
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;VAR(1)&lt;/code&gt;に関しても&lt;code&gt;var&lt;/code&gt;関数とパラメータの数値が一致することを確認済みです。いよいよカルマンフィルタを実行します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# カルマンフィルタを実行&lt;/span&gt;
RR &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ncol&lt;/span&gt;(z),&lt;span style=&#34;color:#a6e22e&#34;&gt;ncol&lt;/span&gt;(z),&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z))) &lt;span style=&#34;color:#75715e&#34;&gt;# RRは観測値の分散行列（相関はないと仮定）&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(z)){
  miss &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is.na&lt;/span&gt;(z[i,])
  R_temp &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(R)
  R_temp[miss] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1e+32&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 欠損値の分散は無限大にする&lt;/span&gt;
  RR[,,i] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(R_temp)
}
zz &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; z; zz&lt;span style=&#34;color:#a6e22e&#34;&gt;[is.na&lt;/span&gt;(z)] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 欠損値（NA）に0を代入（計算結果にはほとんど影響しない）。&lt;/span&gt;
a_t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(zz),f) &lt;span style=&#34;color:#75715e&#34;&gt;# a_tは状態変数の予測値&lt;/span&gt;
a_tt &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(zz),f) &lt;span style=&#34;color:#75715e&#34;&gt;# a_ttは状態変数の更新後の値&lt;/span&gt;
a_tt[1,] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; F_t[1,] &lt;span style=&#34;color:#75715e&#34;&gt;# 状態変数の初期値には主成分分析で推計したファクターを使用&lt;/span&gt;
sigma_t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(f,f,&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(zz))) &lt;span style=&#34;color:#75715e&#34;&gt;# sigma_tは状態変数の分散の予測値&lt;/span&gt;
sigma_tt &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(f,f,&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(zz))) &lt;span style=&#34;color:#75715e&#34;&gt;# sigma_tは状態変数の分散の更新値&lt;/span&gt;
p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;kronecker&lt;/span&gt;(A_hat,A_hat)))&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kronecker&lt;/span&gt;(A_hat,A_hat))
sigma_tt[,,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(p,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 状態変数の分散の初期値はVAR(1)の推計値から計算&lt;/span&gt;
y_t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;matrix&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(zz),&lt;span style=&#34;color:#a6e22e&#34;&gt;ncol&lt;/span&gt;(zz)) &lt;span style=&#34;color:#75715e&#34;&gt;# y_tは観測値の予測値&lt;/span&gt;
K_t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(f,&lt;span style=&#34;color:#a6e22e&#34;&gt;ncol&lt;/span&gt;(zz),&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(zz))) &lt;span style=&#34;color:#75715e&#34;&gt;# K_tはカルマンゲイン&lt;/span&gt;
data.m &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.matrix&lt;/span&gt;(dataset2)
&lt;span style=&#34;color:#75715e&#34;&gt;# カルマンフィルタを実行&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(t in &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(zz)){
  a_t[t,] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; A_hat&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;a_tt[t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;,]
  sigma_t[,,t] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; A_hat&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;sigma_tt[,,t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(A_hat) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Q
  y_t[t,] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.vector&lt;/span&gt;(V&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;a_t[t,])
  S_t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; V&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;sigma_tt[,,t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;RR[,,t]
  GG &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(RR[,,t]))&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;V
  Sinv &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(RR[,,t])) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(RR[,,t]))&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;V&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ginv&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(A_hat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;sigma_t[,,t]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;GG)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;sigma_t[,,t]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;diag&lt;/span&gt;(RR[,,t]))
  K_t[,,t] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sigma_t[,,t]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;Sinv
  a_tt[t,] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; a_t[t,] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; K_t[,,t]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;(zz[t,]&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y_t[t,])
  sigma_tt[,,t] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; sigma_t[,,t] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; K_t[,,t]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;V&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;sigma_tt[,,t&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(V)&lt;span style=&#34;color:#f92672&#34;&gt;%*%&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(K_t[,,t])
  }

F.xts &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xts&lt;/span&gt;(a_tt,order.by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rownames&lt;/span&gt;(data.m)))
&lt;span style=&#34;color:#a6e22e&#34;&gt;plot.zoo&lt;/span&gt;(F.xts, col &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yellow&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;purple&amp;#34;&lt;/span&gt;),plot.type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;single&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 得られた推計値を時系列プロット&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post6/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;カルマンフィルタにより推計したファクターの時系列プロットが以下です。遷移方程式がAR(1)だったからかかなり平準化された値となっています。&lt;/p&gt;
&lt;p&gt;では、この得られたファクターをOLSにかけます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 得られたファクターとGDPをOLSにかける&lt;/span&gt;
F_q &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.data.frame&lt;/span&gt;(a_tt&lt;span style=&#34;color:#a6e22e&#34;&gt;[seq&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(a_tt),&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),]) &lt;span style=&#34;color:#75715e&#34;&gt;# 四半期の終わり月の値だけを引っ張ってくる &lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(F_q) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;factor1&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;factor2&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;factor3&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(GDP) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;publication&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GDP&amp;#34;&lt;/span&gt;)
t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;which&lt;/span&gt;(GDP&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;publication&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2012-04-01&amp;#34;&lt;/span&gt;)
t2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;which&lt;/span&gt;(GDP&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;publication&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2015-01-01&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 2012-2q~2015-1qまでのデータが学習データ、それ以降がテストデータ&lt;/span&gt;
GDP_q &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; GDP[t&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(GDP),]
dataset.q &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbind&lt;/span&gt;(GDP_q[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(t2&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t),],F_q[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(t2&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t),])
test &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(GDP&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;factor1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; factor2 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; factor3,data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dataset.q)
&lt;span style=&#34;color:#a6e22e&#34;&gt;summary&lt;/span&gt;(test)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = GDP ~ factor1 + factor2 + factor3, data = dataset.q)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -1079.4  -779.4  -265.2   905.9  1280.0 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) 129440.3     3784.8  34.200 4.74e-09 ***
## factor1       -776.3      846.0  -0.918    0.389    
## factor2       -699.0     2358.8  -0.296    0.776    
## factor3        552.3     1588.2   0.348    0.738    
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
## 
## Residual standard error: 1109 on 7 degrees of freedom
## Multiple R-squared:  0.6667,	Adjusted R-squared:  0.5239 
## F-statistic: 4.668 on 3 and 7 DF,  p-value: 0.04279
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;out_of_sample &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbind&lt;/span&gt;(GDP_q&lt;span style=&#34;color:#a6e22e&#34;&gt;[&lt;/span&gt;(t2&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(GDP_q),],F_q&lt;span style=&#34;color:#a6e22e&#34;&gt;[&lt;/span&gt;(t2&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(GDP_q),]) &lt;span style=&#34;color:#75715e&#34;&gt;# out of sampleのデータセットを作成&lt;/span&gt;
test.pred &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;predict&lt;/span&gt;(test, out_of_sample, interval&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prediction&amp;#34;&lt;/span&gt;)
pred.GDP.xts &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xts&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cbind&lt;/span&gt;(test.pred[,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],out_of_sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;GDP),order.by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; out_of_sample&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;publication)
&lt;span style=&#34;color:#a6e22e&#34;&gt;plot.zoo&lt;/span&gt;(pred.GDP.xts,col &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;),plot.type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;single&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 予測値と実績値を時系列プロット&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post6/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;OLSの推計結果はfactor1（赤）とfactor2（青）が有意との結果。前回の投稿でも言及したように、factor1（赤）はリスクセンチメントを表していそうなので、係数の符号が負であることは頷ける。ただし、factor2（青）も符号が負なのではなぜなのか…。このファクターは生産年齢人口など経済の潜在能力を表していると思っていたのに。かなり謎。まあとりあえず予測に移りましょう。このモデルを使用したGDPの予測値と実績値の推移はいかのようになりました。直近の精度は悪くない？&lt;/p&gt;
&lt;p&gt;というか、これ完全に単位根の問題を無視してOLSしてしまっているな。ファクターもGDPも完全に単位根を持つけど念のため単位根検定をかけてみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tseries)

&lt;span style=&#34;color:#a6e22e&#34;&gt;adf.test&lt;/span&gt;(F_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;factor1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## 	Augmented Dickey-Fuller Test
## 
## data:  F_q$factor1
## Dickey-Fuller = -2.832, Lag order = 2, p-value = 0.2554
## alternative hypothesis: stationary
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adf.test&lt;/span&gt;(F_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;factor2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## 	Augmented Dickey-Fuller Test
## 
## data:  F_q$factor2
## Dickey-Fuller = -2.5433, Lag order = 2, p-value = 0.3654
## alternative hypothesis: stationary
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adf.test&lt;/span&gt;(F_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;factor3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## 	Augmented Dickey-Fuller Test
## 
## data:  F_q$factor3
## Dickey-Fuller = -2.5795, Lag order = 2, p-value = 0.3516
## alternative hypothesis: stationary
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adf.test&lt;/span&gt;(GDP_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;GDP)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## 	Augmented Dickey-Fuller Test
## 
## data:  GDP_q$GDP
## Dickey-Fuller = -0.25589, Lag order = 3, p-value = 0.9867
## alternative hypothesis: stationary
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;はい。全部単位根もってました…。階差をとったのち、単位根検定を行います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;GDP_q &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; GDP_q &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(growth.rate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(GDP&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lag&lt;/span&gt;(GDP)&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
F_q &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; F_q &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(f1.growth.rate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(factor1&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lag&lt;/span&gt;(factor1)&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,
                      f2.growth.rate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(factor2&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lag&lt;/span&gt;(factor2)&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,
                      f3.growth.rate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(factor3&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lag&lt;/span&gt;(factor3)&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;adf.test&lt;/span&gt;(GDP_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;growth.rate[2&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(GDP_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;growth.rate)])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## 	Augmented Dickey-Fuller Test
## 
## data:  GDP_q$growth.rate[2:NROW(GDP_q$growth.rate)]
## Dickey-Fuller = -2.5299, Lag order = 3, p-value = 0.368
## alternative hypothesis: stationary
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adf.test&lt;/span&gt;(F_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;f1.growth.rate[2&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(F_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;f1.growth.rate)])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## 	Augmented Dickey-Fuller Test
## 
## data:  F_q$f1.growth.rate[2:NROW(F_q$f1.growth.rate)]
## Dickey-Fuller = -2.5185, Lag order = 2, p-value = 0.3748
## alternative hypothesis: stationary
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adf.test&lt;/span&gt;(F_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;f2.growth.rate[2&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(F_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;f2.growth.rate)])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## 	Augmented Dickey-Fuller Test
## 
## data:  F_q$f2.growth.rate[2:NROW(F_q$f2.growth.rate)]
## Dickey-Fuller = -2.498, Lag order = 2, p-value = 0.3827
## alternative hypothesis: stationary
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adf.test&lt;/span&gt;(F_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;f3.growth.rate[2&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NROW&lt;/span&gt;(F_q&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;f3.growth.rate)])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## 	Augmented Dickey-Fuller Test
## 
## data:  F_q$f3.growth.rate[2:NROW(F_q$f3.growth.rate)]
## Dickey-Fuller = -3.3479, Lag order = 2, p-value = 0.08501
## alternative hypothesis: stationary
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;factor1だけは5%有意水準で帰無仮説を棄却できない…。困りました。有意水準を10%ということにして、とりあえず階差で&lt;code&gt;OLS&lt;/code&gt;してみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dataset.q &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbind&lt;/span&gt;(GDP_q[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(t2&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t),],F_q[1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(t2&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t),])
&lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(dataset.q) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;publication&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GDP&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;growth.rate&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;factor1&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;factor2&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;factor3&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f1.growth.rate&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f2.growth.rate&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f3.growth.rate&amp;#34;&lt;/span&gt;)
test1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(growth.rate&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;f1.growth.rate &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; f2.growth.rate &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; f3.growth.rate,data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dataset.q)
&lt;span style=&#34;color:#a6e22e&#34;&gt;summary&lt;/span&gt;(test1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = growth.rate ~ f1.growth.rate + f2.growth.rate + 
##     f3.growth.rate, data = dataset.q)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -1.1822 -0.2944 -0.1403  0.3495  1.2200 
## 
## Coefficients:
##                  Estimate Std. Error t value Pr(&amp;gt;|t|)
## (Intercept)    -0.1900410  0.3956316  -0.480    0.648
## f1.growth.rate -0.0138647  0.0122615  -1.131    0.301
## f2.growth.rate -0.0044379  0.0036015  -1.232    0.264
## f3.growth.rate -0.0007179  0.0006337  -1.133    0.300
## 
## Residual standard error: 0.7832 on 6 degrees of freedom
##   ( 1 個の観測値が欠損のため削除されました )
## Multiple R-squared:  0.3447,	Adjusted R-squared:  0.01705 
## F-statistic: 1.052 on 3 and 6 DF,  p-value: 0.4357
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;推計結果がわるくなりました…。予測値を計算し、実績値とプロットしてみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;out_of_sample1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cbind&lt;/span&gt;(GDP_q&lt;span style=&#34;color:#a6e22e&#34;&gt;[&lt;/span&gt;(t2&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(GDP_q),],F_q&lt;span style=&#34;color:#a6e22e&#34;&gt;[&lt;/span&gt;(t2&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t&lt;span style=&#34;color:#ae81ff&#34;&gt;+1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nrow&lt;/span&gt;(GDP_q),]) &lt;span style=&#34;color:#75715e&#34;&gt;# out of sampleのデータセットを作成&lt;/span&gt;
test1.pred &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;predict&lt;/span&gt;(test1, out_of_sample1, interval&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prediction&amp;#34;&lt;/span&gt;)
pred1.GDP.xts &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xts&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cbind&lt;/span&gt;(test1.pred[,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],out_of_sample1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;growth.rate),order.by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; out_of_sample1&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;publication)
&lt;span style=&#34;color:#a6e22e&#34;&gt;plot.zoo&lt;/span&gt;(pred1.GDP.xts,col &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;),plot.type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;single&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 予測値と実績値を時系列プロット&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../post/post6/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;ん～、これはやり直しですね。今日はここまでで勘弁してください…。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
