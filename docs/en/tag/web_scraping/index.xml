<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web_scraping | 京都の電子部品メーカーで働く社会人が研究に没頭するブログ</title>
    <link>/en/tag/web_scraping/</link>
      <atom:link href="/en/tag/web_scraping/index.xml" rel="self" type="application/rss+xml" />
    <description>Web_scraping</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 19 Oct 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Web_scraping</title>
      <link>/en/tag/web_scraping/</link>
    </image>
    
    <item>
      <title>Get macro panel data from OECD.org via API</title>
      <link>/en/post/post22/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/en/post/post22/</guid>
      <description>&lt;p&gt;Hi. There are several ways to collect macroeconomic data, but collecting data for each country can be a challenge. However, you can automate the tedious process of collecting data from the OECD via API. Today, I will introduce the method.&lt;/p&gt;
&lt;h2 id=&#34;1oecdstat-web-api&#34;&gt;1.OECD.Stat Web API&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;OECD.org&lt;/code&gt; offers a service called &lt;a href=&#34;https://stats.oecd.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OECD.Stat&lt;/a&gt;, which provides a variety of economic data for OECD and certain non-member countries. You can also download the csv data manually by going to the website. However, you only need to use &lt;code&gt;Python&lt;/code&gt; or &lt;code&gt;R&lt;/code&gt; to do this since OECD provides a web API.&lt;/p&gt;
&lt;Specifics of the OECD implementation&gt;
&lt;p&gt;Below is a list of implementation details for specific OECD REST SDMX interfaces at this time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Only anonymous queries are supported and there is no authentication.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each response is limited to 1,000,000 observations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The maximum length of the request URL is 1000 characters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cross-origin requests are supported in the &lt;code&gt;CORS&lt;/code&gt; header (see &lt;a href=&#34;http://www.html5rocks.com/en/tutorials/cors/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; for more information about &lt;code&gt;CORS&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Errors are not returned in the results, but HTTP status codes and messages are set according to the Web Service Guidelines.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a nonexistent dataset is requested, &lt;code&gt;401 Unauthorized&lt;/code&gt; is returned.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The source (or Agency ID) parameter of the &lt;code&gt;REST&lt;/code&gt; query is required, but the &lt;code&gt;ALL&lt;/code&gt; keyword is supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Versioning is not supported: the latest implementation version is always used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sorting of data is not supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;lastNObservations&lt;/code&gt; parameter is not supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Even when &lt;code&gt;dimensionAtObservation=AllDimensions&lt;/code&gt; is used, the observations follow a chronological (or import-specific) order.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Searching for reference metadata is not supported at this time.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2pandasdmx&#34;&gt;2.pandasdmx&lt;/h2&gt;
&lt;p&gt;The Web API is provided in the form of &lt;code&gt;sdmx-json&lt;/code&gt;. There is a useful package for using it in &lt;code&gt;Python&lt;/code&gt;, which is called &lt;code&gt;pandasdmx&lt;/code&gt;. Here&amp;rsquo;s how to download the data.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Import &lt;code&gt;pandasdmx&lt;/code&gt;, pass &lt;code&gt;OECD&lt;/code&gt; to &lt;code&gt;Request&lt;/code&gt; method as an argument and create &lt;code&gt;api.Request&lt;/code&gt; object.&lt;/li&gt;
&lt;li&gt;Pass the query condition to the data method of the &lt;code&gt;api.Request&lt;/code&gt; object, and download the data of &lt;code&gt;sdmx-json&lt;/code&gt; format from OECD.org.&lt;/li&gt;
&lt;li&gt;Format the downloaded data into a &lt;code&gt;pandas&lt;/code&gt; data frame with the method &lt;code&gt;to_pandas()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3implementation&#34;&gt;3.implementation&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s do this in practice. What we&amp;rsquo;ll get is the &lt;code&gt;Revisions Analysis Dataset -- Infra-annual Economic Indicators&lt;/code&gt;. We have access to all data, including revisions to the Monthly Ecnomic Indicator (MEI), one of the OECD datasets, so we can check key economic variables &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; from preliminary data at initial release to revised, finalized data. The dataset provides a snapshot of major economic indicators, at monthly intervals beginning in February 1999, that were previously available. In other words, the dataset allows us to build predictive models based on the data available at each point in time. The most recent data is useful, but it is preliminary and therefore subject to uncertainty. The problem is that this situation cannot be replicated when backtesting, and the analysis is often done under a better environment than the actual operation. This is the so-called &lt;code&gt;Jagged Edge&lt;/code&gt; problem. I think this dataset is very useful because it can reproduce the actual operation situation. This time, you will get the following data items.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Indicators&lt;/th&gt;
&lt;th&gt;Statistical ID&lt;/th&gt;
&lt;th&gt;Frequency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Gross Domestic Product&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;Quarterly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Index of Industrial Production&lt;/td&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;Monthly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Retail Trade Volume&lt;/td&gt;
&lt;td&gt;202&lt;/td&gt;
&lt;td&gt;Monthly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Monetary Aggregates&lt;/td&gt;
&lt;td&gt;601&lt;/td&gt;
&lt;td&gt;Monthly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;International Trade in Goods&lt;/td&gt;
&lt;td&gt;702+703&lt;/td&gt;
&lt;td&gt;Monthly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Balance of Payments&lt;/td&gt;
&lt;td&gt;701&lt;/td&gt;
&lt;td&gt;Quarterly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Employment&lt;/td&gt;
&lt;td&gt;502&lt;/td&gt;
&lt;td&gt;Monthly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Harmonised Unemployment Rates&lt;/td&gt;
&lt;td&gt;501&lt;/td&gt;
&lt;td&gt;Monthly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hourly Earnings in Manufacturing&lt;/td&gt;
&lt;td&gt;503&lt;/td&gt;
&lt;td&gt;Monthly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Early Estimates of Unit Labor Cost&lt;/td&gt;
&lt;td&gt;504&lt;/td&gt;
&lt;td&gt;Quarterly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Production of Construction&lt;/td&gt;
&lt;td&gt;203&lt;/td&gt;
&lt;td&gt;Monthly&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;First, we define the functions. The arguments are database ID, other IDs (country IDs and statistical IDs), data acquisition start point and end point.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandasdmx &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sdmx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## C:\Users\aashi\ANACON~1\lib\site-packages\pandasdmx\remote.py:13: RuntimeWarning: optional dependency requests_cache is not installed; cache options to Session() have no effect
##   RuntimeWarning,
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;oecd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sdmx&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Request(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OECD&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resp_OECD&lt;/span&gt;(dsname,dimensions,start,end):
    dim_args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(d) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; d &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; dimensions]
    dim_str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(dim_args)
    resp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; oecd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;data(resource_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dsname, key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dim_str &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/all?startTime=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; start &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;amp;endTime=&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; end)
    df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; resp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_pandas()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reset_index()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;(df)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Specify the dimension from which the data will be obtained. Below, (1) country, (2) statistical items, (3) time of acquisition, and (4) frequency are specified with a tuple.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dimensions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;USA&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;JPN&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GBR&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FRA&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEU&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ITA&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CAN&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NLD&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BEL&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SWE&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CHE&amp;#39;&lt;/span&gt;),(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;201&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;202&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;601&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;702&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;703&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;701&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;502&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;503&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;504&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;203&amp;#39;&lt;/span&gt;),(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202001&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202002&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202003&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202004&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202005&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202006&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202007&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202008&amp;#34;&lt;/span&gt;),(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Q&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s execute the function.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; resp_OECD(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MEI_ARCHIVE&amp;#39;&lt;/span&gt;,dimensions,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2019-Q1&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2020-Q2&amp;#39;&lt;/span&gt;)
result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## LOCATION       8266
## VAR            8266
## EDI            8266
## FREQUENCY      8266
## TIME_PERIOD    8266
## value          8266
## dtype: int64
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let&amp;rsquo;s look at the first few cases of data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##   LOCATION  VAR     EDI FREQUENCY TIME_PERIOD  value
## 0      BEL  201  202001         M     2019-01  112.5
## 1      BEL  201  202001         M     2019-02  111.8
## 2      BEL  201  202001         M     2019-03  109.9
## 3      BEL  201  202001         M     2019-04  113.5
## 4      BEL  201  202001         M     2019-05  112.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can see that the data is stored in tidy form (long type). The most right value is stored as a value, and the other indexes are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LOCATION - Country&lt;/li&gt;
&lt;li&gt;VAR - Items&lt;/li&gt;
&lt;li&gt;EDI - At the time of acquisition (in the case of MEI_ARCHIVE)&lt;/li&gt;
&lt;li&gt;FREQUENCY - Frequency (monthly, quarterly, etc.)&lt;/li&gt;
&lt;li&gt;TIME_PERIOD - Reference point for statistics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Therefore, the same `TIME_PERIOD` exists in rows with different EDIs. For example, above you can see the data for 2019-01~2019-05 available as of 2020/01 for the Belgian (BEL) Industrial Production Index (201). This is very much appreciated as it is provided in Long format, which is also easy to visualize and regress. Here&amp;rsquo;s a visualization of the industrial production index as it is updated.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; seaborn &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sns
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; result[result[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FREQUENCY&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;]
result[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TIME_PERIOD&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_datetime(result[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TIME_PERIOD&amp;#39;&lt;/span&gt;],format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y-%m&amp;#39;&lt;/span&gt;)
sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;relplot(data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;result[&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; df: (df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;VAR&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;201&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; (pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_numeric(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;EDI) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;202004&lt;/span&gt;)],x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TIME_PERIOD&amp;#39;&lt;/span&gt;,y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;,hue&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;LOCATION&amp;#39;&lt;/span&gt;,kind&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;,col&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EDI&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../../en/post/post22/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;1056&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../../en/post/post22/index_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;2035&#34; /&gt;&lt;/p&gt;
&lt;p&gt;While we can see that the line graphs are depressed as the economic damage from the corona increases, there have been subtle but significant revisions to the historical values from preliminary to confirmed. We can also see that there is a lag in the release of statistical data by country. Belgium seems to be the slowest to release the data. When I have time, I would like to add a simple analysis of the forecasting model using this data.&lt;/p&gt;
&lt;h2 id=&#34;4-another-matter&#34;&gt;4. Another matter&amp;hellip;&lt;/h2&gt;
&lt;p&gt;I passed the Python 3 Engineer Certification Data Analysis exam. It was pretty easy, with only a 70% pass rate, but it was a good opportunity to revisit the basics of &lt;code&gt;Python&lt;/code&gt;. I haven&amp;rsquo;t even had the opportunity to use &lt;code&gt;Python&lt;/code&gt; or &lt;code&gt;R&lt;/code&gt;, let alone data analysis, in the work I&amp;rsquo;m doing now, so I&amp;rsquo;m considering the possibility of a career change. In the meantime, I plan to get the following qualifications by the end of this year, and I&amp;rsquo;ll be looking for a post where I can use my skills without focusing on finance. Like a diet, I need to declare and push myself.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;G Test&lt;/li&gt;
&lt;li&gt;Oracle Database Master Silver SQL&lt;/li&gt;
&lt;li&gt;Linuc level 1&lt;/li&gt;
&lt;li&gt;Fundamental Information Technology Engineer Examination&lt;/li&gt;
&lt;li&gt;AWS Certified Solutions Architect - Associate&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I will report on the status of my acceptance on my blog each time.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;gross domestic product and its expenditure items, industrial production and construction output indices, balance of payments, composite leading indicators, consumer price index, retail turnover, unemployment rate, number of workers, hourly wages, money supply, trade statistics, etc. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>I predicted the standings based on horse photos using CNN.</title>
      <link>/en/post/post18/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/en/post/post18/</guid>
      <description>&lt;p&gt;Hi. This time I would like to write an article about predicting horse racing. In the last post, I created a prediction model for horse racing rankings using table data obtained from yahoo horse racing using &lt;code&gt;LightGBM&lt;/code&gt;. I used structural data last time, but anyone can do this kind of analysis in these days. So this time, I developed a &lt;code&gt;Convolutional Neural Network&lt;/code&gt; (CNN) which extracts features from a horse&amp;rsquo;s body image and predicts its ranking. This is the second time I&amp;rsquo;ve used &lt;code&gt;Earth Engine&lt;/code&gt; to analyze satellite images, and the first time I&amp;rsquo;ve used deep learning in this blog. The code is written in Python.&lt;/p&gt;
&lt;h2 id=&#34;1-crawling-for-data-collection&#34;&gt;1. Crawling for data collection&lt;/h2&gt;
&lt;p&gt;The first step is to collect images of the horse&amp;rsquo;s body from the internet; the best thing to do would be to use pictures of the paddock on race day. However, as far as I&amp;rsquo;ve been able to find, there are no sites that post photos of the paddock in a cohesive format. It may be interesting to use it as a clipped image or to apply it as a video to the &lt;code&gt;Encoder-Decoder&lt;/code&gt; model of CNN to RNN, because it may be that a horse racing fan may have a paddock video on Youtube. However, I don&amp;rsquo;t have the ability to do that much.&lt;/p&gt;
&lt;h3 id=&#34;where-to-get-the-data-from&#34;&gt;Where to get the data from&lt;/h3&gt;
&lt;p&gt;So in this case, the data is taken from &lt;a href=&#34;https://www.daily.co.jp/horse/horsecheck/photo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Daley&amp;rsquo;s Web site&lt;/a&gt;. Here you can find pre-race photos of horses running in the last 1 year? You can find pre-race photos of horses running in G1 races in the past year? Horse bettors who can&amp;rsquo;t go to the actual racecourse can look at these pictures and analyze the condition of the horses.&lt;br&gt;
Please note that this site does not include body photos of all the horses that are entered in the race. Also, since this is only a limited number of G1 races, it&amp;rsquo;s entirely possible that all the horses are finished to begin with, and it&amp;rsquo;s entirely possible that you won&amp;rsquo;t be able to tell the difference. However, I&amp;rsquo;ll make it a priority to try and do it quickly and use this data for this one.&lt;/p&gt;
&lt;h3 id=&#34;running-crawling-by-selenium&#34;&gt;Running crawling by selenium&lt;/h3&gt;
&lt;p&gt;For crawling, we&amp;rsquo;ll use selenium. I won&amp;rsquo;t go into web crawling as I&amp;rsquo;m mainly using CNN in this article. The code I used is as follows.&lt;br&gt;
[Note] If you use the following codes, please do so at your own risk.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; webdriver
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium.webdriver.chrome.options &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Options
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium.webdriver.support.select &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Select
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium.webdriver.common.by &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; By
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium.webdriver.common.keys &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Keys
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium.webdriver.common.alert &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Alert
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium.webdriver.support.ui &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; WebDriverWait
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium.webdriver.support &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; expected_conditions &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; EC
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium.common.exceptions &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; TimeoutException
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium.webdriver.common.action_chains &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ActionChains
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; time &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sleep
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; urllib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; request
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random

&lt;span style=&#34;color:#75715e&#34;&gt;# selenium option settings (spell)&lt;/span&gt;
options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Options()
options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--disable-gpu&amp;#39;&lt;/span&gt;);
options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--disable-extensions&amp;#39;&lt;/span&gt;);
options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--proxy-server=&amp;#34;direct://&amp;#34;&amp;#39;&lt;/span&gt;);
options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--proxy-bypass-list=*&amp;#39;&lt;/span&gt;);
options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--start-maximized&amp;#39;&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;# driver specification&lt;/span&gt;
DRIVER_PATH &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C:/Users/aashi/Desktop/chromedriver_win32/chromedriver.exe&amp;#39;&lt;/span&gt;
driver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; webdriver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Chrome(executable_path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;DRIVER_PATH, chrome_options&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;options)

&lt;span style=&#34;color:#75715e&#34;&gt;# Pass the url and go to the site&lt;/span&gt;
url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://www.daily.co.jp/horse/horsecheck/photo/&amp;#39;&lt;/span&gt;
driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(url)
driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;implicitly_wait(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# Maximum time to wait for an object to load, and if this is exceeded, an error&lt;/span&gt;
sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 1 second sleep as the web page transition is performed&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Image data is saved for each race.&lt;/span&gt;
selector0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;body &amp;gt; div &amp;gt; main &amp;gt; div &amp;gt; div.primaryContents &amp;gt; article &amp;gt; div &amp;gt; section &amp;gt; a&amp;#34;&lt;/span&gt;
elements &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_elements_by_css_selector(selector0)
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,len(elements)):
  elements &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_elements_by_css_selector(selector0)
  element &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; elements[i]
  element&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;click()
  sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 5 seconds sleep as the web page transition is performed&lt;/span&gt;

  target &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_element_by_link_text(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Ｇ１馬体診断写真集のTOP&amp;#39;&lt;/span&gt;)
  actions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ActionChains(driver)
  actions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;move_to_element(target)
  actions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;perform()
  sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 5 seconds sleep as the web page transition is performed&lt;/span&gt;
  selector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;body &amp;gt; div.wrapper.horse.is-fixedHeader.is-fixedAnimation &amp;gt; main &amp;gt; div &amp;gt; div.primaryContents &amp;gt; article &amp;gt; article &amp;gt; div.photoDetail-wrapper &amp;gt; section &amp;gt; div &amp;gt; figure&amp;#34;&lt;/span&gt;
  figures &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_elements_by_css_selector(selector)
  download_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C:\Users\aashi\umanalytics\photo\image&amp;#39;&lt;/span&gt;
  selector &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;body &amp;gt; div &amp;gt; main &amp;gt; div &amp;gt; div.primaryContents &amp;gt; article &amp;gt; article &amp;gt; div.photoDetail-wrapper &amp;gt; section &amp;gt; h1&amp;#34;&lt;/span&gt;
  race_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_element_by_css_selector(selector)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; figure &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; figures:
    img_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; figure&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_element_by_tag_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;figcaption&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
    horse_src &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; figure&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_element_by_tag_name(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;img&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_attribute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;src&amp;#34;&lt;/span&gt;)    
    save_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; download_dir &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; race_name &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; img_name &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.jpg&amp;#39;&lt;/span&gt;
    request&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;urlretrieve(horse_src,save_name)
  driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;back()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The saved images were cross-checked with the actual race results and manually divided into the top three groups and the rest of the groups. The images are saved as follows.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;horse_photo.PNG&#34; alt=&#34;Stored Horse Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;This completes the collection of the original data.&lt;/p&gt;
&lt;h2 id=&#34;2-training-cnn-using-keras&#34;&gt;2. Training CNN using &lt;code&gt;Keras&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id=&#34;what-is-keras&#34;&gt;What is Keras?&lt;/h3&gt;
&lt;p&gt;Now, let&amp;rsquo;s train CNN using &lt;code&gt;Keras&lt;/code&gt;. &lt;code&gt;Keras&lt;/code&gt; is one of the &lt;code&gt;Neural Network&lt;/code&gt; libraries that runs on &lt;code&gt;Tensorflow&lt;/code&gt; and &lt;code&gt;Theano&lt;/code&gt;. &lt;code&gt;Keras&lt;/code&gt; is one of the &lt;code&gt;Neural Network&lt;/code&gt; libraries that runs on &lt;code&gt;Tensorflow&lt;/code&gt; and &lt;code&gt;Theano&lt;/code&gt;. &lt;code&gt;Keras&lt;/code&gt; is characterized by its ability to build models with relatively short code and its many learning algorithms.&lt;/p&gt;
&lt;h3 id=&#34;what-is-cnn&#34;&gt;What is CNN?&lt;/h3&gt;
&lt;p&gt;CNN is a type of &lt;code&gt;(Deep) Neural Network&lt;/code&gt; often used in image analysis, and as its name suggests, it is an additional &lt;code&gt;convolution&lt;/code&gt;. Convolution is a process like the following.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/t/tdualdir/20180501/20180501211957.png&#34; alt=&#34;Convolutional Layer Processing&#34;&gt;&lt;/p&gt;
&lt;p&gt;The input here is the image data. Image analysis recognizes and analyzes images as numerical values. The image on the computer is represented by the &lt;code&gt;RGB&lt;/code&gt; value, which is a numerical value from 0 to 255 of three colors, red (Red), green (Green) and blue (Blue). There are three layers of vectors in the form of 255 red, 0 green, 0 blue, and so on, and in this case a perfect red is represented. In the case above, you can think of a, b, c, etc. as representing one of the &lt;code&gt;RGB&lt;/code&gt; values of each pixel. Convolution calculates the features of an image by taking the inner product of these &lt;code&gt;RGB&lt;/code&gt; values with a matrix called the kernel. The following video(Japanese) is a good example of what the convolution layer means.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/vU-JfZNBdYU&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;By learning the kernel to successfully get the distinctive parts of that image, it is possible to identify the image. I think the convolutional layer is the most important part of the CNN.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://th.bing.com/th/id/OIP.F2Ik_XFzmu5jZF-byiAKQQHaCg?w=342&amp;amp;h=118&amp;amp;c=7&amp;amp;o=5&amp;amp;dpr=1.25&amp;amp;pid=1.7&#34; alt=&#34;The Big Picture of CNN&#34;&gt;&lt;/p&gt;
&lt;p&gt;As shown in the above figure, CNN has not only convolutional layers but also input and output layers as well as usual &lt;code&gt;Neural Network&lt;/code&gt; layers. If you want to know about the &lt;code&gt;MaxPooling&lt;/code&gt; layer, see the following movie(Japanese).&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/MLixg9K6oeU&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Although the gradient method is known as the most orthodox training method for deep learning, various extension algorithms such as &lt;code&gt;Adam&lt;/code&gt; have been proposed. Basically, &lt;code&gt;Adam&lt;/code&gt; or &lt;code&gt;momentum&lt;/code&gt; is often used.&lt;/p&gt;
&lt;h3 id=&#34;coding&#34;&gt;Coding&lt;/h3&gt;
&lt;p&gt;Now, let&amp;rsquo;s get to the coding.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; keras.utils &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; np_utils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Using TensorFlow backend.
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; keras.models &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Sequential
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; keras.layers.convolutional &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; MaxPooling2D
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; keras.layers &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Activation, Conv2D, Flatten, Dense,Dropout
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.model_selection &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; train_test_split
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; keras.optimizers &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SGD, Adadelta, Adagrad, Adam, Adamax, RMSprop, Nadam
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; PIL &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Image
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; glob
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first step is to convert the collected image data to numerical data to create the training data.
The directory structure is as follows, with the top image and other images being stored in separate directories. When we read in the images from each directory, we give a category variable of 1 for the top image and 0 for others.&lt;/p&gt;
&lt;p&gt;photograph of a horse&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;superior (in rank)&lt;/li&gt;
&lt;li&gt;Other&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Specify a folder&lt;/span&gt;
folders &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\aashi\umanalytics\photo\image&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;#Specify the total number of strokes (50 x 50 x 3 in this case).&lt;/span&gt;
image_size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;
dense_size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(folders)

X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
Y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []

&lt;span style=&#34;color:#75715e&#34;&gt;#Reads an image from each folder and converts it to a numpy array of RGB values using the Image function&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i, folder &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(folders):
  files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glob&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glob(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:/Users/aashi/umanalytics/photo/image/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; folder &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/*.jpg&amp;#34;&lt;/span&gt;)
  index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k, file &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(files):
    image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open(file)
    image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;convert(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;convert(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RGB&amp;#34;&lt;/span&gt;)
    image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resize((image_size, image_size)) &lt;span style=&#34;color:#75715e&#34;&gt;#I&amp;#39;m dropping the number of pixels.&lt;/span&gt;
 
    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;asarray(image)
    X&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(data)
    Y&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(index)

X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(X)
Y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(Y)
X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; X&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float32&amp;#39;&lt;/span&gt;)
X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; X &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;255.0&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Conversion to 0~1&lt;/span&gt;
X&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
Y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np_utils&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_categorical(Y, dense_size)

&lt;span style=&#34;color:#75715e&#34;&gt;#splitting training data and test data&lt;/span&gt;
X_train, X_test, y_train, y_test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; train_test_split(X, Y, test_size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.20&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ve been able to split the training data and the test data. What I&amp;rsquo;m considering now is a binary classification of &amp;ldquo;top&amp;rdquo; and &amp;ldquo;other&amp;rdquo;, but I defined &amp;ldquo;top&amp;rdquo; as the top 3, so the data is unbalanced (about 5 times as much other data as the top data). In this case, if we train on the data as it is, it is easier to predict the label with the larger sample size (in this case, &amp;ldquo;other&amp;rdquo;), and the model will have a bias. Therefore, it is necessary to adjust the training data so that the sample size is the same for each of the two classes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;index_zero &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;choice(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(y_train[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;))[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,],np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count_nonzero(y_train[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),replace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)
index_one &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(y_train[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
y_resampled &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y_train[np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hstack((index_one,index_zero))]
X_resampled &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; X_train[np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hstack((index_one,index_zero))]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will use this &lt;code&gt;y_resampled&lt;/code&gt; and &lt;code&gt;X_resampled&lt;/code&gt; for the training data. Next, we will build the CNN. In &lt;code&gt;Keras&lt;/code&gt;, a model is defined by specifying a &lt;code&gt;sequential model&lt;/code&gt; and adding a layer by &lt;code&gt;add&lt;/code&gt; method.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Sequential()
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Conv2D(&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), padding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;same&amp;#39;&lt;/span&gt;,input_shape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;X_train&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:]))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Activation(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relu&amp;#39;&lt;/span&gt;))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Conv2D(&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Activation(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relu&amp;#39;&lt;/span&gt;))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(MaxPooling2D(pool_size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Dropout(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;))

model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Conv2D(&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), padding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;same&amp;#39;&lt;/span&gt;))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Activation(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relu&amp;#39;&lt;/span&gt;))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Conv2D(&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Activation(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relu&amp;#39;&lt;/span&gt;))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(MaxPooling2D(pool_size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Dropout(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;))

model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Flatten())
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Dense(&lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Activation(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relu&amp;#39;&lt;/span&gt;))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Dropout(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Dense(dense_size))
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(Activation(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;softmax&amp;#39;&lt;/span&gt;))

model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;summary()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Model: &amp;quot;sequential_1&amp;quot;
## _________________________________________________________________
## Layer (type)                 Output Shape              Param #   
## =================================================================
## conv2d_1 (Conv2D)            (None, 300, 300, 32)      896       
## _________________________________________________________________
## activation_1 (Activation)    (None, 300, 300, 32)      0         
## _________________________________________________________________
## conv2d_2 (Conv2D)            (None, 298, 298, 32)      9248      
## _________________________________________________________________
## activation_2 (Activation)    (None, 298, 298, 32)      0         
## _________________________________________________________________
## max_pooling2d_1 (MaxPooling2 (None, 149, 149, 32)      0         
## _________________________________________________________________
## dropout_1 (Dropout)          (None, 149, 149, 32)      0         
## _________________________________________________________________
## conv2d_3 (Conv2D)            (None, 149, 149, 64)      18496     
## _________________________________________________________________
## activation_3 (Activation)    (None, 149, 149, 64)      0         
## _________________________________________________________________
## conv2d_4 (Conv2D)            (None, 147, 147, 64)      36928     
## _________________________________________________________________
## activation_4 (Activation)    (None, 147, 147, 64)      0         
## _________________________________________________________________
## max_pooling2d_2 (MaxPooling2 (None, 73, 73, 64)        0         
## _________________________________________________________________
## dropout_2 (Dropout)          (None, 73, 73, 64)        0         
## _________________________________________________________________
## flatten_1 (Flatten)          (None, 341056)            0         
## _________________________________________________________________
## dense_1 (Dense)              (None, 512)               174621184 
## _________________________________________________________________
## activation_5 (Activation)    (None, 512)               0         
## _________________________________________________________________
## dropout_3 (Dropout)          (None, 512)               0         
## _________________________________________________________________
## dense_2 (Dense)              (None, 2)                 1026      
## _________________________________________________________________
## activation_6 (Activation)    (None, 2)                 0         
## =================================================================
## Total params: 174,687,778
## Trainable params: 174,687,778
## Non-trainable params: 0
## _________________________________________________________________
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now, let&amp;rsquo;s get to the learning part. We&amp;rsquo;ll use &lt;code&gt;Adadelta&lt;/code&gt; for the algorithm. I don&amp;rsquo;t really understand it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;optimizers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Adadelta&amp;#34;&lt;/span&gt;
results &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
epochs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;
model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compile(loss&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;categorical_crossentropy&amp;#39;&lt;/span&gt;, optimizer&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;optimizers, metrics&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;accuracy&amp;#39;&lt;/span&gt;])
results &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fit(X_resampled, y_resampled, validation_split&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;, epochs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;epochs)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;undersampling-for-unbalanced-data-adjustment&#34;&gt;Undersampling for unbalanced data adjustment&lt;/h3&gt;
&lt;p&gt;From here, we perform binary classification with Test data, but since we are undersampling the training data, we have an undersampled sample selection bias when calculating the prediction probability. The paper is available &lt;a href=&#34;https://www3.nd.edu/~dial/publications/dalpozzolo2015calibrating.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Therefore, I would like to formulate this part of the problem here, although a correction is needed. I will describe the current binary classification problem as the problem of predicting the objective variable &lt;code&gt;\(Y\)&lt;/code&gt;, which takes a binary value from the explanatory thousand &lt;code&gt;\(X\)&lt;/code&gt;. Let &lt;code&gt;\((X,Y)\)&lt;/code&gt; be a dataset where the positive example is considerably less than the negative example and the sample size of the negative example is matched to the positive example as &lt;code&gt;\((X_s,Y_s)\)&lt;/code&gt;. We define a categorical variable &lt;code&gt;\(s\)&lt;/code&gt; that takes 1 if the &lt;code&gt;\((X,Y)\)&lt;/code&gt; sample set is also included in &lt;code&gt;\((X_s,Y_s)\)&lt;/code&gt; and 0 if it is not.
Given an explanatory variable &lt;code&gt;\(x\)&lt;/code&gt; to the model constructed using the dataset &lt;code&gt;\((X,Y)\)&lt;/code&gt;, the positive example and the conditional probability of predicting can be expressed as &lt;code&gt;\(P(y=1|x)\)&lt;/code&gt;. On the other hand, the conditional probability of predicting a positive example in a model constructed using &lt;code&gt;\((X_s,Y_s)\)&lt;/code&gt; can be expressed as &lt;code&gt;\(P(y=1|x)\)&lt;/code&gt; using Bayes&#39; theorem and the categorical variable &lt;code&gt;\(s\)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;$$
P(y=1|x,s=1) = \frac{P(s=1|y=1)P(y=1|x)}{P(s=1|y=1)P(y=1|x) + P(s=1|y=0)P(y=0|x)}
$$
It can be written as. Since &lt;code&gt;\((X_s,Y_s)\)&lt;/code&gt; matches the sample size of the negative example to the positive example, &lt;code&gt;\(P(s=1,y=1)=1\)&lt;/code&gt;, the above formula is rewritten as&lt;/p&gt;
&lt;p&gt;$$
P(y=1|x,s=1) = \frac{P(y=1|x)}{P(y=1|x) + P(s=1|y=0)P(y=0|x)}
= \frac{P(y=1|x)}{P(y=1|x) + P(s=1|y=0)(1-P(y=1|x))}
$$
It is self-evident from the definition of &lt;code&gt;\((X_s,Y_s)\)&lt;/code&gt; that &lt;code&gt;\(P(s=1|y=0)\neq0\)&lt;/code&gt; (0 would result in unbalanced data with only positive examples). Thus, as long as &lt;code&gt;\(P(y=0,x) \neq0\)&lt;/code&gt;, the probability that the undersampling model will be rejected as a positive example is positively biased against the probability that the original data set will produce. What we want to find is &lt;code&gt;\(P(y=1|x)\)&lt;/code&gt; with no bias, so &lt;code&gt;\(P=P(y=1|x),P_s=P(y|x,s=1),\beta=P(s=1,y=0)\)&lt;/code&gt;, then we can get&lt;/p&gt;
&lt;p&gt;$$
P = \frac{\beta P_s}{\beta P_s-P_s+1}
$$
and can use this relationship formula to correct for bias.
Let&amp;rsquo;s define what we&amp;rsquo;ve just identified as a function.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;calibration&lt;/span&gt;(y_proba, beta):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; y_proba &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (y_proba &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y_proba) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; beta)

sampling_rate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum(y_train[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; sum(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y_train[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])
y_proba_calib &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; calibration(model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;predict(X_test), sampling_rate)
y_pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np_utils&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_categorical(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argmax(y_proba_calib,axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;), dense_size)

&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.metrics &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; confusion_matrix, ConfusionMatrixDisplay, accuracy_score
score &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; accuracy_score(y_test, y_pred)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Test accuracy:&amp;#39;&lt;/span&gt;, score)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## Test accuracy: 0.3220338983050847
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It&amp;rsquo;s not good at all. I ran the &lt;code&gt;ConfusionMatrix&lt;/code&gt; and found out that it doesn&amp;rsquo;t work.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ConfusionMatrixDisplay(confusion_matrix(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argmax(y_test,axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;), np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argmax(y_pred,axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;## &amp;lt;sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x000000004A54CC88&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../../en/post/post18/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I did a bias correction for the imbalance data, but the model is still very predictive of negative values. This doesn&amp;rsquo;t work.&lt;/p&gt;
&lt;h2 id=&#34;3-interpretation-of-results-using-shap-values&#34;&gt;3. Interpretation of results using Shap values&lt;/h2&gt;
&lt;p&gt;I would like to consider the &lt;code&gt;shap&lt;/code&gt; value of the model we just learned and interpret the results. I&amp;rsquo;ll add an explanation of the &lt;code&gt;shap&lt;/code&gt; value when I have time. Simply put, the visualization captures which parts of the image the CNN captured features and predicted the horse to be at the top. We&amp;rsquo;ll be analyzing this horse.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;imshow(X_test[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../../en/post/post18/index_files/figure-html/unnamed-chunk-14-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; shap
background &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; X_train[np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;choice(X_train&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,replace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)]

e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; shap&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GradientExplainer(model,background)

shap_values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shap_values(X_test[[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]])
shap&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image_plot(shap_values[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],X_test[[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../../en/post/post18/index_files/figure-html/unnamed-chunk-15-5.png&#34; width=&#34;576&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s very subtle, but it looks like you&amp;rsquo;re appreciating the legs and buttocks, etc. It needs to be cropped to take out the horse&amp;rsquo;s body only, since it seems to be responding to the background. I think I need to build a model for object detection. I&amp;rsquo;ll think about this another time.&lt;/p&gt;
&lt;h2 id=&#34;4-finally&#34;&gt;4. Finally&lt;/h2&gt;
&lt;p&gt;To be honest, it hasn&amp;rsquo;t worked out at all. Is it still difficult to predict rankings from the horse&amp;rsquo;s body? Does multiplying it with other variables change the results? I don&amp;rsquo;t think I&amp;rsquo;m able to extract good features from the horses as it is.
Do I need to get to the point where I can get a paddock video from Youtube and analyze it with the &lt;code&gt;Encoder-Decoder&lt;/code&gt; model to make it work? I&amp;rsquo;d love to do it when I&amp;rsquo;m good enough to do it (I don&amp;rsquo;t know when that will be). Until then, I need to improve my PC specs. Maybe I&amp;rsquo;ll use the cash handout.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scraping past race results on yahoo horse racing on rvest (for the second time)</title>
      <link>/en/post/post11/</link>
      <pubDate>Sat, 13 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/en/post/post11/</guid>
      <description>&lt;p&gt;For the second time, I&amp;rsquo;d like to drop past race results in rvest again. If you haven&amp;rsquo;t seen the past articles, I suggest you look at that one first.&lt;/p&gt;
&lt;p&gt;The reason I decided to take back the data this time is because I wanted to add more items to the explanatory variables when analyzing horse racing. So this time I created the program as an addition to the previous R script. The 14 new data items I added are as follows&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;grass or dirt.&lt;/li&gt;
&lt;li&gt;right-handed or left-handed.&lt;/li&gt;
&lt;li&gt;race conditions (good or slight)&lt;/li&gt;
&lt;li&gt;weather&lt;/li&gt;
&lt;li&gt;the color of the horse&amp;rsquo;s coat (chestnut, deer hair, etc.)&lt;/li&gt;
&lt;li&gt;horse owner&lt;/li&gt;
&lt;li&gt;producers&lt;/li&gt;
&lt;li&gt;place of origin&lt;/li&gt;
&lt;li&gt;date of birth&lt;/li&gt;
&lt;li&gt;the father&amp;rsquo;s horse&lt;/li&gt;
&lt;li&gt;the mother&amp;rsquo;s horse&lt;/li&gt;
&lt;li&gt;winnings up to that race (available from 2003)&lt;/li&gt;
&lt;li&gt;jockey&amp;rsquo;s weight.&lt;/li&gt;
&lt;li&gt;increase or decrease in the weight of the jockey.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Actually, I haven&amp;rsquo;t finished collecting data yet, and the R program has been running for a long time (I&amp;rsquo;ve been running it for about 3 days). However, the program itself is running tightly and I&amp;rsquo;ll try to introduce the script. Maybe I&amp;rsquo;ll write the results in a postscript.&lt;/p&gt;
&lt;h2 id=&#34;1-script&#34;&gt;1. Script&lt;/h2&gt;
&lt;p&gt;The first step is to call the package.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Web scraping of horse racing data by rvest&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#install.packages(&amp;#34;rvest&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#if (!require(&amp;#34;pacman&amp;#34;)) install.packages(&amp;#34;pacman&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#install.packages(&amp;#34;beepr&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#install.packages(&amp;#34;RSQLite&amp;#34;)&lt;/span&gt;
pacman&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;p_load&lt;/span&gt;(qdapRegex)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(rvest)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(stringr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dplyr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(beepr)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(RSQLite)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;m pretty much warnning out, so I&amp;rsquo;m banning it and connecting to SQLite&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# warning prohibition&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt;(warn&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Connecting to SQLite&lt;/span&gt;
con &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dbConnect&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;SQLite&lt;/span&gt;(), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;horse_data.db&amp;#34;&lt;/span&gt;, synchronous&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;off&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Since the odds are only available since 1994, the data is taken from 1994 up to the most recent date. yahoo horse racing has races organized by month, so the data is taken using that as a variable. Basically, you go to &lt;a href=&#34;https://keiba.yahoo.co.jp/schedule/list/2018/?month=7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;List of race results for the relevant year and month&lt;/a&gt; and then go to &lt;a href=&#34;https://keiba.yahoo.co.jp/race/list/18020106/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Timetable for each day of the race&lt;/a&gt; for each day on that page. Since there are roughly a dozen or so races at each individual track, get the link and go to the &lt;a href=&#34;https://keiba.yahoo.co.jp/race/result/1802010601/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;race results page&lt;/a&gt; for each race. Then you will get the race results. The first step is to get a link to the timetable for each individual racecourse for each day.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;(year in &lt;span style=&#34;color:#ae81ff&#34;&gt;1994&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;){
  start.time &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.time&lt;/span&gt;() &lt;span style=&#34;color:#75715e&#34;&gt;# calculate time&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Retrieve the race results page on Yahoo!&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(k in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;){ &lt;span style=&#34;color:#75715e&#34;&gt;# K is for the month.&lt;/span&gt;
    
    &lt;span style=&#34;color:#a6e22e&#34;&gt;tryCatch&lt;/span&gt;(
      {
        keiba.yahoo &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp/schedule/list/&amp;#34;&lt;/span&gt;, year,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/?month=&amp;#34;&lt;/span&gt;,k)) &lt;span style=&#34;color:#75715e&#34;&gt;# Access to the list of race results for a given year and month&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.sleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
        race_lists &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; keiba.yahoo &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
          &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
          &lt;span style=&#34;color:#a6e22e&#34;&gt;html_attr&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# Retrieve all URLs&lt;/span&gt;
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# Get the list of races for each day by track&lt;/span&gt;
        race_lists &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_lists&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_lists, pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;race/list/\\d+/&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#75715e&#34;&gt;# Extracts URLs containing &amp;#34;results&amp;#34;.&lt;/span&gt;
      }
      , error &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(e){signal &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}
    )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here, we only extract the links we get that contain the word result in the url. In essence, it is a link to the race tables of each racecourse. From here, we use the links to the race tables of the tracks to access that page and get the links to the pages that contain the results of all 12 races.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(j in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race_lists)){ &lt;span style=&#34;color:#75715e&#34;&gt;# where j is the link to the race table for the year in question.&lt;/span&gt;
      
      &lt;span style=&#34;color:#a6e22e&#34;&gt;tryCatch&lt;/span&gt;(
        {
          race_list &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp&amp;#34;&lt;/span&gt;,race_lists[j]))
          race_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_list &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_attr&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 全urlを取得&lt;/span&gt;
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# Get the URL of the race results&lt;/span&gt;
          race_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_url&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_url, pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;result&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#75715e&#34;&gt;# Extracts URLs containing &amp;#34;results&amp;#34;.&lt;/span&gt;
        }
        , error &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(e){signal &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}
      )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now that we have the links to the results of each race, it&amp;rsquo;s time to get the race results and the formatting part of the code. It&amp;rsquo;s quite a long and complicated code. The race results are stored in the following table attributes, so we&amp;rsquo;ll simply pull them first.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(i in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race_url)){ &lt;span style=&#34;color:#75715e&#34;&gt;# where i is the race that was held at the racecourse in question&lt;/span&gt;
        
        &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(year, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;, k, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;,j, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; group &amp;#34;&lt;/span&gt;, i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; order&amp;#34;&lt;/span&gt;))
        
        &lt;span style=&#34;color:#a6e22e&#34;&gt;tryCatch&lt;/span&gt;(
          {
            race1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp&amp;#34;&lt;/span&gt;,race_url[i])) &lt;span style=&#34;color:#75715e&#34;&gt;# Get the URL of the race results&lt;/span&gt;
            signal &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.sleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
          }
          , error &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(e){signal &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}
        )
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# If the race is aborted or there are no errors in the process so far, run the process&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;identical&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
                      &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@class = &amp;#39;resultAtt mgnBL fntSS&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
                      &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;(),&lt;span style=&#34;color:#a6e22e&#34;&gt;character&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; signal &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# Scraping the race results&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//table[@id = &amp;#39;raceScore&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_table&lt;/span&gt;()
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;do.call&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data.frame&amp;#34;&lt;/span&gt;,race_result) &lt;span style=&#34;color:#75715e&#34;&gt;# Change the list to a data frame.&lt;/span&gt;
          
          &lt;span style=&#34;color:#a6e22e&#34;&gt;colnames&lt;/span&gt;(race_result) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;order&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;frame_number&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;horse_number&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;horse_name/age&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time/margin&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;passing_rank/last_3F&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jockey/weight&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;popularity/odds&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;trainer&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;#　column renaming&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you just get a table, it will not be useful for analysis because of the following \n or multiple information in one cell. So, we need to mold the data into a form.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# Passing order and time for 3 furlongs uphill&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,passing_rank&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`passing_rank/last_3F`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(\\d{2}-\\d{2}-\\d{2}-\\d{2})|(\\d{2}-\\d{2}-\\d{2})|(\\d{2}-\\d{2})&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,last_3F&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`passing_rank/last_3F`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d{2}\\.\\d&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-6&lt;/span&gt;]
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# Time and Difference&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`time/margin`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d\\.\\d{2}\\.\\d|\\d{2}\\.\\d&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,margin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`time/margin`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./.馬身|.馬身|.[:space:]./.馬身|[ア-ン-]+&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;margin[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;order&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;トップ&amp;#34;&lt;/span&gt;
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;margin[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;margin&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;character(0)&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;大差&amp;#34;&lt;/span&gt;
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;margin[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;order&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-5&lt;/span&gt;]
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# Horse&amp;#39;s name, age and weight&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ァ-ヴー・]+&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_age&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;牡\\d+|牝\\d+|せん\\d+&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_sex &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_age, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;牡|牝|せん&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_age &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_age, pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d&amp;#34;&lt;/span&gt;)
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d{3}&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,horse_weight_change&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\([\\+|\\-]\\d+\\)|\\([\\d+]\\)&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_weight_change &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rm_round&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_weight_change, extract&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;), paste, collapse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,brinker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`horse_name/age`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;brinker[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;brinker&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;N&amp;#34;&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# jockey&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,jockey&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[ぁ-ん一-龠]+\\s[ぁ-ん一-龠]+|[:upper:].[ァ-ヶー]+&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,jockey_weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d{2}&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;jockey_weight_change &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;jockey_weight_change&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;☆&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;jockey_weight_change&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;△&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;jockey_weight_change&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`jockey/weight`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;△&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]
          
          &lt;span style=&#34;color:#75715e&#34;&gt;# Odds and popularity&lt;/span&gt;
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,odds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`popularity/odds`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\(.+\\)&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,popularity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;`popularity/odds`,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+[^(\\d+.\\d)]&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;odds &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sapply&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rm_round&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;odds, extract&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;), paste, collapse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result[&lt;span style=&#34;color:#ae81ff&#34;&gt;-4&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, we&amp;rsquo;ll import information other than the table we just retrieved. Specifically, race names, weather conditions, track conditions, dates, racecourses, etc. These information are listed at the top of the race results page.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# Race Information&lt;/span&gt;
          race_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;raceTitName&amp;#39;]/p[@id = &amp;#39;raceTitDay&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
          race_name &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;raceTitName&amp;#39;]/h1[@class = &amp;#39;fntB&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
          race_distance &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//p[@id = &amp;#39;raceTitMeta&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
        
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,race_date&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_date,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+年\\d+月\\d+日&amp;#34;&lt;/span&gt;)))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;年&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;月&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.Date&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_date)
          race_course &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_date,pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;札幌|函館|福島|新潟|東京|中山|中京|京都|阪神|小倉&amp;#34;&lt;/span&gt;))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_course &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_course
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,race_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_name,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\s&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)))
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(race_result,race_distance&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_distance,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+m&amp;#34;&lt;/span&gt;)))
          race_type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_distance,pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;芝|ダート&amp;#34;&lt;/span&gt;))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;type &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_type
          race_turn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(race_distance,pattern &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;右|左&amp;#34;&lt;/span&gt;))
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_turn &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_turn
          
          &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg ryou&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_condition &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;良&amp;#34;&lt;/span&gt;
          } else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg yayaomo&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_condition &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;稍重&amp;#34;&lt;/span&gt;
          } else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
                            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg omo&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_condition &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;重&amp;#34;&lt;/span&gt;
          } else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                            &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg furyou&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_condition &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;不良&amp;#34;&lt;/span&gt;
          } else race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_condition &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NA&amp;#34;&lt;/span&gt;
          
          &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg hare&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_weather &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;晴れ&amp;#34;&lt;/span&gt;
          } else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg ame&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_weather &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;曇り&amp;#34;&lt;/span&gt;
          } else &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//img[@class = &amp;#39;spBg kumori&amp;#39;]&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_weather &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;雨&amp;#34;&lt;/span&gt;
          } else race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;race_weather &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;その他&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The next step is to get information about each horse. In fact, the horse&amp;rsquo;s name in the table we got earlier is a link, and if you follow the link, you can get [information about each horse] (&lt;a href=&#34;https://keiba.yahoo.co.jp/directory/horse/2015105508/&#34;&gt;https://keiba.yahoo.co.jp/directory/horse/2015105508/&lt;/a&gt;) (such as coat color and date of birth).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;          horse_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_attr&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;) 
          horse_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; horse_url&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(horse_url, pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;directory/horse&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#75715e&#34;&gt;# Extract only links to horse information.&lt;/span&gt;
          
          &lt;span style=&#34;color:#a6e22e&#34;&gt;for &lt;/span&gt;(l in &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(horse_url)){
            &lt;span style=&#34;color:#a6e22e&#34;&gt;tryCatch&lt;/span&gt;(
              {
                horse1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp&amp;#34;&lt;/span&gt;,horse_url[l]))
                &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.sleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)
                horse_name &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; horse1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;dirTitName&amp;#39;]/h1[@class = &amp;#39;fntB&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                  &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
                horse &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; horse1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//div[@id = &amp;#39;dirTitName&amp;#39;]/ul&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; 
                  &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;colour[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(horse,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;毛色：.+&amp;#34;&lt;/span&gt;)) 
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;owner[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(horse,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;馬主：.+&amp;#34;&lt;/span&gt;))
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;farm[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(horse,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;生産者：.+&amp;#34;&lt;/span&gt;))
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;locality[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(horse,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;産地：.+&amp;#34;&lt;/span&gt;))
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_birthday[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(horse,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+年\\d+月\\d+日&amp;#34;&lt;/span&gt;))
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;father[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; horse1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//td[@class = &amp;#39;bloodM&amp;#39;][@rowspan = &amp;#39;4&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;mother[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; horse1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//td[@class = &amp;#39;bloodF&amp;#39;][@rowspan = &amp;#39;4&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_text&lt;/span&gt;()
              }
              , error &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(e){
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;colour[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt; 
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;owner[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;farm[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;locality[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_birthday[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;father[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;mother[race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;horse_name&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;horse_name] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
                }
            )
          }
          
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;colour &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;colour,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;毛色：&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;owner &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;owner,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;馬主：&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;farm &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;farm,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;生産者：&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;locality &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;locality,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;産地：&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
          &lt;span style=&#34;color:#75715e&#34;&gt;#race_result$horse_birthday &amp;lt;- str_replace_all(race_result$horse_birthday,&amp;#34;年&amp;#34;,&amp;#34;/&amp;#34;)&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;#race_result$horse_birthday &amp;lt;- str_replace_all(race_result$horse_birthday,&amp;#34;月&amp;#34;,&amp;#34;/&amp;#34;)&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;#race_result$horse_birthday &amp;lt;- as.Date(race_result$horse_birthday)&lt;/span&gt;
          
          race_result &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; dplyr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;arrange&lt;/span&gt;(race_result,horse_number) &lt;span style=&#34;color:#75715e&#34;&gt;# arrange in order of precedence&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The next step is to go and drop the amount of money you have won up to that race. You can access this by following the link marked [Runoffs] (&lt;a href=&#34;https://keiba.yahoo.co.jp/race/denma/1802010601/&#34;&gt;https://keiba.yahoo.co.jp/race/denma/1802010601/&lt;/a&gt;) on the race results page. This is where you will find the prize money and you will get it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;          yosou_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_attr&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;) 
          yosou_url &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; yosou_url&lt;span style=&#34;color:#a6e22e&#34;&gt;[str_detect&lt;/span&gt;(yosou_url, pattern&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;denma&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
          
          &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;(yosou_url)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
          yosou1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;read_html&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://keiba.yahoo.co.jp&amp;#34;&lt;/span&gt;,yosou_url)) 
          &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.sleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
          yosou &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; yosou1 &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;html_nodes&lt;/span&gt;(xpath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;//td[@class = &amp;#39;txC&amp;#39;]&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;()
          prize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; yosou&lt;span style=&#34;color:#a6e22e&#34;&gt;[grepl&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;万&amp;#34;&lt;/span&gt;,yosou)&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_extract_all&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\d+万&amp;#34;&lt;/span&gt;)
          prize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;do.call&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data.frame&amp;#34;&lt;/span&gt;,prize)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.character&lt;/span&gt;()
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;prize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; prize
          race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;prize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_replace_all&lt;/span&gt;(race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;prize,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;万&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.numeric&lt;/span&gt;()
          } else race_result&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;prize &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NA&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We create a data frame called dataset to store the results of each race and store the data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;## file storage&lt;/span&gt;
          &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(k &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
            dataset &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; race_result
          } else {
            dataset &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbind&lt;/span&gt;(dataset,race_result)
          }
        }else
        {
          &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;We couldn&amp;#39;t save it.&amp;#34;&lt;/span&gt;) 
        }
      }
    }
  }
  &lt;span style=&#34;color:#a6e22e&#34;&gt;beep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
  &lt;span style=&#34;color:#a6e22e&#34;&gt;write.csv&lt;/span&gt;(dataset,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;race_result2.csv&amp;#34;&lt;/span&gt;, row.names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
  
  &lt;span style=&#34;color:#a6e22e&#34;&gt;if &lt;/span&gt;(year &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1994&lt;/span&gt;){
    &lt;span style=&#34;color:#a6e22e&#34;&gt;dbWriteTable&lt;/span&gt;(con, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;race_result&amp;#34;&lt;/span&gt;, dataset)
  } else {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;dbWriteTable&lt;/span&gt;(con, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;temp&amp;#34;&lt;/span&gt;, dataset)
    &lt;span style=&#34;color:#a6e22e&#34;&gt;dbSendQuery&lt;/span&gt;(con, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INSERT INTO race_result select * from temp&amp;#34;&lt;/span&gt;)
    &lt;span style=&#34;color:#a6e22e&#34;&gt;dbSendQuery&lt;/span&gt;(con, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DROP TABLE temp&amp;#34;&lt;/span&gt;)
  }
}
end.time &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sys.time&lt;/span&gt;()
&lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str_c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;処理時間は&amp;#34;&lt;/span&gt;,end.time&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;start.time,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;です。&amp;#34;&lt;/span&gt;))
&lt;span style=&#34;color:#a6e22e&#34;&gt;beep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt;(warn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;dbDisconnect&lt;/span&gt;(con)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s all. The data taken is as follows&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(race_result)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;##   order frame_number horse_number   trainer passing_rank last_3F   time
## 1    10            1            1   田中 剛        09-09    39.0 1.14.3
## 2    16            1            2 天間 昭一        11-11    40.3 1.15.7
## 3    15            2            3 田中 清隆        14-14    39.4 1.15.1
## 4     9            2            4 中舘 英二        08-08    39.1 1.14.3
## 5    12            3            5 根本 康広        11-11    39.0 1.14.4
## 6     4            3            6 杉浦 宏昭        04-04    38.4 1.13.2
##      margin         horse_name horse_age horse_sex horse_weight
## 1    アタマ     サトノジョニー         3        牡          512
## 2 3 1/2馬身       ツギノイッテ         3        牡          464
## 3     3馬身           ギュウホ         3        牡          444
## 4 2 1/2馬身 セイウンメラビリア         3        牝          466
## 5      クビ サバイバルトリック         3        牝          450
## 6    アタマ       ステイホット         3        牝          474
##   horse_weight_change brinker      jockey jockey_weight jockey_weight_change
## 1                 +30       N   松岡 正海            56                    0
## 2                  +8       N 西田 雄一郎            56                    0
## 3                  +8       N   杉原 誠人            56                    0
## 4                 +10       N   村田 一誠            54                    0
## 5                  -2       N 野中 悠太郎            51                    0
## 6                  -2       N   大野 拓弥            54                    0
##    odds popularity  race_date race_course       race_name race_distance   type
## 1  40.3         9  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
## 2 340.9        16  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
## 3 283.1        14  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
## 4 299.7        15  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
## 5  26.7         8  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
## 6   2.4         1  2019-01-05        中山 サラ系3歳未勝利         1200m ダート
##   race_turn race_condition race_weather colour                           owner
## 1        右             良         晴れ   栗毛 株式会社 サトミホースカンパニー
## 2        右             良         晴れ 黒鹿毛                     西村 新一郎
## 3        右             良         晴れ   鹿毛           有限会社 ミルファーム
## 4        右             良         晴れ 青鹿毛                       西山 茂行
## 5        右             良         晴れ 黒鹿毛                       福田 光博
## 6        右             良         晴れ   栗毛                       小林 善一
##           farm   locality horse_birthday                 father
## 1   千代田牧場 新ひだか町  2016年1月29日         オルフェーヴル
## 2    織笠 時男     青森県  2016年4月17日 スクワートルスクワート
## 3    神垣 道弘 新ひだか町  2016年4月19日     ジャングルポケット
## 4  石郷岡 雅樹     新冠町  2016年4月21日     キンシャサノキセキ
## 5     原田牧場     日高町  2016年4月30日       リーチザクラウン
## 6 社台ファーム     千歳市  2016年3月13日     キャプテントゥーレ
##               mother prize
## 1 スパークルジュエル     0
## 2   エプソムアイリス     0
## 3     デライトシーン     0
## 4     ドリームシップ     0
## 5   フリーダムガール   180
## 6     ステイアライヴ   455
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
